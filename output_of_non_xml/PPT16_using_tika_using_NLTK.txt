				 *** Text Processing using NLTK *** 


============================ Sentence 1 =============================

OOPC++ UNIT-1   Prof. Rupesh G. Vaishnav rupesh.vaishnav@darshan.ac.in 94280-37452 Information & Network Security (2170709)	 Darshan Institute of Engineering & Technology UNIT-4 Asymmetric Ciphers      1  Outline Public Key Cryptosystems with Applications Requirements and Cryptanalysis RSA algorithm RSA computational aspects and security Diffie-Hillman Key Exchange algorithm Man-in-Middle attack   Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  X.800 and RFC 2828 International Telecommunication Union (ITU) 2  Symmetric key Encryption      Plaintext input Plaintext output Encryption Algorithm (e.g.-.- AES) Decryption Algorithm (reverse of encryption algorithm) Secret key shared by sender and recipient X  Secret key shared by sender and recipient K Transmitted cipher text  Y = E(K, X) K X  Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›      Plaintext input Plaintext output Encryption Algorithm (e.g.-.- RSA) Decryption Algorithm X  Transmitted cipher text  Y = E(PUa, X) X Bob’s Public key ring Alice   Ted  Mike  Joy Alice’s public key PUa Alice’s private key PRa Asymmetric key Encryption with Public Key Bob Alice The entire encrypted message serves as a confidentiality. 


>> Tokens are: 
 ['OOPC++', 'UNIT-1', 'Prof.', 'Rupesh', 'G.', 'Vaishnav', 'rupesh.vaishnav', '@', 'darshan.ac.in', '94280-37452', 'Information', '&', 'Network', 'Security', '(', '2170709', ')', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', 'UNIT-4', 'Asymmetric', 'Ciphers', '1', 'Outline', 'Public', 'Key', 'Cryptosystems', 'Applications', 'Requirements', 'Cryptanalysis', 'RSA', 'algorithm', 'RSA', 'computational', 'aspects', 'security', 'Diffie-Hillman', 'Key', 'Exchange', 'algorithm', 'Man-in-Middle', 'attack', 'Unit-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'X.800', 'RFC', '2828', 'International', 'Telecommunication', 'Union', '(', 'ITU', ')', '2', 'Symmetric', 'key', 'Encryption', 'Plaintext', 'input', 'Plaintext', 'output', 'Encryption', 'Algorithm', '(', 'e.g.-.-', 'AES', ')', 'Decryption', 'Algorithm', '(', 'reverse', 'encryption', 'algorithm', ')', 'Secret', 'key', 'shared', 'sender', 'recipient', 'X', 'Secret', 'key', 'shared', 'sender', 'recipient', 'K', 'Transmitted', 'cipher', 'text', 'Y', '=', 'E', '(', 'K', ',', 'X', ')', 'K', 'X', 'Unit-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Plaintext', 'input', 'Plaintext', 'output', 'Encryption', 'Algorithm', '(', 'e.g.-.-', 'RSA', ')', 'Decryption', 'Algorithm', 'X', 'Transmitted', 'cipher', 'text', 'Y', '=', 'E', '(', 'PUa', ',', 'X', ')', 'X', 'Bob', '’', 'Public', 'key', 'ring', 'Alice', 'Ted', 'Mike', 'Joy', 'Alice', '’', 'public', 'key', 'PUa', 'Alice', '’', 'private', 'key', 'PRa', 'Asymmetric', 'key', 'Encryption', 'Public', 'Key', 'Bob', 'Alice', 'The', 'entire', 'encrypted', 'message', 'serves', 'confidentiality', '.']

>> Bigrams are: 
 [('OOPC++', 'UNIT-1'), ('UNIT-1', 'Prof.'), ('Prof.', 'Rupesh'), ('Rupesh', 'G.'), ('G.', 'Vaishnav'), ('Vaishnav', 'rupesh.vaishnav'), ('rupesh.vaishnav', '@'), ('@', 'darshan.ac.in'), ('darshan.ac.in', '94280-37452'), ('94280-37452', 'Information'), ('Information', '&'), ('&', 'Network'), ('Network', 'Security'), ('Security', '('), ('(', '2170709'), ('2170709', ')'), (')', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', 'UNIT-4'), ('UNIT-4', 'Asymmetric'), ('Asymmetric', 'Ciphers'), ('Ciphers', '1'), ('1', 'Outline'), ('Outline', 'Public'), ('Public', 'Key'), ('Key', 'Cryptosystems'), ('Cryptosystems', 'Applications'), ('Applications', 'Requirements'), ('Requirements', 'Cryptanalysis'), ('Cryptanalysis', 'RSA'), ('RSA', 'algorithm'), ('algorithm', 'RSA'), ('RSA', 'computational'), ('computational', 'aspects'), ('aspects', 'security'), ('security', 'Diffie-Hillman'), ('Diffie-Hillman', 'Key'), ('Key', 'Exchange'), ('Exchange', 'algorithm'), ('algorithm', 'Man-in-Middle'), ('Man-in-Middle', 'attack'), ('attack', 'Unit-4'), ('Unit-4', 'Asymmertic'), ('Asymmertic', 'Ciphers'), ('Ciphers', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'X.800'), ('X.800', 'RFC'), ('RFC', '2828'), ('2828', 'International'), ('International', 'Telecommunication'), ('Telecommunication', 'Union'), ('Union', '('), ('(', 'ITU'), ('ITU', ')'), (')', '2'), ('2', 'Symmetric'), ('Symmetric', 'key'), ('key', 'Encryption'), ('Encryption', 'Plaintext'), ('Plaintext', 'input'), ('input', 'Plaintext'), ('Plaintext', 'output'), ('output', 'Encryption'), ('Encryption', 'Algorithm'), ('Algorithm', '('), ('(', 'e.g.-.-'), ('e.g.-.-', 'AES'), ('AES', ')'), (')', 'Decryption'), ('Decryption', 'Algorithm'), ('Algorithm', '('), ('(', 'reverse'), ('reverse', 'encryption'), ('encryption', 'algorithm'), ('algorithm', ')'), (')', 'Secret'), ('Secret', 'key'), ('key', 'shared'), ('shared', 'sender'), ('sender', 'recipient'), ('recipient', 'X'), ('X', 'Secret'), ('Secret', 'key'), ('key', 'shared'), ('shared', 'sender'), ('sender', 'recipient'), ('recipient', 'K'), ('K', 'Transmitted'), ('Transmitted', 'cipher'), ('cipher', 'text'), ('text', 'Y'), ('Y', '='), ('=', 'E'), ('E', '('), ('(', 'K'), ('K', ','), (',', 'X'), ('X', ')'), (')', 'K'), ('K', 'X'), ('X', 'Unit-4'), ('Unit-4', 'Asymmertic'), ('Asymmertic', 'Ciphers'), ('Ciphers', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Plaintext'), ('Plaintext', 'input'), ('input', 'Plaintext'), ('Plaintext', 'output'), ('output', 'Encryption'), ('Encryption', 'Algorithm'), ('Algorithm', '('), ('(', 'e.g.-.-'), ('e.g.-.-', 'RSA'), ('RSA', ')'), (')', 'Decryption'), ('Decryption', 'Algorithm'), ('Algorithm', 'X'), ('X', 'Transmitted'), ('Transmitted', 'cipher'), ('cipher', 'text'), ('text', 'Y'), ('Y', '='), ('=', 'E'), ('E', '('), ('(', 'PUa'), ('PUa', ','), (',', 'X'), ('X', ')'), (')', 'X'), ('X', 'Bob'), ('Bob', '’'), ('’', 'Public'), ('Public', 'key'), ('key', 'ring'), ('ring', 'Alice'), ('Alice', 'Ted'), ('Ted', 'Mike'), ('Mike', 'Joy'), ('Joy', 'Alice'), ('Alice', '’'), ('’', 'public'), ('public', 'key'), ('key', 'PUa'), ('PUa', 'Alice'), ('Alice', '’'), ('’', 'private'), ('private', 'key'), ('key', 'PRa'), ('PRa', 'Asymmetric'), ('Asymmetric', 'key'), ('key', 'Encryption'), ('Encryption', 'Public'), ('Public', 'Key'), ('Key', 'Bob'), ('Bob', 'Alice'), ('Alice', 'The'), ('The', 'entire'), ('entire', 'encrypted'), ('encrypted', 'message'), ('message', 'serves'), ('serves', 'confidentiality'), ('confidentiality', '.')]

>> Trigrams are: 
 [('OOPC++', 'UNIT-1', 'Prof.'), ('UNIT-1', 'Prof.', 'Rupesh'), ('Prof.', 'Rupesh', 'G.'), ('Rupesh', 'G.', 'Vaishnav'), ('G.', 'Vaishnav', 'rupesh.vaishnav'), ('Vaishnav', 'rupesh.vaishnav', '@'), ('rupesh.vaishnav', '@', 'darshan.ac.in'), ('@', 'darshan.ac.in', '94280-37452'), ('darshan.ac.in', '94280-37452', 'Information'), ('94280-37452', 'Information', '&'), ('Information', '&', 'Network'), ('&', 'Network', 'Security'), ('Network', 'Security', '('), ('Security', '(', '2170709'), ('(', '2170709', ')'), ('2170709', ')', 'Darshan'), (')', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', 'UNIT-4'), ('Technology', 'UNIT-4', 'Asymmetric'), ('UNIT-4', 'Asymmetric', 'Ciphers'), ('Asymmetric', 'Ciphers', '1'), ('Ciphers', '1', 'Outline'), ('1', 'Outline', 'Public'), ('Outline', 'Public', 'Key'), ('Public', 'Key', 'Cryptosystems'), ('Key', 'Cryptosystems', 'Applications'), ('Cryptosystems', 'Applications', 'Requirements'), ('Applications', 'Requirements', 'Cryptanalysis'), ('Requirements', 'Cryptanalysis', 'RSA'), ('Cryptanalysis', 'RSA', 'algorithm'), ('RSA', 'algorithm', 'RSA'), ('algorithm', 'RSA', 'computational'), ('RSA', 'computational', 'aspects'), ('computational', 'aspects', 'security'), ('aspects', 'security', 'Diffie-Hillman'), ('security', 'Diffie-Hillman', 'Key'), ('Diffie-Hillman', 'Key', 'Exchange'), ('Key', 'Exchange', 'algorithm'), ('Exchange', 'algorithm', 'Man-in-Middle'), ('algorithm', 'Man-in-Middle', 'attack'), ('Man-in-Middle', 'attack', 'Unit-4'), ('attack', 'Unit-4', 'Asymmertic'), ('Unit-4', 'Asymmertic', 'Ciphers'), ('Asymmertic', 'Ciphers', 'Darshan'), ('Ciphers', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'X.800'), ('›', 'X.800', 'RFC'), ('X.800', 'RFC', '2828'), ('RFC', '2828', 'International'), ('2828', 'International', 'Telecommunication'), ('International', 'Telecommunication', 'Union'), ('Telecommunication', 'Union', '('), ('Union', '(', 'ITU'), ('(', 'ITU', ')'), ('ITU', ')', '2'), (')', '2', 'Symmetric'), ('2', 'Symmetric', 'key'), ('Symmetric', 'key', 'Encryption'), ('key', 'Encryption', 'Plaintext'), ('Encryption', 'Plaintext', 'input'), ('Plaintext', 'input', 'Plaintext'), ('input', 'Plaintext', 'output'), ('Plaintext', 'output', 'Encryption'), ('output', 'Encryption', 'Algorithm'), ('Encryption', 'Algorithm', '('), ('Algorithm', '(', 'e.g.-.-'), ('(', 'e.g.-.-', 'AES'), ('e.g.-.-', 'AES', ')'), ('AES', ')', 'Decryption'), (')', 'Decryption', 'Algorithm'), ('Decryption', 'Algorithm', '('), ('Algorithm', '(', 'reverse'), ('(', 'reverse', 'encryption'), ('reverse', 'encryption', 'algorithm'), ('encryption', 'algorithm', ')'), ('algorithm', ')', 'Secret'), (')', 'Secret', 'key'), ('Secret', 'key', 'shared'), ('key', 'shared', 'sender'), ('shared', 'sender', 'recipient'), ('sender', 'recipient', 'X'), ('recipient', 'X', 'Secret'), ('X', 'Secret', 'key'), ('Secret', 'key', 'shared'), ('key', 'shared', 'sender'), ('shared', 'sender', 'recipient'), ('sender', 'recipient', 'K'), ('recipient', 'K', 'Transmitted'), ('K', 'Transmitted', 'cipher'), ('Transmitted', 'cipher', 'text'), ('cipher', 'text', 'Y'), ('text', 'Y', '='), ('Y', '=', 'E'), ('=', 'E', '('), ('E', '(', 'K'), ('(', 'K', ','), ('K', ',', 'X'), (',', 'X', ')'), ('X', ')', 'K'), (')', 'K', 'X'), ('K', 'X', 'Unit-4'), ('X', 'Unit-4', 'Asymmertic'), ('Unit-4', 'Asymmertic', 'Ciphers'), ('Asymmertic', 'Ciphers', 'Darshan'), ('Ciphers', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Plaintext'), ('›', 'Plaintext', 'input'), ('Plaintext', 'input', 'Plaintext'), ('input', 'Plaintext', 'output'), ('Plaintext', 'output', 'Encryption'), ('output', 'Encryption', 'Algorithm'), ('Encryption', 'Algorithm', '('), ('Algorithm', '(', 'e.g.-.-'), ('(', 'e.g.-.-', 'RSA'), ('e.g.-.-', 'RSA', ')'), ('RSA', ')', 'Decryption'), (')', 'Decryption', 'Algorithm'), ('Decryption', 'Algorithm', 'X'), ('Algorithm', 'X', 'Transmitted'), ('X', 'Transmitted', 'cipher'), ('Transmitted', 'cipher', 'text'), ('cipher', 'text', 'Y'), ('text', 'Y', '='), ('Y', '=', 'E'), ('=', 'E', '('), ('E', '(', 'PUa'), ('(', 'PUa', ','), ('PUa', ',', 'X'), (',', 'X', ')'), ('X', ')', 'X'), (')', 'X', 'Bob'), ('X', 'Bob', '’'), ('Bob', '’', 'Public'), ('’', 'Public', 'key'), ('Public', 'key', 'ring'), ('key', 'ring', 'Alice'), ('ring', 'Alice', 'Ted'), ('Alice', 'Ted', 'Mike'), ('Ted', 'Mike', 'Joy'), ('Mike', 'Joy', 'Alice'), ('Joy', 'Alice', '’'), ('Alice', '’', 'public'), ('’', 'public', 'key'), ('public', 'key', 'PUa'), ('key', 'PUa', 'Alice'), ('PUa', 'Alice', '’'), ('Alice', '’', 'private'), ('’', 'private', 'key'), ('private', 'key', 'PRa'), ('key', 'PRa', 'Asymmetric'), ('PRa', 'Asymmetric', 'key'), ('Asymmetric', 'key', 'Encryption'), ('key', 'Encryption', 'Public'), ('Encryption', 'Public', 'Key'), ('Public', 'Key', 'Bob'), ('Key', 'Bob', 'Alice'), ('Bob', 'Alice', 'The'), ('Alice', 'The', 'entire'), ('The', 'entire', 'encrypted'), ('entire', 'encrypted', 'message'), ('encrypted', 'message', 'serves'), ('message', 'serves', 'confidentiality'), ('serves', 'confidentiality', '.')]

>> POS Tags are: 
 [('OOPC++', 'NNP'), ('UNIT-1', 'NNP'), ('Prof.', 'NNP'), ('Rupesh', 'NNP'), ('G.', 'NNP'), ('Vaishnav', 'NNP'), ('rupesh.vaishnav', 'NN'), ('@', 'NNP'), ('darshan.ac.in', 'VBZ'), ('94280-37452', 'CD'), ('Information', 'NNP'), ('&', 'CC'), ('Network', 'NNP'), ('Security', 'NNP'), ('(', '('), ('2170709', 'CD'), (')', ')'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('UNIT-4', 'NNP'), ('Asymmetric', 'NNP'), ('Ciphers', 'NNP'), ('1', 'CD'), ('Outline', 'NNP'), ('Public', 'NNP'), ('Key', 'NNP'), ('Cryptosystems', 'NNP'), ('Applications', 'NNP'), ('Requirements', 'NNP'), ('Cryptanalysis', 'NNP'), ('RSA', 'NNP'), ('algorithm', 'VBZ'), ('RSA', 'NNP'), ('computational', 'JJ'), ('aspects', 'NNS'), ('security', 'NN'), ('Diffie-Hillman', 'NNP'), ('Key', 'NNP'), ('Exchange', 'NNP'), ('algorithm', 'VBD'), ('Man-in-Middle', 'NNP'), ('attack', 'NN'), ('Unit-4', 'NNP'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('X.800', 'NNP'), ('RFC', 'NNP'), ('2828', 'CD'), ('International', 'NNP'), ('Telecommunication', 'NNP'), ('Union', 'NNP'), ('(', '('), ('ITU', 'NNP'), (')', ')'), ('2', 'CD'), ('Symmetric', 'NNP'), ('key', 'JJ'), ('Encryption', 'NNP'), ('Plaintext', 'NNP'), ('input', 'NN'), ('Plaintext', 'NNP'), ('output', 'NN'), ('Encryption', 'NNP'), ('Algorithm', 'NNP'), ('(', '('), ('e.g.-.-', 'JJ'), ('AES', 'NNP'), (')', ')'), ('Decryption', 'NNP'), ('Algorithm', 'NNP'), ('(', '('), ('reverse', 'JJ'), ('encryption', 'NN'), ('algorithm', 'NN'), (')', ')'), ('Secret', 'NNP'), ('key', 'NN'), ('shared', 'VBD'), ('sender', 'JJR'), ('recipient', 'NN'), ('X', 'NNP'), ('Secret', 'NNP'), ('key', 'NN'), ('shared', 'VBD'), ('sender', 'JJR'), ('recipient', 'NN'), ('K', 'NNP'), ('Transmitted', 'NNP'), ('cipher', 'NN'), ('text', 'NN'), ('Y', 'NNP'), ('=', 'NNP'), ('E', 'NNP'), ('(', '('), ('K', 'NNP'), (',', ','), ('X', 'NNP'), (')', ')'), ('K', 'NNP'), ('X', 'NNP'), ('Unit-4', 'NNP'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Plaintext', 'NNP'), ('input', 'NN'), ('Plaintext', 'NNP'), ('output', 'NN'), ('Encryption', 'NNP'), ('Algorithm', 'NNP'), ('(', '('), ('e.g.-.-', 'JJ'), ('RSA', 'NNP'), (')', ')'), ('Decryption', 'NNP'), ('Algorithm', 'NNP'), ('X', 'NNP'), ('Transmitted', 'NNP'), ('cipher', 'NN'), ('text', 'NN'), ('Y', 'NNP'), ('=', 'NNP'), ('E', 'NNP'), ('(', '('), ('PUa', 'NNP'), (',', ','), ('X', 'NNP'), (')', ')'), ('X', 'NNP'), ('Bob', 'NNP'), ('’', 'NNP'), ('Public', 'NNP'), ('key', 'VBD'), ('ring', 'VBG'), ('Alice', 'NNP'), ('Ted', 'NNP'), ('Mike', 'NNP'), ('Joy', 'NNP'), ('Alice', 'NNP'), ('’', 'NNP'), ('public', 'JJ'), ('key', 'NN'), ('PUa', 'NNP'), ('Alice', 'NNP'), ('’', 'NNP'), ('private', 'JJ'), ('key', 'NN'), ('PRa', 'NNP'), ('Asymmetric', 'NNP'), ('key', 'JJ'), ('Encryption', 'NNP'), ('Public', 'NNP'), ('Key', 'NNP'), ('Bob', 'NNP'), ('Alice', 'NNP'), ('The', 'DT'), ('entire', 'JJ'), ('encrypted', 'JJ'), ('message', 'NN'), ('serves', 'VBZ'), ('confidentiality', 'NN'), ('.', '.')]

 (S
  (NP
    OOPC++/NNP
    UNIT-1/NNP
    Prof./NNP
    Rupesh/NNP
    G./NNP
    Vaishnav/NNP
    rupesh.vaishnav/NN
    @/NNP)
  darshan.ac.in/VBZ
  94280-37452/CD
  (NP Information/NNP)
  &/CC
  (NP Network/NNP Security/NNP)
  (/(
  2170709/CD
  )/)
  (NP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP UNIT-4/NNP Asymmetric/NNP Ciphers/NNP)
  1/CD
  (NP
    Outline/NNP
    Public/NNP
    Key/NNP
    Cryptosystems/NNP
    Applications/NNP
    Requirements/NNP
    Cryptanalysis/NNP
    RSA/NNP)
  algorithm/VBZ
  (NP RSA/NNP)
  (NP
    computational/JJ
    aspects/NNS
    security/NN
    Diffie-Hillman/NNP
    Key/NNP
    Exchange/NNP)
  algorithm/VBD
  (NP
    Man-in-Middle/NNP
    attack/NN
    Unit-4/NNP
    Asymmertic/NNP
    Ciphers/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP X.800/NNP RFC/NNP)
  2828/CD
  (NP International/NNP Telecommunication/NNP Union/NNP)
  (/(
  (NP ITU/NNP)
  )/)
  2/CD
  (NP Symmetric/NNP)
  (NP
    key/JJ
    Encryption/NNP
    Plaintext/NNP
    input/NN
    Plaintext/NNP
    output/NN
    Encryption/NNP
    Algorithm/NNP)
  (/(
  (NP e.g.-.-/JJ AES/NNP)
  )/)
  (NP Decryption/NNP Algorithm/NNP)
  (/(
  (NP reverse/JJ encryption/NN algorithm/NN)
  )/)
  (NP Secret/NNP key/NN)
  shared/VBD
  sender/JJR
  (NP recipient/NN X/NNP Secret/NNP key/NN)
  shared/VBD
  sender/JJR
  (NP
    recipient/NN
    K/NNP
    Transmitted/NNP
    cipher/NN
    text/NN
    Y/NNP
    =/NNP
    E/NNP)
  (/(
  (NP K/NNP)
  ,/,
  (NP X/NNP)
  )/)
  (NP
    K/NNP
    X/NNP
    Unit-4/NNP
    Asymmertic/NNP
    Ciphers/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP
    ›/NNP
    Plaintext/NNP
    input/NN
    Plaintext/NNP
    output/NN
    Encryption/NNP
    Algorithm/NNP)
  (/(
  (NP e.g.-.-/JJ RSA/NNP)
  )/)
  (NP
    Decryption/NNP
    Algorithm/NNP
    X/NNP
    Transmitted/NNP
    cipher/NN
    text/NN
    Y/NNP
    =/NNP
    E/NNP)
  (/(
  (NP PUa/NNP)
  ,/,
  (NP X/NNP)
  )/)
  (NP X/NNP Bob/NNP ’/NNP Public/NNP)
  key/VBD
  ring/VBG
  (NP Alice/NNP Ted/NNP Mike/NNP Joy/NNP Alice/NNP ’/NNP)
  (NP public/JJ key/NN PUa/NNP Alice/NNP ’/NNP)
  (NP private/JJ key/NN PRa/NNP Asymmetric/NNP)
  (NP key/JJ Encryption/NNP Public/NNP Key/NNP Bob/NNP Alice/NNP)
  (NP The/DT entire/JJ encrypted/JJ message/NN)
  serves/VBZ
  (NP confidentiality/NN)
  ./.) 


>> Noun Phrases are: 
 ['OOPC++ UNIT-1 Prof. Rupesh G. Vaishnav rupesh.vaishnav @', 'Information', 'Network Security', 'Darshan Institute Engineering', 'Technology UNIT-4 Asymmetric Ciphers', 'Outline Public Key Cryptosystems Applications Requirements Cryptanalysis RSA', 'RSA', 'computational aspects security Diffie-Hillman Key Exchange', 'Man-in-Middle attack Unit-4 Asymmertic Ciphers Darshan Institute Engineering', 'Technology ‹', '› X.800 RFC', 'International Telecommunication Union', 'ITU', 'Symmetric', 'key Encryption Plaintext input Plaintext output Encryption Algorithm', 'e.g.-.- AES', 'Decryption Algorithm', 'reverse encryption algorithm', 'Secret key', 'recipient X Secret key', 'recipient K Transmitted cipher text Y = E', 'K', 'X', 'K X Unit-4 Asymmertic Ciphers Darshan Institute Engineering', 'Technology ‹', '› Plaintext input Plaintext output Encryption Algorithm', 'e.g.-.- RSA', 'Decryption Algorithm X Transmitted cipher text Y = E', 'PUa', 'X', 'X Bob ’ Public', 'Alice Ted Mike Joy Alice ’', 'public key PUa Alice ’', 'private key PRa Asymmetric', 'key Encryption Public Key Bob Alice', 'The entire encrypted message', 'confidentiality']

>> Named Entities are: 
 [('PERSON', 'Rupesh G. Vaishnav'), ('PERSON', 'Network Security'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Outline Public Key Cryptosystems Applications Requirements Cryptanalysis'), ('ORGANIZATION', 'RSA'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'International Telecommunication Union'), ('ORGANIZATION', 'ITU'), ('ORGANIZATION', 'Encryption'), ('ORGANIZATION', 'Encryption Algorithm'), ('ORGANIZATION', 'Secret'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'Encryption Algorithm'), ('ORGANIZATION', 'PUa'), ('PERSON', 'Bob'), ('PERSON', 'Public'), ('PERSON', 'Alice Ted Mike Joy'), ('ORGANIZATION', 'PUa'), ('ORGANIZATION', 'PRa Asymmetric'), ('ORGANIZATION', 'Encryption Public Key Bob')] 

>> Stemming using Porter Stemmer: 
 [('OOPC++', 'oopc++'), ('UNIT-1', 'unit-1'), ('Prof.', 'prof.'), ('Rupesh', 'rupesh'), ('G.', 'g.'), ('Vaishnav', 'vaishnav'), ('rupesh.vaishnav', 'rupesh.vaishnav'), ('@', '@'), ('darshan.ac.in', 'darshan.ac.in'), ('94280-37452', '94280-37452'), ('Information', 'inform'), ('&', '&'), ('Network', 'network'), ('Security', 'secur'), ('(', '('), ('2170709', '2170709'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('UNIT-4', 'unit-4'), ('Asymmetric', 'asymmetr'), ('Ciphers', 'cipher'), ('1', '1'), ('Outline', 'outlin'), ('Public', 'public'), ('Key', 'key'), ('Cryptosystems', 'cryptosystem'), ('Applications', 'applic'), ('Requirements', 'requir'), ('Cryptanalysis', 'cryptanalysi'), ('RSA', 'rsa'), ('algorithm', 'algorithm'), ('RSA', 'rsa'), ('computational', 'comput'), ('aspects', 'aspect'), ('security', 'secur'), ('Diffie-Hillman', 'diffie-hillman'), ('Key', 'key'), ('Exchange', 'exchang'), ('algorithm', 'algorithm'), ('Man-in-Middle', 'man-in-middl'), ('attack', 'attack'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('X.800', 'x.800'), ('RFC', 'rfc'), ('2828', '2828'), ('International', 'intern'), ('Telecommunication', 'telecommun'), ('Union', 'union'), ('(', '('), ('ITU', 'itu'), (')', ')'), ('2', '2'), ('Symmetric', 'symmetr'), ('key', 'key'), ('Encryption', 'encrypt'), ('Plaintext', 'plaintext'), ('input', 'input'), ('Plaintext', 'plaintext'), ('output', 'output'), ('Encryption', 'encrypt'), ('Algorithm', 'algorithm'), ('(', '('), ('e.g.-.-', 'e.g.-.-'), ('AES', 'ae'), (')', ')'), ('Decryption', 'decrypt'), ('Algorithm', 'algorithm'), ('(', '('), ('reverse', 'revers'), ('encryption', 'encrypt'), ('algorithm', 'algorithm'), (')', ')'), ('Secret', 'secret'), ('key', 'key'), ('shared', 'share'), ('sender', 'sender'), ('recipient', 'recipi'), ('X', 'x'), ('Secret', 'secret'), ('key', 'key'), ('shared', 'share'), ('sender', 'sender'), ('recipient', 'recipi'), ('K', 'k'), ('Transmitted', 'transmit'), ('cipher', 'cipher'), ('text', 'text'), ('Y', 'y'), ('=', '='), ('E', 'e'), ('(', '('), ('K', 'k'), (',', ','), ('X', 'x'), (')', ')'), ('K', 'k'), ('X', 'x'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Plaintext', 'plaintext'), ('input', 'input'), ('Plaintext', 'plaintext'), ('output', 'output'), ('Encryption', 'encrypt'), ('Algorithm', 'algorithm'), ('(', '('), ('e.g.-.-', 'e.g.-.-'), ('RSA', 'rsa'), (')', ')'), ('Decryption', 'decrypt'), ('Algorithm', 'algorithm'), ('X', 'x'), ('Transmitted', 'transmit'), ('cipher', 'cipher'), ('text', 'text'), ('Y', 'y'), ('=', '='), ('E', 'e'), ('(', '('), ('PUa', 'pua'), (',', ','), ('X', 'x'), (')', ')'), ('X', 'x'), ('Bob', 'bob'), ('’', '’'), ('Public', 'public'), ('key', 'key'), ('ring', 'ring'), ('Alice', 'alic'), ('Ted', 'ted'), ('Mike', 'mike'), ('Joy', 'joy'), ('Alice', 'alic'), ('’', '’'), ('public', 'public'), ('key', 'key'), ('PUa', 'pua'), ('Alice', 'alic'), ('’', '’'), ('private', 'privat'), ('key', 'key'), ('PRa', 'pra'), ('Asymmetric', 'asymmetr'), ('key', 'key'), ('Encryption', 'encrypt'), ('Public', 'public'), ('Key', 'key'), ('Bob', 'bob'), ('Alice', 'alic'), ('The', 'the'), ('entire', 'entir'), ('encrypted', 'encrypt'), ('message', 'messag'), ('serves', 'serv'), ('confidentiality', 'confidenti'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('OOPC++', 'oopc++'), ('UNIT-1', 'unit-1'), ('Prof.', 'prof.'), ('Rupesh', 'rupesh'), ('G.', 'g.'), ('Vaishnav', 'vaishnav'), ('rupesh.vaishnav', 'rupesh.vaishnav'), ('@', '@'), ('darshan.ac.in', 'darshan.ac.in'), ('94280-37452', '94280-37452'), ('Information', 'inform'), ('&', '&'), ('Network', 'network'), ('Security', 'secur'), ('(', '('), ('2170709', '2170709'), (')', ')'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('UNIT-4', 'unit-4'), ('Asymmetric', 'asymmetr'), ('Ciphers', 'cipher'), ('1', '1'), ('Outline', 'outlin'), ('Public', 'public'), ('Key', 'key'), ('Cryptosystems', 'cryptosystem'), ('Applications', 'applic'), ('Requirements', 'requir'), ('Cryptanalysis', 'cryptanalysi'), ('RSA', 'rsa'), ('algorithm', 'algorithm'), ('RSA', 'rsa'), ('computational', 'comput'), ('aspects', 'aspect'), ('security', 'secur'), ('Diffie-Hillman', 'diffie-hillman'), ('Key', 'key'), ('Exchange', 'exchang'), ('algorithm', 'algorithm'), ('Man-in-Middle', 'man-in-middl'), ('attack', 'attack'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('X.800', 'x.800'), ('RFC', 'rfc'), ('2828', '2828'), ('International', 'intern'), ('Telecommunication', 'telecommun'), ('Union', 'union'), ('(', '('), ('ITU', 'itu'), (')', ')'), ('2', '2'), ('Symmetric', 'symmetr'), ('key', 'key'), ('Encryption', 'encrypt'), ('Plaintext', 'plaintext'), ('input', 'input'), ('Plaintext', 'plaintext'), ('output', 'output'), ('Encryption', 'encrypt'), ('Algorithm', 'algorithm'), ('(', '('), ('e.g.-.-', 'e.g.-.-'), ('AES', 'ae'), (')', ')'), ('Decryption', 'decrypt'), ('Algorithm', 'algorithm'), ('(', '('), ('reverse', 'revers'), ('encryption', 'encrypt'), ('algorithm', 'algorithm'), (')', ')'), ('Secret', 'secret'), ('key', 'key'), ('shared', 'share'), ('sender', 'sender'), ('recipient', 'recipi'), ('X', 'x'), ('Secret', 'secret'), ('key', 'key'), ('shared', 'share'), ('sender', 'sender'), ('recipient', 'recipi'), ('K', 'k'), ('Transmitted', 'transmit'), ('cipher', 'cipher'), ('text', 'text'), ('Y', 'y'), ('=', '='), ('E', 'e'), ('(', '('), ('K', 'k'), (',', ','), ('X', 'x'), (')', ')'), ('K', 'k'), ('X', 'x'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Plaintext', 'plaintext'), ('input', 'input'), ('Plaintext', 'plaintext'), ('output', 'output'), ('Encryption', 'encrypt'), ('Algorithm', 'algorithm'), ('(', '('), ('e.g.-.-', 'e.g.-.-'), ('RSA', 'rsa'), (')', ')'), ('Decryption', 'decrypt'), ('Algorithm', 'algorithm'), ('X', 'x'), ('Transmitted', 'transmit'), ('cipher', 'cipher'), ('text', 'text'), ('Y', 'y'), ('=', '='), ('E', 'e'), ('(', '('), ('PUa', 'pua'), (',', ','), ('X', 'x'), (')', ')'), ('X', 'x'), ('Bob', 'bob'), ('’', '’'), ('Public', 'public'), ('key', 'key'), ('ring', 'ring'), ('Alice', 'alic'), ('Ted', 'ted'), ('Mike', 'mike'), ('Joy', 'joy'), ('Alice', 'alic'), ('’', '’'), ('public', 'public'), ('key', 'key'), ('PUa', 'pua'), ('Alice', 'alic'), ('’', '’'), ('private', 'privat'), ('key', 'key'), ('PRa', 'pra'), ('Asymmetric', 'asymmetr'), ('key', 'key'), ('Encryption', 'encrypt'), ('Public', 'public'), ('Key', 'key'), ('Bob', 'bob'), ('Alice', 'alic'), ('The', 'the'), ('entire', 'entir'), ('encrypted', 'encrypt'), ('message', 'messag'), ('serves', 'serv'), ('confidentiality', 'confidenti'), ('.', '.')]

>> Lemmatization: 
 [('OOPC++', 'OOPC++'), ('UNIT-1', 'UNIT-1'), ('Prof.', 'Prof.'), ('Rupesh', 'Rupesh'), ('G.', 'G.'), ('Vaishnav', 'Vaishnav'), ('rupesh.vaishnav', 'rupesh.vaishnav'), ('@', '@'), ('darshan.ac.in', 'darshan.ac.in'), ('94280-37452', '94280-37452'), ('Information', 'Information'), ('&', '&'), ('Network', 'Network'), ('Security', 'Security'), ('(', '('), ('2170709', '2170709'), (')', ')'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('UNIT-4', 'UNIT-4'), ('Asymmetric', 'Asymmetric'), ('Ciphers', 'Ciphers'), ('1', '1'), ('Outline', 'Outline'), ('Public', 'Public'), ('Key', 'Key'), ('Cryptosystems', 'Cryptosystems'), ('Applications', 'Applications'), ('Requirements', 'Requirements'), ('Cryptanalysis', 'Cryptanalysis'), ('RSA', 'RSA'), ('algorithm', 'algorithm'), ('RSA', 'RSA'), ('computational', 'computational'), ('aspects', 'aspect'), ('security', 'security'), ('Diffie-Hillman', 'Diffie-Hillman'), ('Key', 'Key'), ('Exchange', 'Exchange'), ('algorithm', 'algorithm'), ('Man-in-Middle', 'Man-in-Middle'), ('attack', 'attack'), ('Unit-4', 'Unit-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('X.800', 'X.800'), ('RFC', 'RFC'), ('2828', '2828'), ('International', 'International'), ('Telecommunication', 'Telecommunication'), ('Union', 'Union'), ('(', '('), ('ITU', 'ITU'), (')', ')'), ('2', '2'), ('Symmetric', 'Symmetric'), ('key', 'key'), ('Encryption', 'Encryption'), ('Plaintext', 'Plaintext'), ('input', 'input'), ('Plaintext', 'Plaintext'), ('output', 'output'), ('Encryption', 'Encryption'), ('Algorithm', 'Algorithm'), ('(', '('), ('e.g.-.-', 'e.g.-.-'), ('AES', 'AES'), (')', ')'), ('Decryption', 'Decryption'), ('Algorithm', 'Algorithm'), ('(', '('), ('reverse', 'reverse'), ('encryption', 'encryption'), ('algorithm', 'algorithm'), (')', ')'), ('Secret', 'Secret'), ('key', 'key'), ('shared', 'shared'), ('sender', 'sender'), ('recipient', 'recipient'), ('X', 'X'), ('Secret', 'Secret'), ('key', 'key'), ('shared', 'shared'), ('sender', 'sender'), ('recipient', 'recipient'), ('K', 'K'), ('Transmitted', 'Transmitted'), ('cipher', 'cipher'), ('text', 'text'), ('Y', 'Y'), ('=', '='), ('E', 'E'), ('(', '('), ('K', 'K'), (',', ','), ('X', 'X'), (')', ')'), ('K', 'K'), ('X', 'X'), ('Unit-4', 'Unit-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Plaintext', 'Plaintext'), ('input', 'input'), ('Plaintext', 'Plaintext'), ('output', 'output'), ('Encryption', 'Encryption'), ('Algorithm', 'Algorithm'), ('(', '('), ('e.g.-.-', 'e.g.-.-'), ('RSA', 'RSA'), (')', ')'), ('Decryption', 'Decryption'), ('Algorithm', 'Algorithm'), ('X', 'X'), ('Transmitted', 'Transmitted'), ('cipher', 'cipher'), ('text', 'text'), ('Y', 'Y'), ('=', '='), ('E', 'E'), ('(', '('), ('PUa', 'PUa'), (',', ','), ('X', 'X'), (')', ')'), ('X', 'X'), ('Bob', 'Bob'), ('’', '’'), ('Public', 'Public'), ('key', 'key'), ('ring', 'ring'), ('Alice', 'Alice'), ('Ted', 'Ted'), ('Mike', 'Mike'), ('Joy', 'Joy'), ('Alice', 'Alice'), ('’', '’'), ('public', 'public'), ('key', 'key'), ('PUa', 'PUa'), ('Alice', 'Alice'), ('’', '’'), ('private', 'private'), ('key', 'key'), ('PRa', 'PRa'), ('Asymmetric', 'Asymmetric'), ('key', 'key'), ('Encryption', 'Encryption'), ('Public', 'Public'), ('Key', 'Key'), ('Bob', 'Bob'), ('Alice', 'Alice'), ('The', 'The'), ('entire', 'entire'), ('encrypted', 'encrypted'), ('message', 'message'), ('serves', 'serf'), ('confidentiality', 'confidentiality'), ('.', '.')]



============================ Sentence 2 =============================

4      Plaintext input Plaintext output Encryption Algorithm (e.g.-.- RSA) Decryption Algorithm X  Transmitted cipher text  Y = E(PRb, X) X Alice’s Public key ring Bob   Ted  Mike  Joy Bob’s public key PUb Bob’s private key PRb Asymmetric key Encryption with Private Key Bob Alice  The entire encrypted message serves as a digital signature. 


>> Tokens are: 
 ['4', 'Plaintext', 'input', 'Plaintext', 'output', 'Encryption', 'Algorithm', '(', 'e.g.-.-', 'RSA', ')', 'Decryption', 'Algorithm', 'X', 'Transmitted', 'cipher', 'text', 'Y', '=', 'E', '(', 'PRb', ',', 'X', ')', 'X', 'Alice', '’', 'Public', 'key', 'ring', 'Bob', 'Ted', 'Mike', 'Joy', 'Bob', '’', 'public', 'key', 'PUb', 'Bob', '’', 'private', 'key', 'PRb', 'Asymmetric', 'key', 'Encryption', 'Private', 'Key', 'Bob', 'Alice', 'The', 'entire', 'encrypted', 'message', 'serves', 'digital', 'signature', '.']

>> Bigrams are: 
 [('4', 'Plaintext'), ('Plaintext', 'input'), ('input', 'Plaintext'), ('Plaintext', 'output'), ('output', 'Encryption'), ('Encryption', 'Algorithm'), ('Algorithm', '('), ('(', 'e.g.-.-'), ('e.g.-.-', 'RSA'), ('RSA', ')'), (')', 'Decryption'), ('Decryption', 'Algorithm'), ('Algorithm', 'X'), ('X', 'Transmitted'), ('Transmitted', 'cipher'), ('cipher', 'text'), ('text', 'Y'), ('Y', '='), ('=', 'E'), ('E', '('), ('(', 'PRb'), ('PRb', ','), (',', 'X'), ('X', ')'), (')', 'X'), ('X', 'Alice'), ('Alice', '’'), ('’', 'Public'), ('Public', 'key'), ('key', 'ring'), ('ring', 'Bob'), ('Bob', 'Ted'), ('Ted', 'Mike'), ('Mike', 'Joy'), ('Joy', 'Bob'), ('Bob', '’'), ('’', 'public'), ('public', 'key'), ('key', 'PUb'), ('PUb', 'Bob'), ('Bob', '’'), ('’', 'private'), ('private', 'key'), ('key', 'PRb'), ('PRb', 'Asymmetric'), ('Asymmetric', 'key'), ('key', 'Encryption'), ('Encryption', 'Private'), ('Private', 'Key'), ('Key', 'Bob'), ('Bob', 'Alice'), ('Alice', 'The'), ('The', 'entire'), ('entire', 'encrypted'), ('encrypted', 'message'), ('message', 'serves'), ('serves', 'digital'), ('digital', 'signature'), ('signature', '.')]

>> Trigrams are: 
 [('4', 'Plaintext', 'input'), ('Plaintext', 'input', 'Plaintext'), ('input', 'Plaintext', 'output'), ('Plaintext', 'output', 'Encryption'), ('output', 'Encryption', 'Algorithm'), ('Encryption', 'Algorithm', '('), ('Algorithm', '(', 'e.g.-.-'), ('(', 'e.g.-.-', 'RSA'), ('e.g.-.-', 'RSA', ')'), ('RSA', ')', 'Decryption'), (')', 'Decryption', 'Algorithm'), ('Decryption', 'Algorithm', 'X'), ('Algorithm', 'X', 'Transmitted'), ('X', 'Transmitted', 'cipher'), ('Transmitted', 'cipher', 'text'), ('cipher', 'text', 'Y'), ('text', 'Y', '='), ('Y', '=', 'E'), ('=', 'E', '('), ('E', '(', 'PRb'), ('(', 'PRb', ','), ('PRb', ',', 'X'), (',', 'X', ')'), ('X', ')', 'X'), (')', 'X', 'Alice'), ('X', 'Alice', '’'), ('Alice', '’', 'Public'), ('’', 'Public', 'key'), ('Public', 'key', 'ring'), ('key', 'ring', 'Bob'), ('ring', 'Bob', 'Ted'), ('Bob', 'Ted', 'Mike'), ('Ted', 'Mike', 'Joy'), ('Mike', 'Joy', 'Bob'), ('Joy', 'Bob', '’'), ('Bob', '’', 'public'), ('’', 'public', 'key'), ('public', 'key', 'PUb'), ('key', 'PUb', 'Bob'), ('PUb', 'Bob', '’'), ('Bob', '’', 'private'), ('’', 'private', 'key'), ('private', 'key', 'PRb'), ('key', 'PRb', 'Asymmetric'), ('PRb', 'Asymmetric', 'key'), ('Asymmetric', 'key', 'Encryption'), ('key', 'Encryption', 'Private'), ('Encryption', 'Private', 'Key'), ('Private', 'Key', 'Bob'), ('Key', 'Bob', 'Alice'), ('Bob', 'Alice', 'The'), ('Alice', 'The', 'entire'), ('The', 'entire', 'encrypted'), ('entire', 'encrypted', 'message'), ('encrypted', 'message', 'serves'), ('message', 'serves', 'digital'), ('serves', 'digital', 'signature'), ('digital', 'signature', '.')]

>> POS Tags are: 
 [('4', 'CD'), ('Plaintext', 'NNP'), ('input', 'NN'), ('Plaintext', 'NNP'), ('output', 'NN'), ('Encryption', 'NNP'), ('Algorithm', 'NNP'), ('(', '('), ('e.g.-.-', 'JJ'), ('RSA', 'NNP'), (')', ')'), ('Decryption', 'NNP'), ('Algorithm', 'NNP'), ('X', 'NNP'), ('Transmitted', 'NNP'), ('cipher', 'NN'), ('text', 'NN'), ('Y', 'NNP'), ('=', 'NNP'), ('E', 'NNP'), ('(', '('), ('PRb', 'NNP'), (',', ','), ('X', 'NNP'), (')', ')'), ('X', 'NNP'), ('Alice', 'NNP'), ('’', 'NNP'), ('Public', 'NNP'), ('key', 'VBD'), ('ring', 'VBG'), ('Bob', 'NNP'), ('Ted', 'NNP'), ('Mike', 'NNP'), ('Joy', 'NNP'), ('Bob', 'NNP'), ('’', 'NNP'), ('public', 'JJ'), ('key', 'NN'), ('PUb', 'NNP'), ('Bob', 'NNP'), ('’', 'NNP'), ('private', 'JJ'), ('key', 'NN'), ('PRb', 'NNP'), ('Asymmetric', 'NNP'), ('key', 'JJ'), ('Encryption', 'NNP'), ('Private', 'NNP'), ('Key', 'NNP'), ('Bob', 'NNP'), ('Alice', 'NNP'), ('The', 'DT'), ('entire', 'JJ'), ('encrypted', 'JJ'), ('message', 'NN'), ('serves', 'NNS'), ('digital', 'JJ'), ('signature', 'NN'), ('.', '.')]

 (S
  4/CD
  (NP
    Plaintext/NNP
    input/NN
    Plaintext/NNP
    output/NN
    Encryption/NNP
    Algorithm/NNP)
  (/(
  (NP e.g.-.-/JJ RSA/NNP)
  )/)
  (NP
    Decryption/NNP
    Algorithm/NNP
    X/NNP
    Transmitted/NNP
    cipher/NN
    text/NN
    Y/NNP
    =/NNP
    E/NNP)
  (/(
  (NP PRb/NNP)
  ,/,
  (NP X/NNP)
  )/)
  (NP X/NNP Alice/NNP ’/NNP Public/NNP)
  key/VBD
  ring/VBG
  (NP Bob/NNP Ted/NNP Mike/NNP Joy/NNP Bob/NNP ’/NNP)
  (NP public/JJ key/NN PUb/NNP Bob/NNP ’/NNP)
  (NP private/JJ key/NN PRb/NNP Asymmetric/NNP)
  (NP key/JJ Encryption/NNP Private/NNP Key/NNP Bob/NNP Alice/NNP)
  (NP The/DT entire/JJ encrypted/JJ message/NN serves/NNS)
  (NP digital/JJ signature/NN)
  ./.) 


>> Noun Phrases are: 
 ['Plaintext input Plaintext output Encryption Algorithm', 'e.g.-.- RSA', 'Decryption Algorithm X Transmitted cipher text Y = E', 'PRb', 'X', 'X Alice ’ Public', 'Bob Ted Mike Joy Bob ’', 'public key PUb Bob ’', 'private key PRb Asymmetric', 'key Encryption Private Key Bob Alice', 'The entire encrypted message serves', 'digital signature']

>> Named Entities are: 
 [('ORGANIZATION', 'Encryption Algorithm'), ('ORGANIZATION', 'PRb'), ('PERSON', 'Public'), ('PERSON', 'Bob Ted Mike Joy Bob'), ('ORGANIZATION', 'PUb Bob'), ('ORGANIZATION', 'PRb Asymmetric'), ('ORGANIZATION', 'Encryption Private Key Bob')] 

>> Stemming using Porter Stemmer: 
 [('4', '4'), ('Plaintext', 'plaintext'), ('input', 'input'), ('Plaintext', 'plaintext'), ('output', 'output'), ('Encryption', 'encrypt'), ('Algorithm', 'algorithm'), ('(', '('), ('e.g.-.-', 'e.g.-.-'), ('RSA', 'rsa'), (')', ')'), ('Decryption', 'decrypt'), ('Algorithm', 'algorithm'), ('X', 'x'), ('Transmitted', 'transmit'), ('cipher', 'cipher'), ('text', 'text'), ('Y', 'y'), ('=', '='), ('E', 'e'), ('(', '('), ('PRb', 'prb'), (',', ','), ('X', 'x'), (')', ')'), ('X', 'x'), ('Alice', 'alic'), ('’', '’'), ('Public', 'public'), ('key', 'key'), ('ring', 'ring'), ('Bob', 'bob'), ('Ted', 'ted'), ('Mike', 'mike'), ('Joy', 'joy'), ('Bob', 'bob'), ('’', '’'), ('public', 'public'), ('key', 'key'), ('PUb', 'pub'), ('Bob', 'bob'), ('’', '’'), ('private', 'privat'), ('key', 'key'), ('PRb', 'prb'), ('Asymmetric', 'asymmetr'), ('key', 'key'), ('Encryption', 'encrypt'), ('Private', 'privat'), ('Key', 'key'), ('Bob', 'bob'), ('Alice', 'alic'), ('The', 'the'), ('entire', 'entir'), ('encrypted', 'encrypt'), ('message', 'messag'), ('serves', 'serv'), ('digital', 'digit'), ('signature', 'signatur'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('4', '4'), ('Plaintext', 'plaintext'), ('input', 'input'), ('Plaintext', 'plaintext'), ('output', 'output'), ('Encryption', 'encrypt'), ('Algorithm', 'algorithm'), ('(', '('), ('e.g.-.-', 'e.g.-.-'), ('RSA', 'rsa'), (')', ')'), ('Decryption', 'decrypt'), ('Algorithm', 'algorithm'), ('X', 'x'), ('Transmitted', 'transmit'), ('cipher', 'cipher'), ('text', 'text'), ('Y', 'y'), ('=', '='), ('E', 'e'), ('(', '('), ('PRb', 'prb'), (',', ','), ('X', 'x'), (')', ')'), ('X', 'x'), ('Alice', 'alic'), ('’', '’'), ('Public', 'public'), ('key', 'key'), ('ring', 'ring'), ('Bob', 'bob'), ('Ted', 'ted'), ('Mike', 'mike'), ('Joy', 'joy'), ('Bob', 'bob'), ('’', '’'), ('public', 'public'), ('key', 'key'), ('PUb', 'pub'), ('Bob', 'bob'), ('’', '’'), ('private', 'privat'), ('key', 'key'), ('PRb', 'prb'), ('Asymmetric', 'asymmetr'), ('key', 'key'), ('Encryption', 'encrypt'), ('Private', 'privat'), ('Key', 'key'), ('Bob', 'bob'), ('Alice', 'alic'), ('The', 'the'), ('entire', 'entir'), ('encrypted', 'encrypt'), ('message', 'messag'), ('serves', 'serv'), ('digital', 'digit'), ('signature', 'signatur'), ('.', '.')]

>> Lemmatization: 
 [('4', '4'), ('Plaintext', 'Plaintext'), ('input', 'input'), ('Plaintext', 'Plaintext'), ('output', 'output'), ('Encryption', 'Encryption'), ('Algorithm', 'Algorithm'), ('(', '('), ('e.g.-.-', 'e.g.-.-'), ('RSA', 'RSA'), (')', ')'), ('Decryption', 'Decryption'), ('Algorithm', 'Algorithm'), ('X', 'X'), ('Transmitted', 'Transmitted'), ('cipher', 'cipher'), ('text', 'text'), ('Y', 'Y'), ('=', '='), ('E', 'E'), ('(', '('), ('PRb', 'PRb'), (',', ','), ('X', 'X'), (')', ')'), ('X', 'X'), ('Alice', 'Alice'), ('’', '’'), ('Public', 'Public'), ('key', 'key'), ('ring', 'ring'), ('Bob', 'Bob'), ('Ted', 'Ted'), ('Mike', 'Mike'), ('Joy', 'Joy'), ('Bob', 'Bob'), ('’', '’'), ('public', 'public'), ('key', 'key'), ('PUb', 'PUb'), ('Bob', 'Bob'), ('’', '’'), ('private', 'private'), ('key', 'key'), ('PRb', 'PRb'), ('Asymmetric', 'Asymmetric'), ('key', 'key'), ('Encryption', 'Encryption'), ('Private', 'Private'), ('Key', 'Key'), ('Bob', 'Bob'), ('Alice', 'Alice'), ('The', 'The'), ('entire', 'entire'), ('encrypted', 'encrypted'), ('message', 'message'), ('serves', 'serf'), ('digital', 'digital'), ('signature', 'signature'), ('.', '.')]



============================ Sentence 3 =============================

Authentication and Confidentiality Message source Encryption Algorithm Encryption Algorithm Decryption Algorithm Decryption Algorithm Message Dest. 


>> Tokens are: 
 ['Authentication', 'Confidentiality', 'Message', 'source', 'Encryption', 'Algorithm', 'Encryption', 'Algorithm', 'Decryption', 'Algorithm', 'Decryption', 'Algorithm', 'Message', 'Dest', '.']

>> Bigrams are: 
 [('Authentication', 'Confidentiality'), ('Confidentiality', 'Message'), ('Message', 'source'), ('source', 'Encryption'), ('Encryption', 'Algorithm'), ('Algorithm', 'Encryption'), ('Encryption', 'Algorithm'), ('Algorithm', 'Decryption'), ('Decryption', 'Algorithm'), ('Algorithm', 'Decryption'), ('Decryption', 'Algorithm'), ('Algorithm', 'Message'), ('Message', 'Dest'), ('Dest', '.')]

>> Trigrams are: 
 [('Authentication', 'Confidentiality', 'Message'), ('Confidentiality', 'Message', 'source'), ('Message', 'source', 'Encryption'), ('source', 'Encryption', 'Algorithm'), ('Encryption', 'Algorithm', 'Encryption'), ('Algorithm', 'Encryption', 'Algorithm'), ('Encryption', 'Algorithm', 'Decryption'), ('Algorithm', 'Decryption', 'Algorithm'), ('Decryption', 'Algorithm', 'Decryption'), ('Algorithm', 'Decryption', 'Algorithm'), ('Decryption', 'Algorithm', 'Message'), ('Algorithm', 'Message', 'Dest'), ('Message', 'Dest', '.')]

>> POS Tags are: 
 [('Authentication', 'NNP'), ('Confidentiality', 'NNP'), ('Message', 'NNP'), ('source', 'NN'), ('Encryption', 'NNP'), ('Algorithm', 'NNP'), ('Encryption', 'NNP'), ('Algorithm', 'NNP'), ('Decryption', 'NNP'), ('Algorithm', 'NNP'), ('Decryption', 'NNP'), ('Algorithm', 'NNP'), ('Message', 'NNP'), ('Dest', 'NNP'), ('.', '.')]

 (S
  (NP
    Authentication/NNP
    Confidentiality/NNP
    Message/NNP
    source/NN
    Encryption/NNP
    Algorithm/NNP
    Encryption/NNP
    Algorithm/NNP
    Decryption/NNP
    Algorithm/NNP
    Decryption/NNP
    Algorithm/NNP
    Message/NNP
    Dest/NNP)
  ./.) 


>> Noun Phrases are: 
 ['Authentication Confidentiality Message source Encryption Algorithm Encryption Algorithm Decryption Algorithm Decryption Algorithm Message Dest']

>> Named Entities are: 
 [('PERSON', 'Authentication'), ('ORGANIZATION', 'Confidentiality Message'), ('ORGANIZATION', 'Encryption Algorithm Encryption Algorithm Decryption Algorithm Decryption Algorithm Message Dest')] 

>> Stemming using Porter Stemmer: 
 [('Authentication', 'authent'), ('Confidentiality', 'confidenti'), ('Message', 'messag'), ('source', 'sourc'), ('Encryption', 'encrypt'), ('Algorithm', 'algorithm'), ('Encryption', 'encrypt'), ('Algorithm', 'algorithm'), ('Decryption', 'decrypt'), ('Algorithm', 'algorithm'), ('Decryption', 'decrypt'), ('Algorithm', 'algorithm'), ('Message', 'messag'), ('Dest', 'dest'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Authentication', 'authent'), ('Confidentiality', 'confidenti'), ('Message', 'messag'), ('source', 'sourc'), ('Encryption', 'encrypt'), ('Algorithm', 'algorithm'), ('Encryption', 'encrypt'), ('Algorithm', 'algorithm'), ('Decryption', 'decrypt'), ('Algorithm', 'algorithm'), ('Decryption', 'decrypt'), ('Algorithm', 'algorithm'), ('Message', 'messag'), ('Dest', 'dest'), ('.', '.')]

>> Lemmatization: 
 [('Authentication', 'Authentication'), ('Confidentiality', 'Confidentiality'), ('Message', 'Message'), ('source', 'source'), ('Encryption', 'Encryption'), ('Algorithm', 'Algorithm'), ('Encryption', 'Encryption'), ('Algorithm', 'Algorithm'), ('Decryption', 'Decryption'), ('Algorithm', 'Algorithm'), ('Decryption', 'Decryption'), ('Algorithm', 'Algorithm'), ('Message', 'Message'), ('Dest', 'Dest'), ('.', '.')]



============================ Sentence 4 =============================

X Y Y X Z Key pair source Key pair source   PRa PUa PRb PUb  Source A  Source B Z = E(PUb, E(PRa, X)) X = D(PUa, D(PRB, Z))  Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›   6  Applications for Public-Key Cryptosystems Encryption/decryption: The sender encrypts a message with the recipient’s public key. 


>> Tokens are: 
 ['X', 'Y', 'Y', 'X', 'Z', 'Key', 'pair', 'source', 'Key', 'pair', 'source', 'PRa', 'PUa', 'PRb', 'PUb', 'Source', 'A', 'Source', 'B', 'Z', '=', 'E', '(', 'PUb', ',', 'E', '(', 'PRa', ',', 'X', ')', ')', 'X', '=', 'D', '(', 'PUa', ',', 'D', '(', 'PRB', ',', 'Z', ')', ')', 'Unit-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', '6', 'Applications', 'Public-Key', 'Cryptosystems', 'Encryption/decryption', ':', 'The', 'sender', 'encrypts', 'message', 'recipient', '’', 'public', 'key', '.']

>> Bigrams are: 
 [('X', 'Y'), ('Y', 'Y'), ('Y', 'X'), ('X', 'Z'), ('Z', 'Key'), ('Key', 'pair'), ('pair', 'source'), ('source', 'Key'), ('Key', 'pair'), ('pair', 'source'), ('source', 'PRa'), ('PRa', 'PUa'), ('PUa', 'PRb'), ('PRb', 'PUb'), ('PUb', 'Source'), ('Source', 'A'), ('A', 'Source'), ('Source', 'B'), ('B', 'Z'), ('Z', '='), ('=', 'E'), ('E', '('), ('(', 'PUb'), ('PUb', ','), (',', 'E'), ('E', '('), ('(', 'PRa'), ('PRa', ','), (',', 'X'), ('X', ')'), (')', ')'), (')', 'X'), ('X', '='), ('=', 'D'), ('D', '('), ('(', 'PUa'), ('PUa', ','), (',', 'D'), ('D', '('), ('(', 'PRB'), ('PRB', ','), (',', 'Z'), ('Z', ')'), (')', ')'), (')', 'Unit-4'), ('Unit-4', 'Asymmertic'), ('Asymmertic', 'Ciphers'), ('Ciphers', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', '6'), ('6', 'Applications'), ('Applications', 'Public-Key'), ('Public-Key', 'Cryptosystems'), ('Cryptosystems', 'Encryption/decryption'), ('Encryption/decryption', ':'), (':', 'The'), ('The', 'sender'), ('sender', 'encrypts'), ('encrypts', 'message'), ('message', 'recipient'), ('recipient', '’'), ('’', 'public'), ('public', 'key'), ('key', '.')]

>> Trigrams are: 
 [('X', 'Y', 'Y'), ('Y', 'Y', 'X'), ('Y', 'X', 'Z'), ('X', 'Z', 'Key'), ('Z', 'Key', 'pair'), ('Key', 'pair', 'source'), ('pair', 'source', 'Key'), ('source', 'Key', 'pair'), ('Key', 'pair', 'source'), ('pair', 'source', 'PRa'), ('source', 'PRa', 'PUa'), ('PRa', 'PUa', 'PRb'), ('PUa', 'PRb', 'PUb'), ('PRb', 'PUb', 'Source'), ('PUb', 'Source', 'A'), ('Source', 'A', 'Source'), ('A', 'Source', 'B'), ('Source', 'B', 'Z'), ('B', 'Z', '='), ('Z', '=', 'E'), ('=', 'E', '('), ('E', '(', 'PUb'), ('(', 'PUb', ','), ('PUb', ',', 'E'), (',', 'E', '('), ('E', '(', 'PRa'), ('(', 'PRa', ','), ('PRa', ',', 'X'), (',', 'X', ')'), ('X', ')', ')'), (')', ')', 'X'), (')', 'X', '='), ('X', '=', 'D'), ('=', 'D', '('), ('D', '(', 'PUa'), ('(', 'PUa', ','), ('PUa', ',', 'D'), (',', 'D', '('), ('D', '(', 'PRB'), ('(', 'PRB', ','), ('PRB', ',', 'Z'), (',', 'Z', ')'), ('Z', ')', ')'), (')', ')', 'Unit-4'), (')', 'Unit-4', 'Asymmertic'), ('Unit-4', 'Asymmertic', 'Ciphers'), ('Asymmertic', 'Ciphers', 'Darshan'), ('Ciphers', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', '6'), ('›', '6', 'Applications'), ('6', 'Applications', 'Public-Key'), ('Applications', 'Public-Key', 'Cryptosystems'), ('Public-Key', 'Cryptosystems', 'Encryption/decryption'), ('Cryptosystems', 'Encryption/decryption', ':'), ('Encryption/decryption', ':', 'The'), (':', 'The', 'sender'), ('The', 'sender', 'encrypts'), ('sender', 'encrypts', 'message'), ('encrypts', 'message', 'recipient'), ('message', 'recipient', '’'), ('recipient', '’', 'public'), ('’', 'public', 'key'), ('public', 'key', '.')]

>> POS Tags are: 
 [('X', 'NN'), ('Y', 'NNP'), ('Y', 'NNP'), ('X', 'NNP'), ('Z', 'NNP'), ('Key', 'NNP'), ('pair', 'NN'), ('source', 'NN'), ('Key', 'NNP'), ('pair', 'NN'), ('source', 'NN'), ('PRa', 'NNP'), ('PUa', 'NNP'), ('PRb', 'NNP'), ('PUb', 'NNP'), ('Source', 'NNP'), ('A', 'NNP'), ('Source', 'NNP'), ('B', 'NNP'), ('Z', 'NNP'), ('=', 'NNP'), ('E', 'NNP'), ('(', '('), ('PUb', 'NNP'), (',', ','), ('E', 'NNP'), ('(', '('), ('PRa', 'NNP'), (',', ','), ('X', 'NNP'), (')', ')'), (')', ')'), ('X', 'VBP'), ('=', 'JJ'), ('D', 'NNP'), ('(', '('), ('PUa', 'NNP'), (',', ','), ('D', 'NNP'), ('(', '('), ('PRB', 'NNP'), (',', ','), ('Z', 'NNP'), (')', ')'), (')', ')'), ('Unit-4', 'NNP'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', '$'), ('6', 'CD'), ('Applications', 'NNP'), ('Public-Key', 'NNP'), ('Cryptosystems', 'NNP'), ('Encryption/decryption', 'NNP'), (':', ':'), ('The', 'DT'), ('sender', 'NN'), ('encrypts', 'VBZ'), ('message', 'JJ'), ('recipient', 'JJ'), ('’', 'NNP'), ('public', 'JJ'), ('key', 'NN'), ('.', '.')]

 (S
  (NP
    X/NN
    Y/NNP
    Y/NNP
    X/NNP
    Z/NNP
    Key/NNP
    pair/NN
    source/NN
    Key/NNP
    pair/NN
    source/NN
    PRa/NNP
    PUa/NNP
    PRb/NNP
    PUb/NNP
    Source/NNP
    A/NNP
    Source/NNP
    B/NNP
    Z/NNP
    =/NNP
    E/NNP)
  (/(
  (NP PUb/NNP)
  ,/,
  (NP E/NNP)
  (/(
  (NP PRa/NNP)
  ,/,
  (NP X/NNP)
  )/)
  )/)
  X/VBP
  (NP =/JJ D/NNP)
  (/(
  (NP PUa/NNP)
  ,/,
  (NP D/NNP)
  (/(
  (NP PRB/NNP)
  ,/,
  (NP Z/NNP)
  )/)
  )/)
  (NP
    Unit-4/NNP
    Asymmertic/NNP
    Ciphers/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  ›/$
  6/CD
  (NP
    Applications/NNP
    Public-Key/NNP
    Cryptosystems/NNP
    Encryption/decryption/NNP)
  :/:
  (NP The/DT sender/NN)
  encrypts/VBZ
  (NP message/JJ recipient/JJ ’/NNP)
  (NP public/JJ key/NN)
  ./.) 


>> Noun Phrases are: 
 ['X Y Y X Z Key pair source Key pair source PRa PUa PRb PUb Source A Source B Z = E', 'PUb', 'E', 'PRa', 'X', '= D', 'PUa', 'D', 'PRB', 'Z', 'Unit-4 Asymmertic Ciphers Darshan Institute Engineering', 'Technology ‹', 'Applications Public-Key Cryptosystems Encryption/decryption', 'The sender', 'message recipient ’', 'public key']

>> Named Entities are: 
 [('ORGANIZATION', 'PRa'), ('ORGANIZATION', 'PUb'), ('GPE', 'E'), ('ORGANIZATION', 'PRa'), ('ORGANIZATION', 'PUa'), ('GPE', 'D'), ('ORGANIZATION', 'PRB'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('X', 'x'), ('Y', 'y'), ('Y', 'y'), ('X', 'x'), ('Z', 'z'), ('Key', 'key'), ('pair', 'pair'), ('source', 'sourc'), ('Key', 'key'), ('pair', 'pair'), ('source', 'sourc'), ('PRa', 'pra'), ('PUa', 'pua'), ('PRb', 'prb'), ('PUb', 'pub'), ('Source', 'sourc'), ('A', 'a'), ('Source', 'sourc'), ('B', 'b'), ('Z', 'z'), ('=', '='), ('E', 'e'), ('(', '('), ('PUb', 'pub'), (',', ','), ('E', 'e'), ('(', '('), ('PRa', 'pra'), (',', ','), ('X', 'x'), (')', ')'), (')', ')'), ('X', 'x'), ('=', '='), ('D', 'd'), ('(', '('), ('PUa', 'pua'), (',', ','), ('D', 'd'), ('(', '('), ('PRB', 'prb'), (',', ','), ('Z', 'z'), (')', ')'), (')', ')'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('6', '6'), ('Applications', 'applic'), ('Public-Key', 'public-key'), ('Cryptosystems', 'cryptosystem'), ('Encryption/decryption', 'encryption/decrypt'), (':', ':'), ('The', 'the'), ('sender', 'sender'), ('encrypts', 'encrypt'), ('message', 'messag'), ('recipient', 'recipi'), ('’', '’'), ('public', 'public'), ('key', 'key'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('X', 'x'), ('Y', 'y'), ('Y', 'y'), ('X', 'x'), ('Z', 'z'), ('Key', 'key'), ('pair', 'pair'), ('source', 'sourc'), ('Key', 'key'), ('pair', 'pair'), ('source', 'sourc'), ('PRa', 'pra'), ('PUa', 'pua'), ('PRb', 'prb'), ('PUb', 'pub'), ('Source', 'sourc'), ('A', 'a'), ('Source', 'sourc'), ('B', 'b'), ('Z', 'z'), ('=', '='), ('E', 'e'), ('(', '('), ('PUb', 'pub'), (',', ','), ('E', 'e'), ('(', '('), ('PRa', 'pra'), (',', ','), ('X', 'x'), (')', ')'), (')', ')'), ('X', 'x'), ('=', '='), ('D', 'd'), ('(', '('), ('PUa', 'pua'), (',', ','), ('D', 'd'), ('(', '('), ('PRB', 'prb'), (',', ','), ('Z', 'z'), (')', ')'), (')', ')'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('6', '6'), ('Applications', 'applic'), ('Public-Key', 'public-key'), ('Cryptosystems', 'cryptosystem'), ('Encryption/decryption', 'encryption/decrypt'), (':', ':'), ('The', 'the'), ('sender', 'sender'), ('encrypts', 'encrypt'), ('message', 'messag'), ('recipient', 'recipi'), ('’', '’'), ('public', 'public'), ('key', 'key'), ('.', '.')]

>> Lemmatization: 
 [('X', 'X'), ('Y', 'Y'), ('Y', 'Y'), ('X', 'X'), ('Z', 'Z'), ('Key', 'Key'), ('pair', 'pair'), ('source', 'source'), ('Key', 'Key'), ('pair', 'pair'), ('source', 'source'), ('PRa', 'PRa'), ('PUa', 'PUa'), ('PRb', 'PRb'), ('PUb', 'PUb'), ('Source', 'Source'), ('A', 'A'), ('Source', 'Source'), ('B', 'B'), ('Z', 'Z'), ('=', '='), ('E', 'E'), ('(', '('), ('PUb', 'PUb'), (',', ','), ('E', 'E'), ('(', '('), ('PRa', 'PRa'), (',', ','), ('X', 'X'), (')', ')'), (')', ')'), ('X', 'X'), ('=', '='), ('D', 'D'), ('(', '('), ('PUa', 'PUa'), (',', ','), ('D', 'D'), ('(', '('), ('PRB', 'PRB'), (',', ','), ('Z', 'Z'), (')', ')'), (')', ')'), ('Unit-4', 'Unit-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('6', '6'), ('Applications', 'Applications'), ('Public-Key', 'Public-Key'), ('Cryptosystems', 'Cryptosystems'), ('Encryption/decryption', 'Encryption/decryption'), (':', ':'), ('The', 'The'), ('sender', 'sender'), ('encrypts', 'encrypts'), ('message', 'message'), ('recipient', 'recipient'), ('’', '’'), ('public', 'public'), ('key', 'key'), ('.', '.')]



============================ Sentence 5 =============================

Digital signature: The sender “signs” a message with its private key. 


>> Tokens are: 
 ['Digital', 'signature', ':', 'The', 'sender', '“', 'signs', '”', 'message', 'private', 'key', '.']

>> Bigrams are: 
 [('Digital', 'signature'), ('signature', ':'), (':', 'The'), ('The', 'sender'), ('sender', '“'), ('“', 'signs'), ('signs', '”'), ('”', 'message'), ('message', 'private'), ('private', 'key'), ('key', '.')]

>> Trigrams are: 
 [('Digital', 'signature', ':'), ('signature', ':', 'The'), (':', 'The', 'sender'), ('The', 'sender', '“'), ('sender', '“', 'signs'), ('“', 'signs', '”'), ('signs', '”', 'message'), ('”', 'message', 'private'), ('message', 'private', 'key'), ('private', 'key', '.')]

>> POS Tags are: 
 [('Digital', 'NNP'), ('signature', 'NN'), (':', ':'), ('The', 'DT'), ('sender', 'NN'), ('“', 'NNP'), ('signs', 'NNS'), ('”', 'JJ'), ('message', 'NN'), ('private', 'JJ'), ('key', 'NN'), ('.', '.')]

 (S
  (NP Digital/NNP signature/NN)
  :/:
  (NP The/DT sender/NN “/NNP signs/NNS)
  (NP ”/JJ message/NN)
  (NP private/JJ key/NN)
  ./.) 


>> Noun Phrases are: 
 ['Digital signature', 'The sender “ signs', '” message', 'private key']

>> Named Entities are: 
 [('ORGANIZATION', 'Digital')] 

>> Stemming using Porter Stemmer: 
 [('Digital', 'digit'), ('signature', 'signatur'), (':', ':'), ('The', 'the'), ('sender', 'sender'), ('“', '“'), ('signs', 'sign'), ('”', '”'), ('message', 'messag'), ('private', 'privat'), ('key', 'key'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Digital', 'digit'), ('signature', 'signatur'), (':', ':'), ('The', 'the'), ('sender', 'sender'), ('“', '“'), ('signs', 'sign'), ('”', '”'), ('message', 'messag'), ('private', 'privat'), ('key', 'key'), ('.', '.')]

>> Lemmatization: 
 [('Digital', 'Digital'), ('signature', 'signature'), (':', ':'), ('The', 'The'), ('sender', 'sender'), ('“', '“'), ('signs', 'sign'), ('”', '”'), ('message', 'message'), ('private', 'private'), ('key', 'key'), ('.', '.')]



============================ Sentence 6 =============================

Signing is achieved by a cryptographic algorithm applied to the message or to a small block of data that is a function of the message. 


>> Tokens are: 
 ['Signing', 'achieved', 'cryptographic', 'algorithm', 'applied', 'message', 'small', 'block', 'data', 'function', 'message', '.']

>> Bigrams are: 
 [('Signing', 'achieved'), ('achieved', 'cryptographic'), ('cryptographic', 'algorithm'), ('algorithm', 'applied'), ('applied', 'message'), ('message', 'small'), ('small', 'block'), ('block', 'data'), ('data', 'function'), ('function', 'message'), ('message', '.')]

>> Trigrams are: 
 [('Signing', 'achieved', 'cryptographic'), ('achieved', 'cryptographic', 'algorithm'), ('cryptographic', 'algorithm', 'applied'), ('algorithm', 'applied', 'message'), ('applied', 'message', 'small'), ('message', 'small', 'block'), ('small', 'block', 'data'), ('block', 'data', 'function'), ('data', 'function', 'message'), ('function', 'message', '.')]

>> POS Tags are: 
 [('Signing', 'VBG'), ('achieved', 'VBN'), ('cryptographic', 'JJ'), ('algorithm', 'NNS'), ('applied', 'VBN'), ('message', 'NN'), ('small', 'JJ'), ('block', 'NN'), ('data', 'NNS'), ('function', 'NN'), ('message', 'NN'), ('.', '.')]

 (S
  Signing/VBG
  achieved/VBN
  (NP cryptographic/JJ algorithm/NNS)
  applied/VBN
  (NP message/NN)
  (NP small/JJ block/NN data/NNS function/NN message/NN)
  ./.) 


>> Noun Phrases are: 
 ['cryptographic algorithm', 'message', 'small block data function message']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Signing', 'sign'), ('achieved', 'achiev'), ('cryptographic', 'cryptograph'), ('algorithm', 'algorithm'), ('applied', 'appli'), ('message', 'messag'), ('small', 'small'), ('block', 'block'), ('data', 'data'), ('function', 'function'), ('message', 'messag'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Signing', 'sign'), ('achieved', 'achiev'), ('cryptographic', 'cryptograph'), ('algorithm', 'algorithm'), ('applied', 'appli'), ('message', 'messag'), ('small', 'small'), ('block', 'block'), ('data', 'data'), ('function', 'function'), ('message', 'messag'), ('.', '.')]

>> Lemmatization: 
 [('Signing', 'Signing'), ('achieved', 'achieved'), ('cryptographic', 'cryptographic'), ('algorithm', 'algorithm'), ('applied', 'applied'), ('message', 'message'), ('small', 'small'), ('block', 'block'), ('data', 'data'), ('function', 'function'), ('message', 'message'), ('.', '.')]



============================ Sentence 7 =============================

Key exchange: Two sides cooperate to exchange a session key. 


>> Tokens are: 
 ['Key', 'exchange', ':', 'Two', 'sides', 'cooperate', 'exchange', 'session', 'key', '.']

>> Bigrams are: 
 [('Key', 'exchange'), ('exchange', ':'), (':', 'Two'), ('Two', 'sides'), ('sides', 'cooperate'), ('cooperate', 'exchange'), ('exchange', 'session'), ('session', 'key'), ('key', '.')]

>> Trigrams are: 
 [('Key', 'exchange', ':'), ('exchange', ':', 'Two'), (':', 'Two', 'sides'), ('Two', 'sides', 'cooperate'), ('sides', 'cooperate', 'exchange'), ('cooperate', 'exchange', 'session'), ('exchange', 'session', 'key'), ('session', 'key', '.')]

>> POS Tags are: 
 [('Key', 'JJ'), ('exchange', 'NN'), (':', ':'), ('Two', 'CD'), ('sides', 'NNS'), ('cooperate', 'VBP'), ('exchange', 'NN'), ('session', 'NN'), ('key', 'NN'), ('.', '.')]

 (S
  (NP Key/JJ exchange/NN)
  :/:
  Two/CD
  (NP sides/NNS)
  cooperate/VBP
  (NP exchange/NN session/NN key/NN)
  ./.) 


>> Noun Phrases are: 
 ['Key exchange', 'sides', 'exchange session key']

>> Named Entities are: 
 [('GPE', 'Key')] 

>> Stemming using Porter Stemmer: 
 [('Key', 'key'), ('exchange', 'exchang'), (':', ':'), ('Two', 'two'), ('sides', 'side'), ('cooperate', 'cooper'), ('exchange', 'exchang'), ('session', 'session'), ('key', 'key'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Key', 'key'), ('exchange', 'exchang'), (':', ':'), ('Two', 'two'), ('sides', 'side'), ('cooperate', 'cooper'), ('exchange', 'exchang'), ('session', 'session'), ('key', 'key'), ('.', '.')]

>> Lemmatization: 
 [('Key', 'Key'), ('exchange', 'exchange'), (':', ':'), ('Two', 'Two'), ('sides', 'side'), ('cooperate', 'cooperate'), ('exchange', 'exchange'), ('session', 'session'), ('key', 'key'), ('.', '.')]



============================ Sentence 8 =============================

Several different approaches are possible, involving the private key(s) of one or both parties. 


>> Tokens are: 
 ['Several', 'different', 'approaches', 'possible', ',', 'involving', 'private', 'key', '(', ')', 'one', 'parties', '.']

>> Bigrams are: 
 [('Several', 'different'), ('different', 'approaches'), ('approaches', 'possible'), ('possible', ','), (',', 'involving'), ('involving', 'private'), ('private', 'key'), ('key', '('), ('(', ')'), (')', 'one'), ('one', 'parties'), ('parties', '.')]

>> Trigrams are: 
 [('Several', 'different', 'approaches'), ('different', 'approaches', 'possible'), ('approaches', 'possible', ','), ('possible', ',', 'involving'), (',', 'involving', 'private'), ('involving', 'private', 'key'), ('private', 'key', '('), ('key', '(', ')'), ('(', ')', 'one'), (')', 'one', 'parties'), ('one', 'parties', '.')]

>> POS Tags are: 
 [('Several', 'JJ'), ('different', 'JJ'), ('approaches', 'NNS'), ('possible', 'JJ'), (',', ','), ('involving', 'VBG'), ('private', 'JJ'), ('key', 'NN'), ('(', '('), (')', ')'), ('one', 'CD'), ('parties', 'NNS'), ('.', '.')]

 (S
  (NP Several/JJ different/JJ approaches/NNS)
  possible/JJ
  ,/,
  involving/VBG
  (NP private/JJ key/NN)
  (/(
  )/)
  one/CD
  (NP parties/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Several different approaches', 'private key', 'parties']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Several', 'sever'), ('different', 'differ'), ('approaches', 'approach'), ('possible', 'possibl'), (',', ','), ('involving', 'involv'), ('private', 'privat'), ('key', 'key'), ('(', '('), (')', ')'), ('one', 'one'), ('parties', 'parti'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Several', 'sever'), ('different', 'differ'), ('approaches', 'approach'), ('possible', 'possibl'), (',', ','), ('involving', 'involv'), ('private', 'privat'), ('key', 'key'), ('(', '('), (')', ')'), ('one', 'one'), ('parties', 'parti'), ('.', '.')]

>> Lemmatization: 
 [('Several', 'Several'), ('different', 'different'), ('approaches', 'approach'), ('possible', 'possible'), (',', ','), ('involving', 'involving'), ('private', 'private'), ('key', 'key'), ('(', '('), (')', ')'), ('one', 'one'), ('parties', 'party'), ('.', '.')]



============================ Sentence 9 =============================

Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  RSA Algorithm RSA is a block cipher in which the Plaintext and Ciphertext are represented as integers between 0 and n-1 for some n. Large messages can be broken up into a number of blocks. 


>> Tokens are: 
 ['Unit-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'RSA', 'Algorithm', 'RSA', 'block', 'cipher', 'Plaintext', 'Ciphertext', 'represented', 'integers', '0', 'n-1', 'n.', 'Large', 'messages', 'broken', 'number', 'blocks', '.']

>> Bigrams are: 
 [('Unit-4', 'Asymmertic'), ('Asymmertic', 'Ciphers'), ('Ciphers', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'RSA'), ('RSA', 'Algorithm'), ('Algorithm', 'RSA'), ('RSA', 'block'), ('block', 'cipher'), ('cipher', 'Plaintext'), ('Plaintext', 'Ciphertext'), ('Ciphertext', 'represented'), ('represented', 'integers'), ('integers', '0'), ('0', 'n-1'), ('n-1', 'n.'), ('n.', 'Large'), ('Large', 'messages'), ('messages', 'broken'), ('broken', 'number'), ('number', 'blocks'), ('blocks', '.')]

>> Trigrams are: 
 [('Unit-4', 'Asymmertic', 'Ciphers'), ('Asymmertic', 'Ciphers', 'Darshan'), ('Ciphers', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'RSA'), ('›', 'RSA', 'Algorithm'), ('RSA', 'Algorithm', 'RSA'), ('Algorithm', 'RSA', 'block'), ('RSA', 'block', 'cipher'), ('block', 'cipher', 'Plaintext'), ('cipher', 'Plaintext', 'Ciphertext'), ('Plaintext', 'Ciphertext', 'represented'), ('Ciphertext', 'represented', 'integers'), ('represented', 'integers', '0'), ('integers', '0', 'n-1'), ('0', 'n-1', 'n.'), ('n-1', 'n.', 'Large'), ('n.', 'Large', 'messages'), ('Large', 'messages', 'broken'), ('messages', 'broken', 'number'), ('broken', 'number', 'blocks'), ('number', 'blocks', '.')]

>> POS Tags are: 
 [('Unit-4', 'JJ'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('RSA', 'NNP'), ('Algorithm', 'NNP'), ('RSA', 'NNP'), ('block', 'NN'), ('cipher', 'NN'), ('Plaintext', 'NNP'), ('Ciphertext', 'NNP'), ('represented', 'VBD'), ('integers', 'NNS'), ('0', 'CD'), ('n-1', 'JJ'), ('n.', 'JJ'), ('Large', 'NNP'), ('messages', 'NNS'), ('broken', 'VBP'), ('number', 'NN'), ('blocks', 'NNS'), ('.', '.')]

 (S
  (NP
    Unit-4/JJ
    Asymmertic/NNP
    Ciphers/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP
    ›/NNP
    RSA/NNP
    Algorithm/NNP
    RSA/NNP
    block/NN
    cipher/NN
    Plaintext/NNP
    Ciphertext/NNP)
  represented/VBD
  (NP integers/NNS)
  0/CD
  (NP n-1/JJ n./JJ Large/NNP messages/NNS)
  broken/VBP
  (NP number/NN blocks/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Unit-4 Asymmertic Ciphers Darshan Institute Engineering', 'Technology ‹', '› RSA Algorithm RSA block cipher Plaintext Ciphertext', 'integers', 'n-1 n. Large messages', 'number blocks']

>> Named Entities are: 
 [('ORGANIZATION', 'Asymmertic Ciphers Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Plaintext Ciphertext')] 

>> Stemming using Porter Stemmer: 
 [('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('RSA', 'rsa'), ('Algorithm', 'algorithm'), ('RSA', 'rsa'), ('block', 'block'), ('cipher', 'cipher'), ('Plaintext', 'plaintext'), ('Ciphertext', 'ciphertext'), ('represented', 'repres'), ('integers', 'integ'), ('0', '0'), ('n-1', 'n-1'), ('n.', 'n.'), ('Large', 'larg'), ('messages', 'messag'), ('broken', 'broken'), ('number', 'number'), ('blocks', 'block'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('RSA', 'rsa'), ('Algorithm', 'algorithm'), ('RSA', 'rsa'), ('block', 'block'), ('cipher', 'cipher'), ('Plaintext', 'plaintext'), ('Ciphertext', 'ciphertext'), ('represented', 'repres'), ('integers', 'integ'), ('0', '0'), ('n-1', 'n-1'), ('n.', 'n.'), ('Large', 'larg'), ('messages', 'messag'), ('broken', 'broken'), ('number', 'number'), ('blocks', 'block'), ('.', '.')]

>> Lemmatization: 
 [('Unit-4', 'Unit-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('RSA', 'RSA'), ('Algorithm', 'Algorithm'), ('RSA', 'RSA'), ('block', 'block'), ('cipher', 'cipher'), ('Plaintext', 'Plaintext'), ('Ciphertext', 'Ciphertext'), ('represented', 'represented'), ('integers', 'integer'), ('0', '0'), ('n-1', 'n-1'), ('n.', 'n.'), ('Large', 'Large'), ('messages', 'message'), ('broken', 'broken'), ('number', 'number'), ('blocks', 'block'), ('.', '.')]



============================ Sentence 10 =============================

Each block would then be represented by an integer. 


>> Tokens are: 
 ['Each', 'block', 'would', 'represented', 'integer', '.']

>> Bigrams are: 
 [('Each', 'block'), ('block', 'would'), ('would', 'represented'), ('represented', 'integer'), ('integer', '.')]

>> Trigrams are: 
 [('Each', 'block', 'would'), ('block', 'would', 'represented'), ('would', 'represented', 'integer'), ('represented', 'integer', '.')]

>> POS Tags are: 
 [('Each', 'DT'), ('block', 'NN'), ('would', 'MD'), ('represented', 'VBN'), ('integer', 'NN'), ('.', '.')]

 (S
  (NP Each/DT block/NN)
  would/MD
  represented/VBN
  (NP integer/NN)
  ./.) 


>> Noun Phrases are: 
 ['Each block', 'integer']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Each', 'each'), ('block', 'block'), ('would', 'would'), ('represented', 'repres'), ('integer', 'integ'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Each', 'each'), ('block', 'block'), ('would', 'would'), ('represented', 'repres'), ('integer', 'integ'), ('.', '.')]

>> Lemmatization: 
 [('Each', 'Each'), ('block', 'block'), ('would', 'would'), ('represented', 'represented'), ('integer', 'integer'), ('.', '.')]



============================ Sentence 11 =============================

Step-1: Generate Public key and Private key Step-2: Encrypt message using Public key Step-3: Decrypt message using Private key     Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  Step-1: Generate Public key and Private key Select two large prime numbers:  p and q Calculate modulus : n = p * q Calculate Euler’s totient function : φ(n) = (p-1) * (q-1) Select e such that e is relatively prime to φ(n) and 1 < e < φ(n)    Determine d such that d * e ≡ 1 (mod φ(n)) Publickey : PU = { e, n } Privatekey : PR = { d, n }  Two numbers are relatively prime if they have no common factors other than 1. 


>> Tokens are: 
 ['Step-1', ':', 'Generate', 'Public', 'key', 'Private', 'key', 'Step-2', ':', 'Encrypt', 'message', 'using', 'Public', 'key', 'Step-3', ':', 'Decrypt', 'message', 'using', 'Private', 'key', 'Unit-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Step-1', ':', 'Generate', 'Public', 'key', 'Private', 'key', 'Select', 'two', 'large', 'prime', 'numbers', ':', 'p', 'q', 'Calculate', 'modulus', ':', 'n', '=', 'p', '*', 'q', 'Calculate', 'Euler', '’', 'totient', 'function', ':', 'φ', '(', 'n', ')', '=', '(', 'p-1', ')', '*', '(', 'q-1', ')', 'Select', 'e', 'e', 'relatively', 'prime', 'φ', '(', 'n', ')', '1', '<', 'e', '<', 'φ', '(', 'n', ')', 'Determine', '*', 'e', '≡', '1', '(', 'mod', 'φ', '(', 'n', ')', ')', 'Publickey', ':', 'PU', '=', '{', 'e', ',', 'n', '}', 'Privatekey', ':', 'PR', '=', '{', ',', 'n', '}', 'Two', 'numbers', 'relatively', 'prime', 'common', 'factors', '1', '.']

>> Bigrams are: 
 [('Step-1', ':'), (':', 'Generate'), ('Generate', 'Public'), ('Public', 'key'), ('key', 'Private'), ('Private', 'key'), ('key', 'Step-2'), ('Step-2', ':'), (':', 'Encrypt'), ('Encrypt', 'message'), ('message', 'using'), ('using', 'Public'), ('Public', 'key'), ('key', 'Step-3'), ('Step-3', ':'), (':', 'Decrypt'), ('Decrypt', 'message'), ('message', 'using'), ('using', 'Private'), ('Private', 'key'), ('key', 'Unit-4'), ('Unit-4', 'Asymmertic'), ('Asymmertic', 'Ciphers'), ('Ciphers', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Step-1'), ('Step-1', ':'), (':', 'Generate'), ('Generate', 'Public'), ('Public', 'key'), ('key', 'Private'), ('Private', 'key'), ('key', 'Select'), ('Select', 'two'), ('two', 'large'), ('large', 'prime'), ('prime', 'numbers'), ('numbers', ':'), (':', 'p'), ('p', 'q'), ('q', 'Calculate'), ('Calculate', 'modulus'), ('modulus', ':'), (':', 'n'), ('n', '='), ('=', 'p'), ('p', '*'), ('*', 'q'), ('q', 'Calculate'), ('Calculate', 'Euler'), ('Euler', '’'), ('’', 'totient'), ('totient', 'function'), ('function', ':'), (':', 'φ'), ('φ', '('), ('(', 'n'), ('n', ')'), (')', '='), ('=', '('), ('(', 'p-1'), ('p-1', ')'), (')', '*'), ('*', '('), ('(', 'q-1'), ('q-1', ')'), (')', 'Select'), ('Select', 'e'), ('e', 'e'), ('e', 'relatively'), ('relatively', 'prime'), ('prime', 'φ'), ('φ', '('), ('(', 'n'), ('n', ')'), (')', '1'), ('1', '<'), ('<', 'e'), ('e', '<'), ('<', 'φ'), ('φ', '('), ('(', 'n'), ('n', ')'), (')', 'Determine'), ('Determine', '*'), ('*', 'e'), ('e', '≡'), ('≡', '1'), ('1', '('), ('(', 'mod'), ('mod', 'φ'), ('φ', '('), ('(', 'n'), ('n', ')'), (')', ')'), (')', 'Publickey'), ('Publickey', ':'), (':', 'PU'), ('PU', '='), ('=', '{'), ('{', 'e'), ('e', ','), (',', 'n'), ('n', '}'), ('}', 'Privatekey'), ('Privatekey', ':'), (':', 'PR'), ('PR', '='), ('=', '{'), ('{', ','), (',', 'n'), ('n', '}'), ('}', 'Two'), ('Two', 'numbers'), ('numbers', 'relatively'), ('relatively', 'prime'), ('prime', 'common'), ('common', 'factors'), ('factors', '1'), ('1', '.')]

>> Trigrams are: 
 [('Step-1', ':', 'Generate'), (':', 'Generate', 'Public'), ('Generate', 'Public', 'key'), ('Public', 'key', 'Private'), ('key', 'Private', 'key'), ('Private', 'key', 'Step-2'), ('key', 'Step-2', ':'), ('Step-2', ':', 'Encrypt'), (':', 'Encrypt', 'message'), ('Encrypt', 'message', 'using'), ('message', 'using', 'Public'), ('using', 'Public', 'key'), ('Public', 'key', 'Step-3'), ('key', 'Step-3', ':'), ('Step-3', ':', 'Decrypt'), (':', 'Decrypt', 'message'), ('Decrypt', 'message', 'using'), ('message', 'using', 'Private'), ('using', 'Private', 'key'), ('Private', 'key', 'Unit-4'), ('key', 'Unit-4', 'Asymmertic'), ('Unit-4', 'Asymmertic', 'Ciphers'), ('Asymmertic', 'Ciphers', 'Darshan'), ('Ciphers', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Step-1'), ('›', 'Step-1', ':'), ('Step-1', ':', 'Generate'), (':', 'Generate', 'Public'), ('Generate', 'Public', 'key'), ('Public', 'key', 'Private'), ('key', 'Private', 'key'), ('Private', 'key', 'Select'), ('key', 'Select', 'two'), ('Select', 'two', 'large'), ('two', 'large', 'prime'), ('large', 'prime', 'numbers'), ('prime', 'numbers', ':'), ('numbers', ':', 'p'), (':', 'p', 'q'), ('p', 'q', 'Calculate'), ('q', 'Calculate', 'modulus'), ('Calculate', 'modulus', ':'), ('modulus', ':', 'n'), (':', 'n', '='), ('n', '=', 'p'), ('=', 'p', '*'), ('p', '*', 'q'), ('*', 'q', 'Calculate'), ('q', 'Calculate', 'Euler'), ('Calculate', 'Euler', '’'), ('Euler', '’', 'totient'), ('’', 'totient', 'function'), ('totient', 'function', ':'), ('function', ':', 'φ'), (':', 'φ', '('), ('φ', '(', 'n'), ('(', 'n', ')'), ('n', ')', '='), (')', '=', '('), ('=', '(', 'p-1'), ('(', 'p-1', ')'), ('p-1', ')', '*'), (')', '*', '('), ('*', '(', 'q-1'), ('(', 'q-1', ')'), ('q-1', ')', 'Select'), (')', 'Select', 'e'), ('Select', 'e', 'e'), ('e', 'e', 'relatively'), ('e', 'relatively', 'prime'), ('relatively', 'prime', 'φ'), ('prime', 'φ', '('), ('φ', '(', 'n'), ('(', 'n', ')'), ('n', ')', '1'), (')', '1', '<'), ('1', '<', 'e'), ('<', 'e', '<'), ('e', '<', 'φ'), ('<', 'φ', '('), ('φ', '(', 'n'), ('(', 'n', ')'), ('n', ')', 'Determine'), (')', 'Determine', '*'), ('Determine', '*', 'e'), ('*', 'e', '≡'), ('e', '≡', '1'), ('≡', '1', '('), ('1', '(', 'mod'), ('(', 'mod', 'φ'), ('mod', 'φ', '('), ('φ', '(', 'n'), ('(', 'n', ')'), ('n', ')', ')'), (')', ')', 'Publickey'), (')', 'Publickey', ':'), ('Publickey', ':', 'PU'), (':', 'PU', '='), ('PU', '=', '{'), ('=', '{', 'e'), ('{', 'e', ','), ('e', ',', 'n'), (',', 'n', '}'), ('n', '}', 'Privatekey'), ('}', 'Privatekey', ':'), ('Privatekey', ':', 'PR'), (':', 'PR', '='), ('PR', '=', '{'), ('=', '{', ','), ('{', ',', 'n'), (',', 'n', '}'), ('n', '}', 'Two'), ('}', 'Two', 'numbers'), ('Two', 'numbers', 'relatively'), ('numbers', 'relatively', 'prime'), ('relatively', 'prime', 'common'), ('prime', 'common', 'factors'), ('common', 'factors', '1'), ('factors', '1', '.')]

>> POS Tags are: 
 [('Step-1', 'NN'), (':', ':'), ('Generate', 'NNP'), ('Public', 'NNP'), ('key', 'JJ'), ('Private', 'NNP'), ('key', 'JJ'), ('Step-2', 'NNP'), (':', ':'), ('Encrypt', 'NNP'), ('message', 'NN'), ('using', 'VBG'), ('Public', 'NNP'), ('key', 'JJ'), ('Step-3', 'NNP'), (':', ':'), ('Decrypt', 'NNP'), ('message', 'NN'), ('using', 'VBG'), ('Private', 'NNP'), ('key', 'JJ'), ('Unit-4', 'NNP'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'JJ'), ('Step-1', 'JJ'), (':', ':'), ('Generate', 'NNP'), ('Public', 'NNP'), ('key', 'JJ'), ('Private', 'NNP'), ('key', 'NN'), ('Select', 'NNP'), ('two', 'CD'), ('large', 'JJ'), ('prime', 'JJ'), ('numbers', 'NNS'), (':', ':'), ('p', 'NN'), ('q', 'NN'), ('Calculate', 'NNP'), ('modulus', 'NN'), (':', ':'), ('n', 'JJ'), ('=', 'NNP'), ('p', 'NN'), ('*', 'NNP'), ('q', 'NN'), ('Calculate', 'NNP'), ('Euler', 'NNP'), ('’', 'NNP'), ('totient', 'JJ'), ('function', 'NN'), (':', ':'), ('φ', 'NN'), ('(', '('), ('n', 'JJ'), (')', ')'), ('=', 'NN'), ('(', '('), ('p-1', 'JJ'), (')', ')'), ('*', 'NN'), ('(', '('), ('q-1', 'JJ'), (')', ')'), ('Select', 'NNP'), ('e', 'NN'), ('e', 'NN'), ('relatively', 'RB'), ('prime', 'JJ'), ('φ', 'NNP'), ('(', '('), ('n', 'NN'), (')', ')'), ('1', 'CD'), ('<', 'JJ'), ('e', 'NN'), ('<', 'NNP'), ('φ', 'NNP'), ('(', '('), ('n', 'NN'), (')', ')'), ('Determine', 'NNP'), ('*', 'NNP'), ('e', 'VBD'), ('≡', 'JJ'), ('1', 'CD'), ('(', '('), ('mod', 'NN'), ('φ', 'NNP'), ('(', '('), ('n', 'RB'), (')', ')'), (')', ')'), ('Publickey', 'NN'), (':', ':'), ('PU', 'NNP'), ('=', 'NNP'), ('{', '('), ('e', 'NN'), (',', ','), ('n', 'JJ'), ('}', ')'), ('Privatekey', 'NNP'), (':', ':'), ('PR', 'NNP'), ('=', 'NNP'), ('{', '('), (',', ','), ('n', 'RB'), ('}', ')'), ('Two', 'CD'), ('numbers', 'NNS'), ('relatively', 'RB'), ('prime', 'JJ'), ('common', 'JJ'), ('factors', 'NNS'), ('1', 'CD'), ('.', '.')]

 (S
  (NP Step-1/NN)
  :/:
  (NP Generate/NNP Public/NNP)
  (NP key/JJ Private/NNP)
  (NP key/JJ Step-2/NNP)
  :/:
  (NP Encrypt/NNP message/NN)
  using/VBG
  (NP Public/NNP)
  (NP key/JJ Step-3/NNP)
  :/:
  (NP Decrypt/NNP message/NN)
  using/VBG
  (NP Private/NNP)
  (NP
    key/JJ
    Unit-4/NNP
    Asymmertic/NNP
    Ciphers/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  ›/JJ
  Step-1/JJ
  :/:
  (NP Generate/NNP Public/NNP)
  (NP key/JJ Private/NNP key/NN Select/NNP)
  two/CD
  (NP large/JJ prime/JJ numbers/NNS)
  :/:
  (NP p/NN q/NN Calculate/NNP modulus/NN)
  :/:
  (NP n/JJ =/NNP p/NN */NNP q/NN Calculate/NNP Euler/NNP ’/NNP)
  (NP totient/JJ function/NN)
  :/:
  (NP φ/NN)
  (/(
  n/JJ
  )/)
  (NP =/NN)
  (/(
  p-1/JJ
  )/)
  (NP */NN)
  (/(
  q-1/JJ
  )/)
  (NP Select/NNP e/NN e/NN)
  relatively/RB
  (NP prime/JJ φ/NNP)
  (/(
  (NP n/NN)
  )/)
  1/CD
  (NP </JJ e/NN </NNP φ/NNP)
  (/(
  (NP n/NN)
  )/)
  (NP Determine/NNP */NNP)
  e/VBD
  ≡/JJ
  1/CD
  (/(
  (NP mod/NN φ/NNP)
  (/(
  n/RB
  )/)
  )/)
  (NP Publickey/NN)
  :/:
  (NP PU/NNP =/NNP)
  {/(
  (NP e/NN)
  ,/,
  n/JJ
  }/)
  (NP Privatekey/NNP)
  :/:
  (NP PR/NNP =/NNP)
  {/(
  ,/,
  n/RB
  }/)
  Two/CD
  (NP numbers/NNS)
  relatively/RB
  (NP prime/JJ common/JJ factors/NNS)
  1/CD
  ./.) 


>> Noun Phrases are: 
 ['Step-1', 'Generate Public', 'key Private', 'key Step-2', 'Encrypt message', 'Public', 'key Step-3', 'Decrypt message', 'Private', 'key Unit-4 Asymmertic Ciphers Darshan Institute Engineering', 'Technology ‹', 'Generate Public', 'key Private key Select', 'large prime numbers', 'p q Calculate modulus', 'n = p * q Calculate Euler ’', 'totient function', 'φ', '=', '*', 'Select e e', 'prime φ', 'n', '< e < φ', 'n', 'Determine *', 'mod φ', 'Publickey', 'PU =', 'e', 'Privatekey', 'PR =', 'numbers', 'prime common factors']

>> Named Entities are: 
 [('ORGANIZATION', 'Generate Public'), ('PERSON', 'Encrypt'), ('PERSON', 'Public'), ('ORGANIZATION', 'Private'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'Generate Public'), ('ORGANIZATION', 'Calculate'), ('ORGANIZATION', 'Calculate Euler'), ('PERSON', 'Determine')] 

>> Stemming using Porter Stemmer: 
 [('Step-1', 'step-1'), (':', ':'), ('Generate', 'gener'), ('Public', 'public'), ('key', 'key'), ('Private', 'privat'), ('key', 'key'), ('Step-2', 'step-2'), (':', ':'), ('Encrypt', 'encrypt'), ('message', 'messag'), ('using', 'use'), ('Public', 'public'), ('key', 'key'), ('Step-3', 'step-3'), (':', ':'), ('Decrypt', 'decrypt'), ('message', 'messag'), ('using', 'use'), ('Private', 'privat'), ('key', 'key'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Step-1', 'step-1'), (':', ':'), ('Generate', 'gener'), ('Public', 'public'), ('key', 'key'), ('Private', 'privat'), ('key', 'key'), ('Select', 'select'), ('two', 'two'), ('large', 'larg'), ('prime', 'prime'), ('numbers', 'number'), (':', ':'), ('p', 'p'), ('q', 'q'), ('Calculate', 'calcul'), ('modulus', 'modulu'), (':', ':'), ('n', 'n'), ('=', '='), ('p', 'p'), ('*', '*'), ('q', 'q'), ('Calculate', 'calcul'), ('Euler', 'euler'), ('’', '’'), ('totient', 'totient'), ('function', 'function'), (':', ':'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), ('=', '='), ('(', '('), ('p-1', 'p-1'), (')', ')'), ('*', '*'), ('(', '('), ('q-1', 'q-1'), (')', ')'), ('Select', 'select'), ('e', 'e'), ('e', 'e'), ('relatively', 'rel'), ('prime', 'prime'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), ('1', '1'), ('<', '<'), ('e', 'e'), ('<', '<'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), ('Determine', 'determin'), ('*', '*'), ('e', 'e'), ('≡', '≡'), ('1', '1'), ('(', '('), ('mod', 'mod'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), (')', ')'), ('Publickey', 'publickey'), (':', ':'), ('PU', 'pu'), ('=', '='), ('{', '{'), ('e', 'e'), (',', ','), ('n', 'n'), ('}', '}'), ('Privatekey', 'privatekey'), (':', ':'), ('PR', 'pr'), ('=', '='), ('{', '{'), (',', ','), ('n', 'n'), ('}', '}'), ('Two', 'two'), ('numbers', 'number'), ('relatively', 'rel'), ('prime', 'prime'), ('common', 'common'), ('factors', 'factor'), ('1', '1'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Step-1', 'step-1'), (':', ':'), ('Generate', 'generat'), ('Public', 'public'), ('key', 'key'), ('Private', 'privat'), ('key', 'key'), ('Step-2', 'step-2'), (':', ':'), ('Encrypt', 'encrypt'), ('message', 'messag'), ('using', 'use'), ('Public', 'public'), ('key', 'key'), ('Step-3', 'step-3'), (':', ':'), ('Decrypt', 'decrypt'), ('message', 'messag'), ('using', 'use'), ('Private', 'privat'), ('key', 'key'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Step-1', 'step-1'), (':', ':'), ('Generate', 'generat'), ('Public', 'public'), ('key', 'key'), ('Private', 'privat'), ('key', 'key'), ('Select', 'select'), ('two', 'two'), ('large', 'larg'), ('prime', 'prime'), ('numbers', 'number'), (':', ':'), ('p', 'p'), ('q', 'q'), ('Calculate', 'calcul'), ('modulus', 'modulus'), (':', ':'), ('n', 'n'), ('=', '='), ('p', 'p'), ('*', '*'), ('q', 'q'), ('Calculate', 'calcul'), ('Euler', 'euler'), ('’', '’'), ('totient', 'totient'), ('function', 'function'), (':', ':'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), ('=', '='), ('(', '('), ('p-1', 'p-1'), (')', ')'), ('*', '*'), ('(', '('), ('q-1', 'q-1'), (')', ')'), ('Select', 'select'), ('e', 'e'), ('e', 'e'), ('relatively', 'relat'), ('prime', 'prime'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), ('1', '1'), ('<', '<'), ('e', 'e'), ('<', '<'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), ('Determine', 'determin'), ('*', '*'), ('e', 'e'), ('≡', '≡'), ('1', '1'), ('(', '('), ('mod', 'mod'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), (')', ')'), ('Publickey', 'publickey'), (':', ':'), ('PU', 'pu'), ('=', '='), ('{', '{'), ('e', 'e'), (',', ','), ('n', 'n'), ('}', '}'), ('Privatekey', 'privatekey'), (':', ':'), ('PR', 'pr'), ('=', '='), ('{', '{'), (',', ','), ('n', 'n'), ('}', '}'), ('Two', 'two'), ('numbers', 'number'), ('relatively', 'relat'), ('prime', 'prime'), ('common', 'common'), ('factors', 'factor'), ('1', '1'), ('.', '.')]

>> Lemmatization: 
 [('Step-1', 'Step-1'), (':', ':'), ('Generate', 'Generate'), ('Public', 'Public'), ('key', 'key'), ('Private', 'Private'), ('key', 'key'), ('Step-2', 'Step-2'), (':', ':'), ('Encrypt', 'Encrypt'), ('message', 'message'), ('using', 'using'), ('Public', 'Public'), ('key', 'key'), ('Step-3', 'Step-3'), (':', ':'), ('Decrypt', 'Decrypt'), ('message', 'message'), ('using', 'using'), ('Private', 'Private'), ('key', 'key'), ('Unit-4', 'Unit-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Step-1', 'Step-1'), (':', ':'), ('Generate', 'Generate'), ('Public', 'Public'), ('key', 'key'), ('Private', 'Private'), ('key', 'key'), ('Select', 'Select'), ('two', 'two'), ('large', 'large'), ('prime', 'prime'), ('numbers', 'number'), (':', ':'), ('p', 'p'), ('q', 'q'), ('Calculate', 'Calculate'), ('modulus', 'modulus'), (':', ':'), ('n', 'n'), ('=', '='), ('p', 'p'), ('*', '*'), ('q', 'q'), ('Calculate', 'Calculate'), ('Euler', 'Euler'), ('’', '’'), ('totient', 'totient'), ('function', 'function'), (':', ':'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), ('=', '='), ('(', '('), ('p-1', 'p-1'), (')', ')'), ('*', '*'), ('(', '('), ('q-1', 'q-1'), (')', ')'), ('Select', 'Select'), ('e', 'e'), ('e', 'e'), ('relatively', 'relatively'), ('prime', 'prime'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), ('1', '1'), ('<', '<'), ('e', 'e'), ('<', '<'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), ('Determine', 'Determine'), ('*', '*'), ('e', 'e'), ('≡', '≡'), ('1', '1'), ('(', '('), ('mod', 'mod'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), (')', ')'), ('Publickey', 'Publickey'), (':', ':'), ('PU', 'PU'), ('=', '='), ('{', '{'), ('e', 'e'), (',', ','), ('n', 'n'), ('}', '}'), ('Privatekey', 'Privatekey'), (':', ':'), ('PR', 'PR'), ('=', '='), ('{', '{'), (',', ','), ('n', 'n'), ('}', '}'), ('Two', 'Two'), ('numbers', 'number'), ('relatively', 'relatively'), ('prime', 'prime'), ('common', 'common'), ('factors', 'factor'), ('1', '1'), ('.', '.')]



============================ Sentence 12 =============================

Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  Step-1: Generate Public key and Private key Select two large prime numbers:  p = 3 and q = 11 Calculate modulus : n = p * q, n = 33 Calculate Euler’s totient function : φ(n) = (p-1) * (q-1) 	φ(n) = ( 3 – 1 )  * ( 11 – 1 ) = 20 Select e such that e is relatively prime to φ(n) and 1 < e < φ(n) We have several choices for e : 7, 11, 13, 17, 19 Let’s take e = 7 Determine d such that d * e ≡ 1 (mod φ(n)) ? 


>> Tokens are: 
 ['Unit-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Step-1', ':', 'Generate', 'Public', 'key', 'Private', 'key', 'Select', 'two', 'large', 'prime', 'numbers', ':', 'p', '=', '3', 'q', '=', '11', 'Calculate', 'modulus', ':', 'n', '=', 'p', '*', 'q', ',', 'n', '=', '33', 'Calculate', 'Euler', '’', 'totient', 'function', ':', 'φ', '(', 'n', ')', '=', '(', 'p-1', ')', '*', '(', 'q-1', ')', 'φ', '(', 'n', ')', '=', '(', '3', '–', '1', ')', '*', '(', '11', '–', '1', ')', '=', '20', 'Select', 'e', 'e', 'relatively', 'prime', 'φ', '(', 'n', ')', '1', '<', 'e', '<', 'φ', '(', 'n', ')', 'We', 'several', 'choices', 'e', ':', '7', ',', '11', ',', '13', ',', '17', ',', '19', 'Let', '’', 'take', 'e', '=', '7', 'Determine', '*', 'e', '≡', '1', '(', 'mod', 'φ', '(', 'n', ')', ')', '?']

>> Bigrams are: 
 [('Unit-4', 'Asymmertic'), ('Asymmertic', 'Ciphers'), ('Ciphers', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Step-1'), ('Step-1', ':'), (':', 'Generate'), ('Generate', 'Public'), ('Public', 'key'), ('key', 'Private'), ('Private', 'key'), ('key', 'Select'), ('Select', 'two'), ('two', 'large'), ('large', 'prime'), ('prime', 'numbers'), ('numbers', ':'), (':', 'p'), ('p', '='), ('=', '3'), ('3', 'q'), ('q', '='), ('=', '11'), ('11', 'Calculate'), ('Calculate', 'modulus'), ('modulus', ':'), (':', 'n'), ('n', '='), ('=', 'p'), ('p', '*'), ('*', 'q'), ('q', ','), (',', 'n'), ('n', '='), ('=', '33'), ('33', 'Calculate'), ('Calculate', 'Euler'), ('Euler', '’'), ('’', 'totient'), ('totient', 'function'), ('function', ':'), (':', 'φ'), ('φ', '('), ('(', 'n'), ('n', ')'), (')', '='), ('=', '('), ('(', 'p-1'), ('p-1', ')'), (')', '*'), ('*', '('), ('(', 'q-1'), ('q-1', ')'), (')', 'φ'), ('φ', '('), ('(', 'n'), ('n', ')'), (')', '='), ('=', '('), ('(', '3'), ('3', '–'), ('–', '1'), ('1', ')'), (')', '*'), ('*', '('), ('(', '11'), ('11', '–'), ('–', '1'), ('1', ')'), (')', '='), ('=', '20'), ('20', 'Select'), ('Select', 'e'), ('e', 'e'), ('e', 'relatively'), ('relatively', 'prime'), ('prime', 'φ'), ('φ', '('), ('(', 'n'), ('n', ')'), (')', '1'), ('1', '<'), ('<', 'e'), ('e', '<'), ('<', 'φ'), ('φ', '('), ('(', 'n'), ('n', ')'), (')', 'We'), ('We', 'several'), ('several', 'choices'), ('choices', 'e'), ('e', ':'), (':', '7'), ('7', ','), (',', '11'), ('11', ','), (',', '13'), ('13', ','), (',', '17'), ('17', ','), (',', '19'), ('19', 'Let'), ('Let', '’'), ('’', 'take'), ('take', 'e'), ('e', '='), ('=', '7'), ('7', 'Determine'), ('Determine', '*'), ('*', 'e'), ('e', '≡'), ('≡', '1'), ('1', '('), ('(', 'mod'), ('mod', 'φ'), ('φ', '('), ('(', 'n'), ('n', ')'), (')', ')'), (')', '?')]

>> Trigrams are: 
 [('Unit-4', 'Asymmertic', 'Ciphers'), ('Asymmertic', 'Ciphers', 'Darshan'), ('Ciphers', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Step-1'), ('›', 'Step-1', ':'), ('Step-1', ':', 'Generate'), (':', 'Generate', 'Public'), ('Generate', 'Public', 'key'), ('Public', 'key', 'Private'), ('key', 'Private', 'key'), ('Private', 'key', 'Select'), ('key', 'Select', 'two'), ('Select', 'two', 'large'), ('two', 'large', 'prime'), ('large', 'prime', 'numbers'), ('prime', 'numbers', ':'), ('numbers', ':', 'p'), (':', 'p', '='), ('p', '=', '3'), ('=', '3', 'q'), ('3', 'q', '='), ('q', '=', '11'), ('=', '11', 'Calculate'), ('11', 'Calculate', 'modulus'), ('Calculate', 'modulus', ':'), ('modulus', ':', 'n'), (':', 'n', '='), ('n', '=', 'p'), ('=', 'p', '*'), ('p', '*', 'q'), ('*', 'q', ','), ('q', ',', 'n'), (',', 'n', '='), ('n', '=', '33'), ('=', '33', 'Calculate'), ('33', 'Calculate', 'Euler'), ('Calculate', 'Euler', '’'), ('Euler', '’', 'totient'), ('’', 'totient', 'function'), ('totient', 'function', ':'), ('function', ':', 'φ'), (':', 'φ', '('), ('φ', '(', 'n'), ('(', 'n', ')'), ('n', ')', '='), (')', '=', '('), ('=', '(', 'p-1'), ('(', 'p-1', ')'), ('p-1', ')', '*'), (')', '*', '('), ('*', '(', 'q-1'), ('(', 'q-1', ')'), ('q-1', ')', 'φ'), (')', 'φ', '('), ('φ', '(', 'n'), ('(', 'n', ')'), ('n', ')', '='), (')', '=', '('), ('=', '(', '3'), ('(', '3', '–'), ('3', '–', '1'), ('–', '1', ')'), ('1', ')', '*'), (')', '*', '('), ('*', '(', '11'), ('(', '11', '–'), ('11', '–', '1'), ('–', '1', ')'), ('1', ')', '='), (')', '=', '20'), ('=', '20', 'Select'), ('20', 'Select', 'e'), ('Select', 'e', 'e'), ('e', 'e', 'relatively'), ('e', 'relatively', 'prime'), ('relatively', 'prime', 'φ'), ('prime', 'φ', '('), ('φ', '(', 'n'), ('(', 'n', ')'), ('n', ')', '1'), (')', '1', '<'), ('1', '<', 'e'), ('<', 'e', '<'), ('e', '<', 'φ'), ('<', 'φ', '('), ('φ', '(', 'n'), ('(', 'n', ')'), ('n', ')', 'We'), (')', 'We', 'several'), ('We', 'several', 'choices'), ('several', 'choices', 'e'), ('choices', 'e', ':'), ('e', ':', '7'), (':', '7', ','), ('7', ',', '11'), (',', '11', ','), ('11', ',', '13'), (',', '13', ','), ('13', ',', '17'), (',', '17', ','), ('17', ',', '19'), (',', '19', 'Let'), ('19', 'Let', '’'), ('Let', '’', 'take'), ('’', 'take', 'e'), ('take', 'e', '='), ('e', '=', '7'), ('=', '7', 'Determine'), ('7', 'Determine', '*'), ('Determine', '*', 'e'), ('*', 'e', '≡'), ('e', '≡', '1'), ('≡', '1', '('), ('1', '(', 'mod'), ('(', 'mod', 'φ'), ('mod', 'φ', '('), ('φ', '(', 'n'), ('(', 'n', ')'), ('n', ')', ')'), (')', ')', '?')]

>> POS Tags are: 
 [('Unit-4', 'JJ'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'JJ'), ('Step-1', 'JJ'), (':', ':'), ('Generate', 'NNP'), ('Public', 'NNP'), ('key', 'JJ'), ('Private', 'NNP'), ('key', 'NN'), ('Select', 'NNP'), ('two', 'CD'), ('large', 'JJ'), ('prime', 'JJ'), ('numbers', 'NNS'), (':', ':'), ('p', 'NN'), ('=', 'VBZ'), ('3', 'CD'), ('q', 'NN'), ('=', '$'), ('11', 'CD'), ('Calculate', 'NNP'), ('modulus', 'NN'), (':', ':'), ('n', 'JJ'), ('=', 'NNP'), ('p', 'NN'), ('*', 'NNP'), ('q', 'NN'), (',', ','), ('n', 'JJ'), ('=', 'FW'), ('33', 'CD'), ('Calculate', 'NNP'), ('Euler', 'NNP'), ('’', 'NNP'), ('totient', 'JJ'), ('function', 'NN'), (':', ':'), ('φ', 'NN'), ('(', '('), ('n', 'JJ'), (')', ')'), ('=', 'NN'), ('(', '('), ('p-1', 'JJ'), (')', ')'), ('*', 'NN'), ('(', '('), ('q-1', 'JJ'), (')', ')'), ('φ', 'NN'), ('(', '('), ('n', 'JJ'), (')', ')'), ('=', 'NN'), ('(', '('), ('3', 'CD'), ('–', 'RB'), ('1', 'CD'), (')', ')'), ('*', 'NN'), ('(', '('), ('11', 'CD'), ('–', 'RB'), ('1', 'CD'), (')', ')'), ('=', 'VBD'), ('20', 'CD'), ('Select', 'NNP'), ('e', 'NN'), ('e', 'NN'), ('relatively', 'RB'), ('prime', 'JJ'), ('φ', 'NNP'), ('(', '('), ('n', 'NN'), (')', ')'), ('1', 'CD'), ('<', 'JJ'), ('e', 'NN'), ('<', 'NNP'), ('φ', 'NNP'), ('(', '('), ('n', 'RB'), (')', ')'), ('We', 'PRP'), ('several', 'JJ'), ('choices', 'NNS'), ('e', 'VBP'), (':', ':'), ('7', 'CD'), (',', ','), ('11', 'CD'), (',', ','), ('13', 'CD'), (',', ','), ('17', 'CD'), (',', ','), ('19', 'CD'), ('Let', 'NNP'), ('’', 'NNP'), ('take', 'VB'), ('e', 'NN'), ('=', '$'), ('7', 'CD'), ('Determine', 'NNP'), ('*', 'NNP'), ('e', 'VBD'), ('≡', 'JJ'), ('1', 'CD'), ('(', '('), ('mod', 'NN'), ('φ', 'NNP'), ('(', '('), ('n', 'RB'), (')', ')'), (')', ')'), ('?', '.')]

 (S
  (NP
    Unit-4/JJ
    Asymmertic/NNP
    Ciphers/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  ›/JJ
  Step-1/JJ
  :/:
  (NP Generate/NNP Public/NNP)
  (NP key/JJ Private/NNP key/NN Select/NNP)
  two/CD
  (NP large/JJ prime/JJ numbers/NNS)
  :/:
  (NP p/NN)
  =/VBZ
  3/CD
  (NP q/NN)
  =/$
  11/CD
  (NP Calculate/NNP modulus/NN)
  :/:
  (NP n/JJ =/NNP p/NN */NNP q/NN)
  ,/,
  n/JJ
  =/FW
  33/CD
  (NP Calculate/NNP Euler/NNP ’/NNP)
  (NP totient/JJ function/NN)
  :/:
  (NP φ/NN)
  (/(
  n/JJ
  )/)
  (NP =/NN)
  (/(
  p-1/JJ
  )/)
  (NP */NN)
  (/(
  q-1/JJ
  )/)
  (NP φ/NN)
  (/(
  n/JJ
  )/)
  (NP =/NN)
  (/(
  3/CD
  –/RB
  1/CD
  )/)
  (NP */NN)
  (/(
  11/CD
  –/RB
  1/CD
  )/)
  =/VBD
  20/CD
  (NP Select/NNP e/NN e/NN)
  relatively/RB
  (NP prime/JJ φ/NNP)
  (/(
  (NP n/NN)
  )/)
  1/CD
  (NP </JJ e/NN </NNP φ/NNP)
  (/(
  n/RB
  )/)
  We/PRP
  (NP several/JJ choices/NNS)
  e/VBP
  :/:
  7/CD
  ,/,
  11/CD
  ,/,
  13/CD
  ,/,
  17/CD
  ,/,
  19/CD
  (NP Let/NNP ’/NNP)
  take/VB
  (NP e/NN)
  =/$
  7/CD
  (NP Determine/NNP */NNP)
  e/VBD
  ≡/JJ
  1/CD
  (/(
  (NP mod/NN φ/NNP)
  (/(
  n/RB
  )/)
  )/)
  ?/.) 


>> Noun Phrases are: 
 ['Unit-4 Asymmertic Ciphers Darshan Institute Engineering', 'Technology ‹', 'Generate Public', 'key Private key Select', 'large prime numbers', 'p', 'q', 'Calculate modulus', 'n = p * q', 'Calculate Euler ’', 'totient function', 'φ', '=', '*', 'φ', '=', '*', 'Select e e', 'prime φ', 'n', '< e < φ', 'several choices', 'Let ’', 'e', 'Determine *', 'mod φ']

>> Named Entities are: 
 [('ORGANIZATION', 'Asymmertic Ciphers Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'Generate Public'), ('ORGANIZATION', 'Calculate Euler')] 

>> Stemming using Porter Stemmer: 
 [('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Step-1', 'step-1'), (':', ':'), ('Generate', 'gener'), ('Public', 'public'), ('key', 'key'), ('Private', 'privat'), ('key', 'key'), ('Select', 'select'), ('two', 'two'), ('large', 'larg'), ('prime', 'prime'), ('numbers', 'number'), (':', ':'), ('p', 'p'), ('=', '='), ('3', '3'), ('q', 'q'), ('=', '='), ('11', '11'), ('Calculate', 'calcul'), ('modulus', 'modulu'), (':', ':'), ('n', 'n'), ('=', '='), ('p', 'p'), ('*', '*'), ('q', 'q'), (',', ','), ('n', 'n'), ('=', '='), ('33', '33'), ('Calculate', 'calcul'), ('Euler', 'euler'), ('’', '’'), ('totient', 'totient'), ('function', 'function'), (':', ':'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), ('=', '='), ('(', '('), ('p-1', 'p-1'), (')', ')'), ('*', '*'), ('(', '('), ('q-1', 'q-1'), (')', ')'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), ('=', '='), ('(', '('), ('3', '3'), ('–', '–'), ('1', '1'), (')', ')'), ('*', '*'), ('(', '('), ('11', '11'), ('–', '–'), ('1', '1'), (')', ')'), ('=', '='), ('20', '20'), ('Select', 'select'), ('e', 'e'), ('e', 'e'), ('relatively', 'rel'), ('prime', 'prime'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), ('1', '1'), ('<', '<'), ('e', 'e'), ('<', '<'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), ('We', 'we'), ('several', 'sever'), ('choices', 'choic'), ('e', 'e'), (':', ':'), ('7', '7'), (',', ','), ('11', '11'), (',', ','), ('13', '13'), (',', ','), ('17', '17'), (',', ','), ('19', '19'), ('Let', 'let'), ('’', '’'), ('take', 'take'), ('e', 'e'), ('=', '='), ('7', '7'), ('Determine', 'determin'), ('*', '*'), ('e', 'e'), ('≡', '≡'), ('1', '1'), ('(', '('), ('mod', 'mod'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), (')', ')'), ('?', '?')]

>> Stemming using Snowball Stemmer: 
 [('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Step-1', 'step-1'), (':', ':'), ('Generate', 'generat'), ('Public', 'public'), ('key', 'key'), ('Private', 'privat'), ('key', 'key'), ('Select', 'select'), ('two', 'two'), ('large', 'larg'), ('prime', 'prime'), ('numbers', 'number'), (':', ':'), ('p', 'p'), ('=', '='), ('3', '3'), ('q', 'q'), ('=', '='), ('11', '11'), ('Calculate', 'calcul'), ('modulus', 'modulus'), (':', ':'), ('n', 'n'), ('=', '='), ('p', 'p'), ('*', '*'), ('q', 'q'), (',', ','), ('n', 'n'), ('=', '='), ('33', '33'), ('Calculate', 'calcul'), ('Euler', 'euler'), ('’', '’'), ('totient', 'totient'), ('function', 'function'), (':', ':'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), ('=', '='), ('(', '('), ('p-1', 'p-1'), (')', ')'), ('*', '*'), ('(', '('), ('q-1', 'q-1'), (')', ')'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), ('=', '='), ('(', '('), ('3', '3'), ('–', '–'), ('1', '1'), (')', ')'), ('*', '*'), ('(', '('), ('11', '11'), ('–', '–'), ('1', '1'), (')', ')'), ('=', '='), ('20', '20'), ('Select', 'select'), ('e', 'e'), ('e', 'e'), ('relatively', 'relat'), ('prime', 'prime'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), ('1', '1'), ('<', '<'), ('e', 'e'), ('<', '<'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), ('We', 'we'), ('several', 'sever'), ('choices', 'choic'), ('e', 'e'), (':', ':'), ('7', '7'), (',', ','), ('11', '11'), (',', ','), ('13', '13'), (',', ','), ('17', '17'), (',', ','), ('19', '19'), ('Let', 'let'), ('’', '’'), ('take', 'take'), ('e', 'e'), ('=', '='), ('7', '7'), ('Determine', 'determin'), ('*', '*'), ('e', 'e'), ('≡', '≡'), ('1', '1'), ('(', '('), ('mod', 'mod'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), (')', ')'), ('?', '?')]

>> Lemmatization: 
 [('Unit-4', 'Unit-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Step-1', 'Step-1'), (':', ':'), ('Generate', 'Generate'), ('Public', 'Public'), ('key', 'key'), ('Private', 'Private'), ('key', 'key'), ('Select', 'Select'), ('two', 'two'), ('large', 'large'), ('prime', 'prime'), ('numbers', 'number'), (':', ':'), ('p', 'p'), ('=', '='), ('3', '3'), ('q', 'q'), ('=', '='), ('11', '11'), ('Calculate', 'Calculate'), ('modulus', 'modulus'), (':', ':'), ('n', 'n'), ('=', '='), ('p', 'p'), ('*', '*'), ('q', 'q'), (',', ','), ('n', 'n'), ('=', '='), ('33', '33'), ('Calculate', 'Calculate'), ('Euler', 'Euler'), ('’', '’'), ('totient', 'totient'), ('function', 'function'), (':', ':'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), ('=', '='), ('(', '('), ('p-1', 'p-1'), (')', ')'), ('*', '*'), ('(', '('), ('q-1', 'q-1'), (')', ')'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), ('=', '='), ('(', '('), ('3', '3'), ('–', '–'), ('1', '1'), (')', ')'), ('*', '*'), ('(', '('), ('11', '11'), ('–', '–'), ('1', '1'), (')', ')'), ('=', '='), ('20', '20'), ('Select', 'Select'), ('e', 'e'), ('e', 'e'), ('relatively', 'relatively'), ('prime', 'prime'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), ('1', '1'), ('<', '<'), ('e', 'e'), ('<', '<'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), ('We', 'We'), ('several', 'several'), ('choices', 'choice'), ('e', 'e'), (':', ':'), ('7', '7'), (',', ','), ('11', '11'), (',', ','), ('13', '13'), (',', ','), ('17', '17'), (',', ','), ('19', '19'), ('Let', 'Let'), ('’', '’'), ('take', 'take'), ('e', 'e'), ('=', '='), ('7', '7'), ('Determine', 'Determine'), ('*', '*'), ('e', 'e'), ('≡', '≡'), ('1', '1'), ('(', '('), ('mod', 'mod'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), (')', ')'), ('?', '?')]



============================ Sentence 13 =============================

* 7 ≡ 1 (mod 20), 3 * 7 ≡ 1 (mod 20)  Public key : PU = { e, n } , PU = { 7, 33 } Private key : PR = { d, n }, PR = { 3, 33 }   This is equivalent to finding d which satisfies de = 1 + j.φ(n) where j is any integer. 


>> Tokens are: 
 ['*', '7', '≡', '1', '(', 'mod', '20', ')', ',', '3', '*', '7', '≡', '1', '(', 'mod', '20', ')', 'Public', 'key', ':', 'PU', '=', '{', 'e', ',', 'n', '}', ',', 'PU', '=', '{', '7', ',', '33', '}', 'Private', 'key', ':', 'PR', '=', '{', ',', 'n', '}', ',', 'PR', '=', '{', '3', ',', '33', '}', 'This', 'equivalent', 'finding', 'satisfies', 'de', '=', '1', '+', 'j.φ', '(', 'n', ')', 'j', 'integer', '.']

>> Bigrams are: 
 [('*', '7'), ('7', '≡'), ('≡', '1'), ('1', '('), ('(', 'mod'), ('mod', '20'), ('20', ')'), (')', ','), (',', '3'), ('3', '*'), ('*', '7'), ('7', '≡'), ('≡', '1'), ('1', '('), ('(', 'mod'), ('mod', '20'), ('20', ')'), (')', 'Public'), ('Public', 'key'), ('key', ':'), (':', 'PU'), ('PU', '='), ('=', '{'), ('{', 'e'), ('e', ','), (',', 'n'), ('n', '}'), ('}', ','), (',', 'PU'), ('PU', '='), ('=', '{'), ('{', '7'), ('7', ','), (',', '33'), ('33', '}'), ('}', 'Private'), ('Private', 'key'), ('key', ':'), (':', 'PR'), ('PR', '='), ('=', '{'), ('{', ','), (',', 'n'), ('n', '}'), ('}', ','), (',', 'PR'), ('PR', '='), ('=', '{'), ('{', '3'), ('3', ','), (',', '33'), ('33', '}'), ('}', 'This'), ('This', 'equivalent'), ('equivalent', 'finding'), ('finding', 'satisfies'), ('satisfies', 'de'), ('de', '='), ('=', '1'), ('1', '+'), ('+', 'j.φ'), ('j.φ', '('), ('(', 'n'), ('n', ')'), (')', 'j'), ('j', 'integer'), ('integer', '.')]

>> Trigrams are: 
 [('*', '7', '≡'), ('7', '≡', '1'), ('≡', '1', '('), ('1', '(', 'mod'), ('(', 'mod', '20'), ('mod', '20', ')'), ('20', ')', ','), (')', ',', '3'), (',', '3', '*'), ('3', '*', '7'), ('*', '7', '≡'), ('7', '≡', '1'), ('≡', '1', '('), ('1', '(', 'mod'), ('(', 'mod', '20'), ('mod', '20', ')'), ('20', ')', 'Public'), (')', 'Public', 'key'), ('Public', 'key', ':'), ('key', ':', 'PU'), (':', 'PU', '='), ('PU', '=', '{'), ('=', '{', 'e'), ('{', 'e', ','), ('e', ',', 'n'), (',', 'n', '}'), ('n', '}', ','), ('}', ',', 'PU'), (',', 'PU', '='), ('PU', '=', '{'), ('=', '{', '7'), ('{', '7', ','), ('7', ',', '33'), (',', '33', '}'), ('33', '}', 'Private'), ('}', 'Private', 'key'), ('Private', 'key', ':'), ('key', ':', 'PR'), (':', 'PR', '='), ('PR', '=', '{'), ('=', '{', ','), ('{', ',', 'n'), (',', 'n', '}'), ('n', '}', ','), ('}', ',', 'PR'), (',', 'PR', '='), ('PR', '=', '{'), ('=', '{', '3'), ('{', '3', ','), ('3', ',', '33'), (',', '33', '}'), ('33', '}', 'This'), ('}', 'This', 'equivalent'), ('This', 'equivalent', 'finding'), ('equivalent', 'finding', 'satisfies'), ('finding', 'satisfies', 'de'), ('satisfies', 'de', '='), ('de', '=', '1'), ('=', '1', '+'), ('1', '+', 'j.φ'), ('+', 'j.φ', '('), ('j.φ', '(', 'n'), ('(', 'n', ')'), ('n', ')', 'j'), (')', 'j', 'integer'), ('j', 'integer', '.')]

>> POS Tags are: 
 [('*', 'RB'), ('7', 'CD'), ('≡', 'JJ'), ('1', 'CD'), ('(', '('), ('mod', 'VB'), ('20', 'CD'), (')', ')'), (',', ','), ('3', 'CD'), ('*', 'NN'), ('7', 'CD'), ('≡', 'NN'), ('1', 'CD'), ('(', '('), ('mod', 'VB'), ('20', 'CD'), (')', ')'), ('Public', 'NNP'), ('key', 'NN'), (':', ':'), ('PU', 'NNP'), ('=', 'NNP'), ('{', '('), ('e', 'NN'), (',', ','), ('n', 'JJ'), ('}', ')'), (',', ','), ('PU', 'NNP'), ('=', 'NNP'), ('{', '('), ('7', 'CD'), (',', ','), ('33', 'CD'), ('}', ')'), ('Private', 'NNP'), ('key', 'NN'), (':', ':'), ('PR', 'NNP'), ('=', 'NNP'), ('{', '('), (',', ','), ('n', 'RB'), ('}', ')'), (',', ','), ('PR', 'NNP'), ('=', 'NNP'), ('{', '('), ('3', 'CD'), (',', ','), ('33', 'CD'), ('}', ')'), ('This', 'DT'), ('equivalent', 'JJ'), ('finding', 'NN'), ('satisfies', 'NNS'), ('de', 'VBP'), ('=', 'FW'), ('1', 'CD'), ('+', 'NN'), ('j.φ', 'NN'), ('(', '('), ('n', 'JJ'), (')', ')'), ('j', 'NN'), ('integer', 'NN'), ('.', '.')]

 (S
  */RB
  7/CD
  ≡/JJ
  1/CD
  (/(
  mod/VB
  20/CD
  )/)
  ,/,
  3/CD
  (NP */NN)
  7/CD
  (NP ≡/NN)
  1/CD
  (/(
  mod/VB
  20/CD
  )/)
  (NP Public/NNP key/NN)
  :/:
  (NP PU/NNP =/NNP)
  {/(
  (NP e/NN)
  ,/,
  n/JJ
  }/)
  ,/,
  (NP PU/NNP =/NNP)
  {/(
  7/CD
  ,/,
  33/CD
  }/)
  (NP Private/NNP key/NN)
  :/:
  (NP PR/NNP =/NNP)
  {/(
  ,/,
  n/RB
  }/)
  ,/,
  (NP PR/NNP =/NNP)
  {/(
  3/CD
  ,/,
  33/CD
  }/)
  (NP This/DT equivalent/JJ finding/NN satisfies/NNS)
  de/VBP
  =/FW
  1/CD
  (NP +/NN j.φ/NN)
  (/(
  n/JJ
  )/)
  (NP j/NN integer/NN)
  ./.) 


>> Noun Phrases are: 
 ['*', '≡', 'Public key', 'PU =', 'e', 'PU =', 'Private key', 'PR =', 'PR =', 'This equivalent finding satisfies', '+ j.φ', 'j integer']

>> Named Entities are: 
 [('ORGANIZATION', 'PU'), ('ORGANIZATION', 'PR')] 

>> Stemming using Porter Stemmer: 
 [('*', '*'), ('7', '7'), ('≡', '≡'), ('1', '1'), ('(', '('), ('mod', 'mod'), ('20', '20'), (')', ')'), (',', ','), ('3', '3'), ('*', '*'), ('7', '7'), ('≡', '≡'), ('1', '1'), ('(', '('), ('mod', 'mod'), ('20', '20'), (')', ')'), ('Public', 'public'), ('key', 'key'), (':', ':'), ('PU', 'pu'), ('=', '='), ('{', '{'), ('e', 'e'), (',', ','), ('n', 'n'), ('}', '}'), (',', ','), ('PU', 'pu'), ('=', '='), ('{', '{'), ('7', '7'), (',', ','), ('33', '33'), ('}', '}'), ('Private', 'privat'), ('key', 'key'), (':', ':'), ('PR', 'pr'), ('=', '='), ('{', '{'), (',', ','), ('n', 'n'), ('}', '}'), (',', ','), ('PR', 'pr'), ('=', '='), ('{', '{'), ('3', '3'), (',', ','), ('33', '33'), ('}', '}'), ('This', 'thi'), ('equivalent', 'equival'), ('finding', 'find'), ('satisfies', 'satisfi'), ('de', 'de'), ('=', '='), ('1', '1'), ('+', '+'), ('j.φ', 'j.φ'), ('(', '('), ('n', 'n'), (')', ')'), ('j', 'j'), ('integer', 'integ'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('*', '*'), ('7', '7'), ('≡', '≡'), ('1', '1'), ('(', '('), ('mod', 'mod'), ('20', '20'), (')', ')'), (',', ','), ('3', '3'), ('*', '*'), ('7', '7'), ('≡', '≡'), ('1', '1'), ('(', '('), ('mod', 'mod'), ('20', '20'), (')', ')'), ('Public', 'public'), ('key', 'key'), (':', ':'), ('PU', 'pu'), ('=', '='), ('{', '{'), ('e', 'e'), (',', ','), ('n', 'n'), ('}', '}'), (',', ','), ('PU', 'pu'), ('=', '='), ('{', '{'), ('7', '7'), (',', ','), ('33', '33'), ('}', '}'), ('Private', 'privat'), ('key', 'key'), (':', ':'), ('PR', 'pr'), ('=', '='), ('{', '{'), (',', ','), ('n', 'n'), ('}', '}'), (',', ','), ('PR', 'pr'), ('=', '='), ('{', '{'), ('3', '3'), (',', ','), ('33', '33'), ('}', '}'), ('This', 'this'), ('equivalent', 'equival'), ('finding', 'find'), ('satisfies', 'satisfi'), ('de', 'de'), ('=', '='), ('1', '1'), ('+', '+'), ('j.φ', 'j.φ'), ('(', '('), ('n', 'n'), (')', ')'), ('j', 'j'), ('integer', 'integ'), ('.', '.')]

>> Lemmatization: 
 [('*', '*'), ('7', '7'), ('≡', '≡'), ('1', '1'), ('(', '('), ('mod', 'mod'), ('20', '20'), (')', ')'), (',', ','), ('3', '3'), ('*', '*'), ('7', '7'), ('≡', '≡'), ('1', '1'), ('(', '('), ('mod', 'mod'), ('20', '20'), (')', ')'), ('Public', 'Public'), ('key', 'key'), (':', ':'), ('PU', 'PU'), ('=', '='), ('{', '{'), ('e', 'e'), (',', ','), ('n', 'n'), ('}', '}'), (',', ','), ('PU', 'PU'), ('=', '='), ('{', '{'), ('7', '7'), (',', ','), ('33', '33'), ('}', '}'), ('Private', 'Private'), ('key', 'key'), (':', ':'), ('PR', 'PR'), ('=', '='), ('{', '{'), (',', ','), ('n', 'n'), ('}', '}'), (',', ','), ('PR', 'PR'), ('=', '='), ('{', '{'), ('3', '3'), (',', ','), ('33', '33'), ('}', '}'), ('This', 'This'), ('equivalent', 'equivalent'), ('finding', 'finding'), ('satisfies', 'satisfies'), ('de', 'de'), ('=', '='), ('1', '1'), ('+', '+'), ('j.φ', 'j.φ'), ('(', '('), ('n', 'n'), (')', ')'), ('j', 'j'), ('integer', 'integer'), ('.', '.')]



============================ Sentence 14 =============================

We can rewrite this as     d = (1 + j. φ(n)) / e  Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  Step-2 : Encrypt Message  Encryption Using Public key: C = Me mod n Ciphertext Input Message Publickey For message M = 14 C = 147 mod 33 C = [(141 mod 33) X (142 mod 33) X (144 mod 33)] mod 33 C = (14 X 31 X 4) mod 33 = 1736 mod 33 C = 20 PU = { e, n } , PU = { 7, 33 }  Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  Step-3 : Decrypt Message  Encryption Using Public key: M = Cd mod n Plaintext Message Cipher Message Privatekey For Ciphertext C = 20 M = 203 mod 33 M = [(201 mod 33) X (202 mod 33)] mod 33 M = (20 X 4) mod 33 = 80 mod 33 M = 14 PR = { d, n } , PR = { 3, 33 }  Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  Example RSA Algorithm 147 mod 33 = 20  Plaintext 14 Plaintext 14 203 mod 33 = 14  Ciphertext 20 PU = 7, 33 PR = 3, 33 Encryption Decryption      Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  RSA Example Find n, φ(n), e, d for p=7 and q= 19 then demonstrate encryption and decryption for M = 6 n = p * q = 7 * 19 = 133 φ(n) = ( p – 1 ) * ( q – 1) = 108 Finding e relatively prime to 108 e = 2 => GCD( 2, 108 ) = 2 (no) e = 3 => GCD( 3, 108 ) = 3 (no) e = 5 => GCD( 5, 108 ) = 1 (Yes) Finding d such that (d * e ) mod φ(n) = 1  We can rewrite this as d = (1 + j . 


>> Tokens are: 
 ['We', 'rewrite', '=', '(', '1', '+', 'j.', 'φ', '(', 'n', ')', ')', '/', 'e', 'Unit-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Step-2', ':', 'Encrypt', 'Message', 'Encryption', 'Using', 'Public', 'key', ':', 'C', '=', 'Me', 'mod', 'n', 'Ciphertext', 'Input', 'Message', 'Publickey', 'For', 'message', 'M', '=', '14', 'C', '=', '147', 'mod', '33', 'C', '=', '[', '(', '141', 'mod', '33', ')', 'X', '(', '142', 'mod', '33', ')', 'X', '(', '144', 'mod', '33', ')', ']', 'mod', '33', 'C', '=', '(', '14', 'X', '31', 'X', '4', ')', 'mod', '33', '=', '1736', 'mod', '33', 'C', '=', '20', 'PU', '=', '{', 'e', ',', 'n', '}', ',', 'PU', '=', '{', '7', ',', '33', '}', 'Unit-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Step-3', ':', 'Decrypt', 'Message', 'Encryption', 'Using', 'Public', 'key', ':', 'M', '=', 'Cd', 'mod', 'n', 'Plaintext', 'Message', 'Cipher', 'Message', 'Privatekey', 'For', 'Ciphertext', 'C', '=', '20', 'M', '=', '203', 'mod', '33', 'M', '=', '[', '(', '201', 'mod', '33', ')', 'X', '(', '202', 'mod', '33', ')', ']', 'mod', '33', 'M', '=', '(', '20', 'X', '4', ')', 'mod', '33', '=', '80', 'mod', '33', 'M', '=', '14', 'PR', '=', '{', ',', 'n', '}', ',', 'PR', '=', '{', '3', ',', '33', '}', 'Unit-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Example', 'RSA', 'Algorithm', '147', 'mod', '33', '=', '20', 'Plaintext', '14', 'Plaintext', '14', '203', 'mod', '33', '=', '14', 'Ciphertext', '20', 'PU', '=', '7', ',', '33', 'PR', '=', '3', ',', '33', 'Encryption', 'Decryption', 'Unit-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'RSA', 'Example', 'Find', 'n', ',', 'φ', '(', 'n', ')', ',', 'e', ',', 'p=7', 'q=', '19', 'demonstrate', 'encryption', 'decryption', 'M', '=', '6', 'n', '=', 'p', '*', 'q', '=', '7', '*', '19', '=', '133', 'φ', '(', 'n', ')', '=', '(', 'p', '–', '1', ')', '*', '(', 'q', '–', '1', ')', '=', '108', 'Finding', 'e', 'relatively', 'prime', '108', 'e', '=', '2', '=', '>', 'GCD', '(', '2', ',', '108', ')', '=', '2', '(', ')', 'e', '=', '3', '=', '>', 'GCD', '(', '3', ',', '108', ')', '=', '3', '(', ')', 'e', '=', '5', '=', '>', 'GCD', '(', '5', ',', '108', ')', '=', '1', '(', 'Yes', ')', 'Finding', '(', '*', 'e', ')', 'mod', 'φ', '(', 'n', ')', '=', '1', 'We', 'rewrite', '=', '(', '1', '+', 'j', '.']

>> Bigrams are: 
 [('We', 'rewrite'), ('rewrite', '='), ('=', '('), ('(', '1'), ('1', '+'), ('+', 'j.'), ('j.', 'φ'), ('φ', '('), ('(', 'n'), ('n', ')'), (')', ')'), (')', '/'), ('/', 'e'), ('e', 'Unit-4'), ('Unit-4', 'Asymmertic'), ('Asymmertic', 'Ciphers'), ('Ciphers', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Step-2'), ('Step-2', ':'), (':', 'Encrypt'), ('Encrypt', 'Message'), ('Message', 'Encryption'), ('Encryption', 'Using'), ('Using', 'Public'), ('Public', 'key'), ('key', ':'), (':', 'C'), ('C', '='), ('=', 'Me'), ('Me', 'mod'), ('mod', 'n'), ('n', 'Ciphertext'), ('Ciphertext', 'Input'), ('Input', 'Message'), ('Message', 'Publickey'), ('Publickey', 'For'), ('For', 'message'), ('message', 'M'), ('M', '='), ('=', '14'), ('14', 'C'), ('C', '='), ('=', '147'), ('147', 'mod'), ('mod', '33'), ('33', 'C'), ('C', '='), ('=', '['), ('[', '('), ('(', '141'), ('141', 'mod'), ('mod', '33'), ('33', ')'), (')', 'X'), ('X', '('), ('(', '142'), ('142', 'mod'), ('mod', '33'), ('33', ')'), (')', 'X'), ('X', '('), ('(', '144'), ('144', 'mod'), ('mod', '33'), ('33', ')'), (')', ']'), (']', 'mod'), ('mod', '33'), ('33', 'C'), ('C', '='), ('=', '('), ('(', '14'), ('14', 'X'), ('X', '31'), ('31', 'X'), ('X', '4'), ('4', ')'), (')', 'mod'), ('mod', '33'), ('33', '='), ('=', '1736'), ('1736', 'mod'), ('mod', '33'), ('33', 'C'), ('C', '='), ('=', '20'), ('20', 'PU'), ('PU', '='), ('=', '{'), ('{', 'e'), ('e', ','), (',', 'n'), ('n', '}'), ('}', ','), (',', 'PU'), ('PU', '='), ('=', '{'), ('{', '7'), ('7', ','), (',', '33'), ('33', '}'), ('}', 'Unit-4'), ('Unit-4', 'Asymmertic'), ('Asymmertic', 'Ciphers'), ('Ciphers', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Step-3'), ('Step-3', ':'), (':', 'Decrypt'), ('Decrypt', 'Message'), ('Message', 'Encryption'), ('Encryption', 'Using'), ('Using', 'Public'), ('Public', 'key'), ('key', ':'), (':', 'M'), ('M', '='), ('=', 'Cd'), ('Cd', 'mod'), ('mod', 'n'), ('n', 'Plaintext'), ('Plaintext', 'Message'), ('Message', 'Cipher'), ('Cipher', 'Message'), ('Message', 'Privatekey'), ('Privatekey', 'For'), ('For', 'Ciphertext'), ('Ciphertext', 'C'), ('C', '='), ('=', '20'), ('20', 'M'), ('M', '='), ('=', '203'), ('203', 'mod'), ('mod', '33'), ('33', 'M'), ('M', '='), ('=', '['), ('[', '('), ('(', '201'), ('201', 'mod'), ('mod', '33'), ('33', ')'), (')', 'X'), ('X', '('), ('(', '202'), ('202', 'mod'), ('mod', '33'), ('33', ')'), (')', ']'), (']', 'mod'), ('mod', '33'), ('33', 'M'), ('M', '='), ('=', '('), ('(', '20'), ('20', 'X'), ('X', '4'), ('4', ')'), (')', 'mod'), ('mod', '33'), ('33', '='), ('=', '80'), ('80', 'mod'), ('mod', '33'), ('33', 'M'), ('M', '='), ('=', '14'), ('14', 'PR'), ('PR', '='), ('=', '{'), ('{', ','), (',', 'n'), ('n', '}'), ('}', ','), (',', 'PR'), ('PR', '='), ('=', '{'), ('{', '3'), ('3', ','), (',', '33'), ('33', '}'), ('}', 'Unit-4'), ('Unit-4', 'Asymmertic'), ('Asymmertic', 'Ciphers'), ('Ciphers', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Example'), ('Example', 'RSA'), ('RSA', 'Algorithm'), ('Algorithm', '147'), ('147', 'mod'), ('mod', '33'), ('33', '='), ('=', '20'), ('20', 'Plaintext'), ('Plaintext', '14'), ('14', 'Plaintext'), ('Plaintext', '14'), ('14', '203'), ('203', 'mod'), ('mod', '33'), ('33', '='), ('=', '14'), ('14', 'Ciphertext'), ('Ciphertext', '20'), ('20', 'PU'), ('PU', '='), ('=', '7'), ('7', ','), (',', '33'), ('33', 'PR'), ('PR', '='), ('=', '3'), ('3', ','), (',', '33'), ('33', 'Encryption'), ('Encryption', 'Decryption'), ('Decryption', 'Unit-4'), ('Unit-4', 'Asymmertic'), ('Asymmertic', 'Ciphers'), ('Ciphers', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'RSA'), ('RSA', 'Example'), ('Example', 'Find'), ('Find', 'n'), ('n', ','), (',', 'φ'), ('φ', '('), ('(', 'n'), ('n', ')'), (')', ','), (',', 'e'), ('e', ','), (',', 'p=7'), ('p=7', 'q='), ('q=', '19'), ('19', 'demonstrate'), ('demonstrate', 'encryption'), ('encryption', 'decryption'), ('decryption', 'M'), ('M', '='), ('=', '6'), ('6', 'n'), ('n', '='), ('=', 'p'), ('p', '*'), ('*', 'q'), ('q', '='), ('=', '7'), ('7', '*'), ('*', '19'), ('19', '='), ('=', '133'), ('133', 'φ'), ('φ', '('), ('(', 'n'), ('n', ')'), (')', '='), ('=', '('), ('(', 'p'), ('p', '–'), ('–', '1'), ('1', ')'), (')', '*'), ('*', '('), ('(', 'q'), ('q', '–'), ('–', '1'), ('1', ')'), (')', '='), ('=', '108'), ('108', 'Finding'), ('Finding', 'e'), ('e', 'relatively'), ('relatively', 'prime'), ('prime', '108'), ('108', 'e'), ('e', '='), ('=', '2'), ('2', '='), ('=', '>'), ('>', 'GCD'), ('GCD', '('), ('(', '2'), ('2', ','), (',', '108'), ('108', ')'), (')', '='), ('=', '2'), ('2', '('), ('(', ')'), (')', 'e'), ('e', '='), ('=', '3'), ('3', '='), ('=', '>'), ('>', 'GCD'), ('GCD', '('), ('(', '3'), ('3', ','), (',', '108'), ('108', ')'), (')', '='), ('=', '3'), ('3', '('), ('(', ')'), (')', 'e'), ('e', '='), ('=', '5'), ('5', '='), ('=', '>'), ('>', 'GCD'), ('GCD', '('), ('(', '5'), ('5', ','), (',', '108'), ('108', ')'), (')', '='), ('=', '1'), ('1', '('), ('(', 'Yes'), ('Yes', ')'), (')', 'Finding'), ('Finding', '('), ('(', '*'), ('*', 'e'), ('e', ')'), (')', 'mod'), ('mod', 'φ'), ('φ', '('), ('(', 'n'), ('n', ')'), (')', '='), ('=', '1'), ('1', 'We'), ('We', 'rewrite'), ('rewrite', '='), ('=', '('), ('(', '1'), ('1', '+'), ('+', 'j'), ('j', '.')]

>> Trigrams are: 
 [('We', 'rewrite', '='), ('rewrite', '=', '('), ('=', '(', '1'), ('(', '1', '+'), ('1', '+', 'j.'), ('+', 'j.', 'φ'), ('j.', 'φ', '('), ('φ', '(', 'n'), ('(', 'n', ')'), ('n', ')', ')'), (')', ')', '/'), (')', '/', 'e'), ('/', 'e', 'Unit-4'), ('e', 'Unit-4', 'Asymmertic'), ('Unit-4', 'Asymmertic', 'Ciphers'), ('Asymmertic', 'Ciphers', 'Darshan'), ('Ciphers', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Step-2'), ('›', 'Step-2', ':'), ('Step-2', ':', 'Encrypt'), (':', 'Encrypt', 'Message'), ('Encrypt', 'Message', 'Encryption'), ('Message', 'Encryption', 'Using'), ('Encryption', 'Using', 'Public'), ('Using', 'Public', 'key'), ('Public', 'key', ':'), ('key', ':', 'C'), (':', 'C', '='), ('C', '=', 'Me'), ('=', 'Me', 'mod'), ('Me', 'mod', 'n'), ('mod', 'n', 'Ciphertext'), ('n', 'Ciphertext', 'Input'), ('Ciphertext', 'Input', 'Message'), ('Input', 'Message', 'Publickey'), ('Message', 'Publickey', 'For'), ('Publickey', 'For', 'message'), ('For', 'message', 'M'), ('message', 'M', '='), ('M', '=', '14'), ('=', '14', 'C'), ('14', 'C', '='), ('C', '=', '147'), ('=', '147', 'mod'), ('147', 'mod', '33'), ('mod', '33', 'C'), ('33', 'C', '='), ('C', '=', '['), ('=', '[', '('), ('[', '(', '141'), ('(', '141', 'mod'), ('141', 'mod', '33'), ('mod', '33', ')'), ('33', ')', 'X'), (')', 'X', '('), ('X', '(', '142'), ('(', '142', 'mod'), ('142', 'mod', '33'), ('mod', '33', ')'), ('33', ')', 'X'), (')', 'X', '('), ('X', '(', '144'), ('(', '144', 'mod'), ('144', 'mod', '33'), ('mod', '33', ')'), ('33', ')', ']'), (')', ']', 'mod'), (']', 'mod', '33'), ('mod', '33', 'C'), ('33', 'C', '='), ('C', '=', '('), ('=', '(', '14'), ('(', '14', 'X'), ('14', 'X', '31'), ('X', '31', 'X'), ('31', 'X', '4'), ('X', '4', ')'), ('4', ')', 'mod'), (')', 'mod', '33'), ('mod', '33', '='), ('33', '=', '1736'), ('=', '1736', 'mod'), ('1736', 'mod', '33'), ('mod', '33', 'C'), ('33', 'C', '='), ('C', '=', '20'), ('=', '20', 'PU'), ('20', 'PU', '='), ('PU', '=', '{'), ('=', '{', 'e'), ('{', 'e', ','), ('e', ',', 'n'), (',', 'n', '}'), ('n', '}', ','), ('}', ',', 'PU'), (',', 'PU', '='), ('PU', '=', '{'), ('=', '{', '7'), ('{', '7', ','), ('7', ',', '33'), (',', '33', '}'), ('33', '}', 'Unit-4'), ('}', 'Unit-4', 'Asymmertic'), ('Unit-4', 'Asymmertic', 'Ciphers'), ('Asymmertic', 'Ciphers', 'Darshan'), ('Ciphers', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Step-3'), ('›', 'Step-3', ':'), ('Step-3', ':', 'Decrypt'), (':', 'Decrypt', 'Message'), ('Decrypt', 'Message', 'Encryption'), ('Message', 'Encryption', 'Using'), ('Encryption', 'Using', 'Public'), ('Using', 'Public', 'key'), ('Public', 'key', ':'), ('key', ':', 'M'), (':', 'M', '='), ('M', '=', 'Cd'), ('=', 'Cd', 'mod'), ('Cd', 'mod', 'n'), ('mod', 'n', 'Plaintext'), ('n', 'Plaintext', 'Message'), ('Plaintext', 'Message', 'Cipher'), ('Message', 'Cipher', 'Message'), ('Cipher', 'Message', 'Privatekey'), ('Message', 'Privatekey', 'For'), ('Privatekey', 'For', 'Ciphertext'), ('For', 'Ciphertext', 'C'), ('Ciphertext', 'C', '='), ('C', '=', '20'), ('=', '20', 'M'), ('20', 'M', '='), ('M', '=', '203'), ('=', '203', 'mod'), ('203', 'mod', '33'), ('mod', '33', 'M'), ('33', 'M', '='), ('M', '=', '['), ('=', '[', '('), ('[', '(', '201'), ('(', '201', 'mod'), ('201', 'mod', '33'), ('mod', '33', ')'), ('33', ')', 'X'), (')', 'X', '('), ('X', '(', '202'), ('(', '202', 'mod'), ('202', 'mod', '33'), ('mod', '33', ')'), ('33', ')', ']'), (')', ']', 'mod'), (']', 'mod', '33'), ('mod', '33', 'M'), ('33', 'M', '='), ('M', '=', '('), ('=', '(', '20'), ('(', '20', 'X'), ('20', 'X', '4'), ('X', '4', ')'), ('4', ')', 'mod'), (')', 'mod', '33'), ('mod', '33', '='), ('33', '=', '80'), ('=', '80', 'mod'), ('80', 'mod', '33'), ('mod', '33', 'M'), ('33', 'M', '='), ('M', '=', '14'), ('=', '14', 'PR'), ('14', 'PR', '='), ('PR', '=', '{'), ('=', '{', ','), ('{', ',', 'n'), (',', 'n', '}'), ('n', '}', ','), ('}', ',', 'PR'), (',', 'PR', '='), ('PR', '=', '{'), ('=', '{', '3'), ('{', '3', ','), ('3', ',', '33'), (',', '33', '}'), ('33', '}', 'Unit-4'), ('}', 'Unit-4', 'Asymmertic'), ('Unit-4', 'Asymmertic', 'Ciphers'), ('Asymmertic', 'Ciphers', 'Darshan'), ('Ciphers', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Example'), ('›', 'Example', 'RSA'), ('Example', 'RSA', 'Algorithm'), ('RSA', 'Algorithm', '147'), ('Algorithm', '147', 'mod'), ('147', 'mod', '33'), ('mod', '33', '='), ('33', '=', '20'), ('=', '20', 'Plaintext'), ('20', 'Plaintext', '14'), ('Plaintext', '14', 'Plaintext'), ('14', 'Plaintext', '14'), ('Plaintext', '14', '203'), ('14', '203', 'mod'), ('203', 'mod', '33'), ('mod', '33', '='), ('33', '=', '14'), ('=', '14', 'Ciphertext'), ('14', 'Ciphertext', '20'), ('Ciphertext', '20', 'PU'), ('20', 'PU', '='), ('PU', '=', '7'), ('=', '7', ','), ('7', ',', '33'), (',', '33', 'PR'), ('33', 'PR', '='), ('PR', '=', '3'), ('=', '3', ','), ('3', ',', '33'), (',', '33', 'Encryption'), ('33', 'Encryption', 'Decryption'), ('Encryption', 'Decryption', 'Unit-4'), ('Decryption', 'Unit-4', 'Asymmertic'), ('Unit-4', 'Asymmertic', 'Ciphers'), ('Asymmertic', 'Ciphers', 'Darshan'), ('Ciphers', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'RSA'), ('›', 'RSA', 'Example'), ('RSA', 'Example', 'Find'), ('Example', 'Find', 'n'), ('Find', 'n', ','), ('n', ',', 'φ'), (',', 'φ', '('), ('φ', '(', 'n'), ('(', 'n', ')'), ('n', ')', ','), (')', ',', 'e'), (',', 'e', ','), ('e', ',', 'p=7'), (',', 'p=7', 'q='), ('p=7', 'q=', '19'), ('q=', '19', 'demonstrate'), ('19', 'demonstrate', 'encryption'), ('demonstrate', 'encryption', 'decryption'), ('encryption', 'decryption', 'M'), ('decryption', 'M', '='), ('M', '=', '6'), ('=', '6', 'n'), ('6', 'n', '='), ('n', '=', 'p'), ('=', 'p', '*'), ('p', '*', 'q'), ('*', 'q', '='), ('q', '=', '7'), ('=', '7', '*'), ('7', '*', '19'), ('*', '19', '='), ('19', '=', '133'), ('=', '133', 'φ'), ('133', 'φ', '('), ('φ', '(', 'n'), ('(', 'n', ')'), ('n', ')', '='), (')', '=', '('), ('=', '(', 'p'), ('(', 'p', '–'), ('p', '–', '1'), ('–', '1', ')'), ('1', ')', '*'), (')', '*', '('), ('*', '(', 'q'), ('(', 'q', '–'), ('q', '–', '1'), ('–', '1', ')'), ('1', ')', '='), (')', '=', '108'), ('=', '108', 'Finding'), ('108', 'Finding', 'e'), ('Finding', 'e', 'relatively'), ('e', 'relatively', 'prime'), ('relatively', 'prime', '108'), ('prime', '108', 'e'), ('108', 'e', '='), ('e', '=', '2'), ('=', '2', '='), ('2', '=', '>'), ('=', '>', 'GCD'), ('>', 'GCD', '('), ('GCD', '(', '2'), ('(', '2', ','), ('2', ',', '108'), (',', '108', ')'), ('108', ')', '='), (')', '=', '2'), ('=', '2', '('), ('2', '(', ')'), ('(', ')', 'e'), (')', 'e', '='), ('e', '=', '3'), ('=', '3', '='), ('3', '=', '>'), ('=', '>', 'GCD'), ('>', 'GCD', '('), ('GCD', '(', '3'), ('(', '3', ','), ('3', ',', '108'), (',', '108', ')'), ('108', ')', '='), (')', '=', '3'), ('=', '3', '('), ('3', '(', ')'), ('(', ')', 'e'), (')', 'e', '='), ('e', '=', '5'), ('=', '5', '='), ('5', '=', '>'), ('=', '>', 'GCD'), ('>', 'GCD', '('), ('GCD', '(', '5'), ('(', '5', ','), ('5', ',', '108'), (',', '108', ')'), ('108', ')', '='), (')', '=', '1'), ('=', '1', '('), ('1', '(', 'Yes'), ('(', 'Yes', ')'), ('Yes', ')', 'Finding'), (')', 'Finding', '('), ('Finding', '(', '*'), ('(', '*', 'e'), ('*', 'e', ')'), ('e', ')', 'mod'), (')', 'mod', 'φ'), ('mod', 'φ', '('), ('φ', '(', 'n'), ('(', 'n', ')'), ('n', ')', '='), (')', '=', '1'), ('=', '1', 'We'), ('1', 'We', 'rewrite'), ('We', 'rewrite', '='), ('rewrite', '=', '('), ('=', '(', '1'), ('(', '1', '+'), ('1', '+', 'j'), ('+', 'j', '.')]

>> POS Tags are: 
 [('We', 'PRP'), ('rewrite', 'VBP'), ('=', 'JJ'), ('(', '('), ('1', 'CD'), ('+', 'NNP'), ('j.', 'NN'), ('φ', 'NNP'), ('(', '('), ('n', 'RB'), (')', ')'), (')', ')'), ('/', '$'), ('e', 'JJ'), ('Unit-4', 'NNP'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'JJ'), ('Step-2', 'JJ'), (':', ':'), ('Encrypt', 'JJ'), ('Message', 'NNP'), ('Encryption', 'NNP'), ('Using', 'NNP'), ('Public', 'NNP'), ('key', 'NN'), (':', ':'), ('C', 'NNP'), ('=', 'IN'), ('Me', 'NNP'), ('mod', 'FW'), ('n', 'JJ'), ('Ciphertext', 'NNP'), ('Input', 'NNP'), ('Message', 'NNP'), ('Publickey', 'NNP'), ('For', 'IN'), ('message', 'NN'), ('M', 'NNP'), ('=', 'VBZ'), ('14', 'CD'), ('C', 'NNP'), ('=', 'VBD'), ('147', 'CD'), ('mod', 'NN'), ('33', 'CD'), ('C', 'NNP'), ('=', 'NNP'), ('[', 'NNP'), ('(', '('), ('141', 'CD'), ('mod', 'RB'), ('33', 'CD'), (')', ')'), ('X', 'NN'), ('(', '('), ('142', 'CD'), ('mod', 'RB'), ('33', 'CD'), (')', ')'), ('X', 'NN'), ('(', '('), ('144', 'CD'), ('mod', 'RB'), ('33', 'CD'), (')', ')'), (']', 'NN'), ('mod', '$'), ('33', 'CD'), ('C', 'NNP'), ('=', 'NNP'), ('(', '('), ('14', 'CD'), ('X', 'RB'), ('31', 'CD'), ('X', 'NNP'), ('4', 'CD'), (')', ')'), ('mod', 'NN'), ('33', 'CD'), ('=', 'NN'), ('1736', 'CD'), ('mod', 'NN'), ('33', 'CD'), ('C', 'NNP'), ('=', 'VBD'), ('20', 'CD'), ('PU', 'NNP'), ('=', 'NNP'), ('{', '('), ('e', 'NN'), (',', ','), ('n', 'JJ'), ('}', ')'), (',', ','), ('PU', 'NNP'), ('=', 'NNP'), ('{', '('), ('7', 'CD'), (',', ','), ('33', 'CD'), ('}', ')'), ('Unit-4', 'NNP'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'JJ'), ('Step-3', 'JJ'), (':', ':'), ('Decrypt', 'NNP'), ('Message', 'NNP'), ('Encryption', 'NNP'), ('Using', 'NNP'), ('Public', 'NNP'), ('key', 'NN'), (':', ':'), ('M', 'NNP'), ('=', 'NNP'), ('Cd', 'NNP'), ('mod', 'FW'), ('n', 'RB'), ('Plaintext', 'NNP'), ('Message', 'NNP'), ('Cipher', 'NNP'), ('Message', 'NNP'), ('Privatekey', 'NNP'), ('For', 'IN'), ('Ciphertext', 'NNP'), ('C', 'NNP'), ('=', 'VBD'), ('20', 'CD'), ('M', 'NNP'), ('=', 'VBD'), ('203', 'CD'), ('mod', 'NN'), ('33', 'CD'), ('M', 'NNP'), ('=', 'NNP'), ('[', 'NNP'), ('(', '('), ('201', 'CD'), ('mod', 'RB'), ('33', 'CD'), (')', ')'), ('X', 'NN'), ('(', '('), ('202', 'CD'), ('mod', 'RB'), ('33', 'CD'), (')', ')'), (']', 'NN'), ('mod', '$'), ('33', 'CD'), ('M', 'NNP'), ('=', 'NNP'), ('(', '('), ('20', 'CD'), ('X', 'NNP'), ('4', 'CD'), (')', ')'), ('mod', 'NN'), ('33', 'CD'), ('=', 'NN'), ('80', 'CD'), ('mod', 'NN'), ('33', 'CD'), ('M', 'NNP'), ('=', 'VBD'), ('14', 'CD'), ('PR', 'NNP'), ('=', 'NNP'), ('{', '('), (',', ','), ('n', 'RB'), ('}', ')'), (',', ','), ('PR', 'NNP'), ('=', 'NNP'), ('{', '('), ('3', 'CD'), (',', ','), ('33', 'CD'), ('}', ')'), ('Unit-4', 'NNP'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'JJ'), ('Example', 'NNP'), ('RSA', 'NNP'), ('Algorithm', 'NNP'), ('147', 'CD'), ('mod', 'NN'), ('33', 'CD'), ('=', 'NN'), ('20', 'CD'), ('Plaintext', 'NNP'), ('14', 'CD'), ('Plaintext', 'NNP'), ('14', 'CD'), ('203', 'CD'), ('mod', 'NN'), ('33', 'CD'), ('=', 'NN'), ('14', 'CD'), ('Ciphertext', 'NNP'), ('20', 'CD'), ('PU', 'NNP'), ('=', 'NNP'), ('7', 'CD'), (',', ','), ('33', 'CD'), ('PR', 'NNP'), ('=', 'NNP'), ('3', 'CD'), (',', ','), ('33', 'CD'), ('Encryption', 'NNP'), ('Decryption', 'NNP'), ('Unit-4', 'NNP'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('RSA', 'NNP'), ('Example', 'NNP'), ('Find', 'NNP'), ('n', 'NN'), (',', ','), ('φ', 'NNP'), ('(', '('), ('n', 'NN'), (')', ')'), (',', ','), ('e', 'RB'), (',', ','), ('p=7', 'JJ'), ('q=', 'NN'), ('19', 'CD'), ('demonstrate', 'NN'), ('encryption', 'NN'), ('decryption', 'NN'), ('M', 'NNP'), ('=', 'VBZ'), ('6', 'CD'), ('n', 'JJ'), ('=', 'NNP'), ('p', 'NN'), ('*', 'NNP'), ('q', 'NN'), ('=', 'VBD'), ('7', 'CD'), ('*', 'JJ'), ('19', 'CD'), ('=', 'JJ'), ('133', 'CD'), ('φ', 'NN'), ('(', '('), ('n', 'JJ'), (')', ')'), ('=', 'NN'), ('(', '('), ('p', 'JJ'), ('–', 'NNP'), ('1', 'CD'), (')', ')'), ('*', 'NN'), ('(', '('), ('q', 'JJ'), ('–', 'NNP'), ('1', 'CD'), (')', ')'), ('=', 'NN'), ('108', 'CD'), ('Finding', 'NNP'), ('e', 'NN'), ('relatively', 'RB'), ('prime', 'JJ'), ('108', 'CD'), ('e', 'NN'), ('=', 'VBD'), ('2', 'CD'), ('=', 'NNP'), ('>', 'NNP'), ('GCD', 'NNP'), ('(', '('), ('2', 'CD'), (',', ','), ('108', 'CD'), (')', ')'), ('=', 'NN'), ('2', 'CD'), ('(', '('), (')', ')'), ('e', 'VBP'), ('=', '$'), ('3', 'CD'), ('=', 'NNP'), ('>', 'NNP'), ('GCD', 'NNP'), ('(', '('), ('3', 'CD'), (',', ','), ('108', 'CD'), (')', ')'), ('=', 'NN'), ('3', 'CD'), ('(', '('), (')', ')'), ('e', 'VBP'), ('=', '$'), ('5', 'CD'), ('=', 'NNP'), ('>', 'NNP'), ('GCD', 'NNP'), ('(', '('), ('5', 'CD'), (',', ','), ('108', 'CD'), (')', ')'), ('=', 'NN'), ('1', 'CD'), ('(', '('), ('Yes', 'UH'), (')', ')'), ('Finding', 'NNP'), ('(', '('), ('*', 'NNP'), ('e', 'RB'), (')', ')'), ('mod', 'NN'), ('φ', 'NNP'), ('(', '('), ('n', 'NN'), (')', ')'), ('=', 'VBZ'), ('1', 'CD'), ('We', 'PRP'), ('rewrite', 'VBP'), ('=', 'JJ'), ('(', '('), ('1', 'CD'), ('+', 'NNP'), ('j', 'NN'), ('.', '.')]

 (S
  We/PRP
  rewrite/VBP
  =/JJ
  (/(
  1/CD
  (NP +/NNP j./NN φ/NNP)
  (/(
  n/RB
  )/)
  )/)
  //$
  (NP
    e/JJ
    Unit-4/NNP
    Asymmertic/NNP
    Ciphers/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  ›/JJ
  Step-2/JJ
  :/:
  (NP
    Encrypt/JJ
    Message/NNP
    Encryption/NNP
    Using/NNP
    Public/NNP
    key/NN)
  :/:
  (NP C/NNP)
  =/IN
  (NP Me/NNP)
  mod/FW
  (NP n/JJ Ciphertext/NNP Input/NNP Message/NNP Publickey/NNP)
  For/IN
  (NP message/NN M/NNP)
  =/VBZ
  14/CD
  (NP C/NNP)
  =/VBD
  147/CD
  (NP mod/NN)
  33/CD
  (NP C/NNP =/NNP [/NNP)
  (/(
  141/CD
  mod/RB
  33/CD
  )/)
  (NP X/NN)
  (/(
  142/CD
  mod/RB
  33/CD
  )/)
  (NP X/NN)
  (/(
  144/CD
  mod/RB
  33/CD
  )/)
  (NP ]/NN)
  mod/$
  33/CD
  (NP C/NNP =/NNP)
  (/(
  14/CD
  X/RB
  31/CD
  (NP X/NNP)
  4/CD
  )/)
  (NP mod/NN)
  33/CD
  (NP =/NN)
  1736/CD
  (NP mod/NN)
  33/CD
  (NP C/NNP)
  =/VBD
  20/CD
  (NP PU/NNP =/NNP)
  {/(
  (NP e/NN)
  ,/,
  n/JJ
  }/)
  ,/,
  (NP PU/NNP =/NNP)
  {/(
  7/CD
  ,/,
  33/CD
  }/)
  (NP
    Unit-4/NNP
    Asymmertic/NNP
    Ciphers/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  ›/JJ
  Step-3/JJ
  :/:
  (NP
    Decrypt/NNP
    Message/NNP
    Encryption/NNP
    Using/NNP
    Public/NNP
    key/NN)
  :/:
  (NP M/NNP =/NNP Cd/NNP)
  mod/FW
  n/RB
  (NP
    Plaintext/NNP
    Message/NNP
    Cipher/NNP
    Message/NNP
    Privatekey/NNP)
  For/IN
  (NP Ciphertext/NNP C/NNP)
  =/VBD
  20/CD
  (NP M/NNP)
  =/VBD
  203/CD
  (NP mod/NN)
  33/CD
  (NP M/NNP =/NNP [/NNP)
  (/(
  201/CD
  mod/RB
  33/CD
  )/)
  (NP X/NN)
  (/(
  202/CD
  mod/RB
  33/CD
  )/)
  (NP ]/NN)
  mod/$
  33/CD
  (NP M/NNP =/NNP)
  (/(
  20/CD
  (NP X/NNP)
  4/CD
  )/)
  (NP mod/NN)
  33/CD
  (NP =/NN)
  80/CD
  (NP mod/NN)
  33/CD
  (NP M/NNP)
  =/VBD
  14/CD
  (NP PR/NNP =/NNP)
  {/(
  ,/,
  n/RB
  }/)
  ,/,
  (NP PR/NNP =/NNP)
  {/(
  3/CD
  ,/,
  33/CD
  }/)
  (NP
    Unit-4/NNP
    Asymmertic/NNP
    Ciphers/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/JJ Example/NNP RSA/NNP Algorithm/NNP)
  147/CD
  (NP mod/NN)
  33/CD
  (NP =/NN)
  20/CD
  (NP Plaintext/NNP)
  14/CD
  (NP Plaintext/NNP)
  14/CD
  203/CD
  (NP mod/NN)
  33/CD
  (NP =/NN)
  14/CD
  (NP Ciphertext/NNP)
  20/CD
  (NP PU/NNP =/NNP)
  7/CD
  ,/,
  33/CD
  (NP PR/NNP =/NNP)
  3/CD
  ,/,
  33/CD
  (NP
    Encryption/NNP
    Decryption/NNP
    Unit-4/NNP
    Asymmertic/NNP
    Ciphers/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP RSA/NNP Example/NNP Find/NNP n/NN)
  ,/,
  (NP φ/NNP)
  (/(
  (NP n/NN)
  )/)
  ,/,
  e/RB
  ,/,
  (NP p=7/JJ q=/NN)
  19/CD
  (NP demonstrate/NN encryption/NN decryption/NN M/NNP)
  =/VBZ
  6/CD
  (NP n/JJ =/NNP p/NN */NNP q/NN)
  =/VBD
  7/CD
  */JJ
  19/CD
  =/JJ
  133/CD
  (NP φ/NN)
  (/(
  n/JJ
  )/)
  (NP =/NN)
  (/(
  (NP p/JJ –/NNP)
  1/CD
  )/)
  (NP */NN)
  (/(
  (NP q/JJ –/NNP)
  1/CD
  )/)
  (NP =/NN)
  108/CD
  (NP Finding/NNP e/NN)
  relatively/RB
  prime/JJ
  108/CD
  (NP e/NN)
  =/VBD
  2/CD
  (NP =/NNP >/NNP GCD/NNP)
  (/(
  2/CD
  ,/,
  108/CD
  )/)
  (NP =/NN)
  2/CD
  (/(
  )/)
  e/VBP
  =/$
  3/CD
  (NP =/NNP >/NNP GCD/NNP)
  (/(
  3/CD
  ,/,
  108/CD
  )/)
  (NP =/NN)
  3/CD
  (/(
  )/)
  e/VBP
  =/$
  5/CD
  (NP =/NNP >/NNP GCD/NNP)
  (/(
  5/CD
  ,/,
  108/CD
  )/)
  (NP =/NN)
  1/CD
  (/(
  Yes/UH
  )/)
  (NP Finding/NNP)
  (/(
  (NP */NNP)
  e/RB
  )/)
  (NP mod/NN φ/NNP)
  (/(
  (NP n/NN)
  )/)
  =/VBZ
  1/CD
  We/PRP
  rewrite/VBP
  =/JJ
  (/(
  1/CD
  (NP +/NNP j/NN)
  ./.) 


>> Noun Phrases are: 
 ['+ j. φ', 'e Unit-4 Asymmertic Ciphers Darshan Institute Engineering', 'Technology ‹', 'Encrypt Message Encryption Using Public key', 'C', 'Me', 'n Ciphertext Input Message Publickey', 'message M', 'C', 'mod', 'C = [', 'X', 'X', ']', 'C =', 'X', 'mod', '=', 'mod', 'C', 'PU =', 'e', 'PU =', 'Unit-4 Asymmertic Ciphers Darshan Institute Engineering', 'Technology ‹', 'Decrypt Message Encryption Using Public key', 'M = Cd', 'Plaintext Message Cipher Message Privatekey', 'Ciphertext C', 'M', 'mod', 'M = [', 'X', ']', 'M =', 'X', 'mod', '=', 'mod', 'M', 'PR =', 'PR =', 'Unit-4 Asymmertic Ciphers Darshan Institute Engineering', 'Technology ‹', '› Example RSA Algorithm', 'mod', '=', 'Plaintext', 'Plaintext', 'mod', '=', 'Ciphertext', 'PU =', 'PR =', 'Encryption Decryption Unit-4 Asymmertic Ciphers Darshan Institute Engineering', 'Technology ‹', '› RSA Example Find n', 'φ', 'n', 'p=7 q=', 'demonstrate encryption decryption M', 'n = p * q', 'φ', '=', 'p –', '*', 'q –', '=', 'Finding e', 'e', '= > GCD', '=', '= > GCD', '=', '= > GCD', '=', 'Finding', '*', 'mod φ', 'n', '+ j']

>> Named Entities are: 
 [('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Encrypt Message'), ('ORGANIZATION', 'Ciphertext Input Message Publickey For'), ('ORGANIZATION', 'PU'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Decrypt Message'), ('PERSON', 'Plaintext Message Cipher Message Privatekey'), ('ORGANIZATION', 'Ciphertext'), ('ORGANIZATION', 'PR'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('We', 'we'), ('rewrite', 'rewrit'), ('=', '='), ('(', '('), ('1', '1'), ('+', '+'), ('j.', 'j.'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), (')', ')'), ('/', '/'), ('e', 'e'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Step-2', 'step-2'), (':', ':'), ('Encrypt', 'encrypt'), ('Message', 'messag'), ('Encryption', 'encrypt'), ('Using', 'use'), ('Public', 'public'), ('key', 'key'), (':', ':'), ('C', 'c'), ('=', '='), ('Me', 'me'), ('mod', 'mod'), ('n', 'n'), ('Ciphertext', 'ciphertext'), ('Input', 'input'), ('Message', 'messag'), ('Publickey', 'publickey'), ('For', 'for'), ('message', 'messag'), ('M', 'm'), ('=', '='), ('14', '14'), ('C', 'c'), ('=', '='), ('147', '147'), ('mod', 'mod'), ('33', '33'), ('C', 'c'), ('=', '='), ('[', '['), ('(', '('), ('141', '141'), ('mod', 'mod'), ('33', '33'), (')', ')'), ('X', 'x'), ('(', '('), ('142', '142'), ('mod', 'mod'), ('33', '33'), (')', ')'), ('X', 'x'), ('(', '('), ('144', '144'), ('mod', 'mod'), ('33', '33'), (')', ')'), (']', ']'), ('mod', 'mod'), ('33', '33'), ('C', 'c'), ('=', '='), ('(', '('), ('14', '14'), ('X', 'x'), ('31', '31'), ('X', 'x'), ('4', '4'), (')', ')'), ('mod', 'mod'), ('33', '33'), ('=', '='), ('1736', '1736'), ('mod', 'mod'), ('33', '33'), ('C', 'c'), ('=', '='), ('20', '20'), ('PU', 'pu'), ('=', '='), ('{', '{'), ('e', 'e'), (',', ','), ('n', 'n'), ('}', '}'), (',', ','), ('PU', 'pu'), ('=', '='), ('{', '{'), ('7', '7'), (',', ','), ('33', '33'), ('}', '}'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Step-3', 'step-3'), (':', ':'), ('Decrypt', 'decrypt'), ('Message', 'messag'), ('Encryption', 'encrypt'), ('Using', 'use'), ('Public', 'public'), ('key', 'key'), (':', ':'), ('M', 'm'), ('=', '='), ('Cd', 'cd'), ('mod', 'mod'), ('n', 'n'), ('Plaintext', 'plaintext'), ('Message', 'messag'), ('Cipher', 'cipher'), ('Message', 'messag'), ('Privatekey', 'privatekey'), ('For', 'for'), ('Ciphertext', 'ciphertext'), ('C', 'c'), ('=', '='), ('20', '20'), ('M', 'm'), ('=', '='), ('203', '203'), ('mod', 'mod'), ('33', '33'), ('M', 'm'), ('=', '='), ('[', '['), ('(', '('), ('201', '201'), ('mod', 'mod'), ('33', '33'), (')', ')'), ('X', 'x'), ('(', '('), ('202', '202'), ('mod', 'mod'), ('33', '33'), (')', ')'), (']', ']'), ('mod', 'mod'), ('33', '33'), ('M', 'm'), ('=', '='), ('(', '('), ('20', '20'), ('X', 'x'), ('4', '4'), (')', ')'), ('mod', 'mod'), ('33', '33'), ('=', '='), ('80', '80'), ('mod', 'mod'), ('33', '33'), ('M', 'm'), ('=', '='), ('14', '14'), ('PR', 'pr'), ('=', '='), ('{', '{'), (',', ','), ('n', 'n'), ('}', '}'), (',', ','), ('PR', 'pr'), ('=', '='), ('{', '{'), ('3', '3'), (',', ','), ('33', '33'), ('}', '}'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), ('RSA', 'rsa'), ('Algorithm', 'algorithm'), ('147', '147'), ('mod', 'mod'), ('33', '33'), ('=', '='), ('20', '20'), ('Plaintext', 'plaintext'), ('14', '14'), ('Plaintext', 'plaintext'), ('14', '14'), ('203', '203'), ('mod', 'mod'), ('33', '33'), ('=', '='), ('14', '14'), ('Ciphertext', 'ciphertext'), ('20', '20'), ('PU', 'pu'), ('=', '='), ('7', '7'), (',', ','), ('33', '33'), ('PR', 'pr'), ('=', '='), ('3', '3'), (',', ','), ('33', '33'), ('Encryption', 'encrypt'), ('Decryption', 'decrypt'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('RSA', 'rsa'), ('Example', 'exampl'), ('Find', 'find'), ('n', 'n'), (',', ','), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), (',', ','), ('e', 'e'), (',', ','), ('p=7', 'p=7'), ('q=', 'q='), ('19', '19'), ('demonstrate', 'demonstr'), ('encryption', 'encrypt'), ('decryption', 'decrypt'), ('M', 'm'), ('=', '='), ('6', '6'), ('n', 'n'), ('=', '='), ('p', 'p'), ('*', '*'), ('q', 'q'), ('=', '='), ('7', '7'), ('*', '*'), ('19', '19'), ('=', '='), ('133', '133'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), ('=', '='), ('(', '('), ('p', 'p'), ('–', '–'), ('1', '1'), (')', ')'), ('*', '*'), ('(', '('), ('q', 'q'), ('–', '–'), ('1', '1'), (')', ')'), ('=', '='), ('108', '108'), ('Finding', 'find'), ('e', 'e'), ('relatively', 'rel'), ('prime', 'prime'), ('108', '108'), ('e', 'e'), ('=', '='), ('2', '2'), ('=', '='), ('>', '>'), ('GCD', 'gcd'), ('(', '('), ('2', '2'), (',', ','), ('108', '108'), (')', ')'), ('=', '='), ('2', '2'), ('(', '('), (')', ')'), ('e', 'e'), ('=', '='), ('3', '3'), ('=', '='), ('>', '>'), ('GCD', 'gcd'), ('(', '('), ('3', '3'), (',', ','), ('108', '108'), (')', ')'), ('=', '='), ('3', '3'), ('(', '('), (')', ')'), ('e', 'e'), ('=', '='), ('5', '5'), ('=', '='), ('>', '>'), ('GCD', 'gcd'), ('(', '('), ('5', '5'), (',', ','), ('108', '108'), (')', ')'), ('=', '='), ('1', '1'), ('(', '('), ('Yes', 'ye'), (')', ')'), ('Finding', 'find'), ('(', '('), ('*', '*'), ('e', 'e'), (')', ')'), ('mod', 'mod'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), ('=', '='), ('1', '1'), ('We', 'we'), ('rewrite', 'rewrit'), ('=', '='), ('(', '('), ('1', '1'), ('+', '+'), ('j', 'j'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('We', 'we'), ('rewrite', 'rewrit'), ('=', '='), ('(', '('), ('1', '1'), ('+', '+'), ('j.', 'j.'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), (')', ')'), ('/', '/'), ('e', 'e'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Step-2', 'step-2'), (':', ':'), ('Encrypt', 'encrypt'), ('Message', 'messag'), ('Encryption', 'encrypt'), ('Using', 'use'), ('Public', 'public'), ('key', 'key'), (':', ':'), ('C', 'c'), ('=', '='), ('Me', 'me'), ('mod', 'mod'), ('n', 'n'), ('Ciphertext', 'ciphertext'), ('Input', 'input'), ('Message', 'messag'), ('Publickey', 'publickey'), ('For', 'for'), ('message', 'messag'), ('M', 'm'), ('=', '='), ('14', '14'), ('C', 'c'), ('=', '='), ('147', '147'), ('mod', 'mod'), ('33', '33'), ('C', 'c'), ('=', '='), ('[', '['), ('(', '('), ('141', '141'), ('mod', 'mod'), ('33', '33'), (')', ')'), ('X', 'x'), ('(', '('), ('142', '142'), ('mod', 'mod'), ('33', '33'), (')', ')'), ('X', 'x'), ('(', '('), ('144', '144'), ('mod', 'mod'), ('33', '33'), (')', ')'), (']', ']'), ('mod', 'mod'), ('33', '33'), ('C', 'c'), ('=', '='), ('(', '('), ('14', '14'), ('X', 'x'), ('31', '31'), ('X', 'x'), ('4', '4'), (')', ')'), ('mod', 'mod'), ('33', '33'), ('=', '='), ('1736', '1736'), ('mod', 'mod'), ('33', '33'), ('C', 'c'), ('=', '='), ('20', '20'), ('PU', 'pu'), ('=', '='), ('{', '{'), ('e', 'e'), (',', ','), ('n', 'n'), ('}', '}'), (',', ','), ('PU', 'pu'), ('=', '='), ('{', '{'), ('7', '7'), (',', ','), ('33', '33'), ('}', '}'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Step-3', 'step-3'), (':', ':'), ('Decrypt', 'decrypt'), ('Message', 'messag'), ('Encryption', 'encrypt'), ('Using', 'use'), ('Public', 'public'), ('key', 'key'), (':', ':'), ('M', 'm'), ('=', '='), ('Cd', 'cd'), ('mod', 'mod'), ('n', 'n'), ('Plaintext', 'plaintext'), ('Message', 'messag'), ('Cipher', 'cipher'), ('Message', 'messag'), ('Privatekey', 'privatekey'), ('For', 'for'), ('Ciphertext', 'ciphertext'), ('C', 'c'), ('=', '='), ('20', '20'), ('M', 'm'), ('=', '='), ('203', '203'), ('mod', 'mod'), ('33', '33'), ('M', 'm'), ('=', '='), ('[', '['), ('(', '('), ('201', '201'), ('mod', 'mod'), ('33', '33'), (')', ')'), ('X', 'x'), ('(', '('), ('202', '202'), ('mod', 'mod'), ('33', '33'), (')', ')'), (']', ']'), ('mod', 'mod'), ('33', '33'), ('M', 'm'), ('=', '='), ('(', '('), ('20', '20'), ('X', 'x'), ('4', '4'), (')', ')'), ('mod', 'mod'), ('33', '33'), ('=', '='), ('80', '80'), ('mod', 'mod'), ('33', '33'), ('M', 'm'), ('=', '='), ('14', '14'), ('PR', 'pr'), ('=', '='), ('{', '{'), (',', ','), ('n', 'n'), ('}', '}'), (',', ','), ('PR', 'pr'), ('=', '='), ('{', '{'), ('3', '3'), (',', ','), ('33', '33'), ('}', '}'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'exampl'), ('RSA', 'rsa'), ('Algorithm', 'algorithm'), ('147', '147'), ('mod', 'mod'), ('33', '33'), ('=', '='), ('20', '20'), ('Plaintext', 'plaintext'), ('14', '14'), ('Plaintext', 'plaintext'), ('14', '14'), ('203', '203'), ('mod', 'mod'), ('33', '33'), ('=', '='), ('14', '14'), ('Ciphertext', 'ciphertext'), ('20', '20'), ('PU', 'pu'), ('=', '='), ('7', '7'), (',', ','), ('33', '33'), ('PR', 'pr'), ('=', '='), ('3', '3'), (',', ','), ('33', '33'), ('Encryption', 'encrypt'), ('Decryption', 'decrypt'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('RSA', 'rsa'), ('Example', 'exampl'), ('Find', 'find'), ('n', 'n'), (',', ','), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), (',', ','), ('e', 'e'), (',', ','), ('p=7', 'p=7'), ('q=', 'q='), ('19', '19'), ('demonstrate', 'demonstr'), ('encryption', 'encrypt'), ('decryption', 'decrypt'), ('M', 'm'), ('=', '='), ('6', '6'), ('n', 'n'), ('=', '='), ('p', 'p'), ('*', '*'), ('q', 'q'), ('=', '='), ('7', '7'), ('*', '*'), ('19', '19'), ('=', '='), ('133', '133'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), ('=', '='), ('(', '('), ('p', 'p'), ('–', '–'), ('1', '1'), (')', ')'), ('*', '*'), ('(', '('), ('q', 'q'), ('–', '–'), ('1', '1'), (')', ')'), ('=', '='), ('108', '108'), ('Finding', 'find'), ('e', 'e'), ('relatively', 'relat'), ('prime', 'prime'), ('108', '108'), ('e', 'e'), ('=', '='), ('2', '2'), ('=', '='), ('>', '>'), ('GCD', 'gcd'), ('(', '('), ('2', '2'), (',', ','), ('108', '108'), (')', ')'), ('=', '='), ('2', '2'), ('(', '('), (')', ')'), ('e', 'e'), ('=', '='), ('3', '3'), ('=', '='), ('>', '>'), ('GCD', 'gcd'), ('(', '('), ('3', '3'), (',', ','), ('108', '108'), (')', ')'), ('=', '='), ('3', '3'), ('(', '('), (')', ')'), ('e', 'e'), ('=', '='), ('5', '5'), ('=', '='), ('>', '>'), ('GCD', 'gcd'), ('(', '('), ('5', '5'), (',', ','), ('108', '108'), (')', ')'), ('=', '='), ('1', '1'), ('(', '('), ('Yes', 'yes'), (')', ')'), ('Finding', 'find'), ('(', '('), ('*', '*'), ('e', 'e'), (')', ')'), ('mod', 'mod'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), ('=', '='), ('1', '1'), ('We', 'we'), ('rewrite', 'rewrit'), ('=', '='), ('(', '('), ('1', '1'), ('+', '+'), ('j', 'j'), ('.', '.')]

>> Lemmatization: 
 [('We', 'We'), ('rewrite', 'rewrite'), ('=', '='), ('(', '('), ('1', '1'), ('+', '+'), ('j.', 'j.'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), (')', ')'), ('/', '/'), ('e', 'e'), ('Unit-4', 'Unit-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Step-2', 'Step-2'), (':', ':'), ('Encrypt', 'Encrypt'), ('Message', 'Message'), ('Encryption', 'Encryption'), ('Using', 'Using'), ('Public', 'Public'), ('key', 'key'), (':', ':'), ('C', 'C'), ('=', '='), ('Me', 'Me'), ('mod', 'mod'), ('n', 'n'), ('Ciphertext', 'Ciphertext'), ('Input', 'Input'), ('Message', 'Message'), ('Publickey', 'Publickey'), ('For', 'For'), ('message', 'message'), ('M', 'M'), ('=', '='), ('14', '14'), ('C', 'C'), ('=', '='), ('147', '147'), ('mod', 'mod'), ('33', '33'), ('C', 'C'), ('=', '='), ('[', '['), ('(', '('), ('141', '141'), ('mod', 'mod'), ('33', '33'), (')', ')'), ('X', 'X'), ('(', '('), ('142', '142'), ('mod', 'mod'), ('33', '33'), (')', ')'), ('X', 'X'), ('(', '('), ('144', '144'), ('mod', 'mod'), ('33', '33'), (')', ')'), (']', ']'), ('mod', 'mod'), ('33', '33'), ('C', 'C'), ('=', '='), ('(', '('), ('14', '14'), ('X', 'X'), ('31', '31'), ('X', 'X'), ('4', '4'), (')', ')'), ('mod', 'mod'), ('33', '33'), ('=', '='), ('1736', '1736'), ('mod', 'mod'), ('33', '33'), ('C', 'C'), ('=', '='), ('20', '20'), ('PU', 'PU'), ('=', '='), ('{', '{'), ('e', 'e'), (',', ','), ('n', 'n'), ('}', '}'), (',', ','), ('PU', 'PU'), ('=', '='), ('{', '{'), ('7', '7'), (',', ','), ('33', '33'), ('}', '}'), ('Unit-4', 'Unit-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Step-3', 'Step-3'), (':', ':'), ('Decrypt', 'Decrypt'), ('Message', 'Message'), ('Encryption', 'Encryption'), ('Using', 'Using'), ('Public', 'Public'), ('key', 'key'), (':', ':'), ('M', 'M'), ('=', '='), ('Cd', 'Cd'), ('mod', 'mod'), ('n', 'n'), ('Plaintext', 'Plaintext'), ('Message', 'Message'), ('Cipher', 'Cipher'), ('Message', 'Message'), ('Privatekey', 'Privatekey'), ('For', 'For'), ('Ciphertext', 'Ciphertext'), ('C', 'C'), ('=', '='), ('20', '20'), ('M', 'M'), ('=', '='), ('203', '203'), ('mod', 'mod'), ('33', '33'), ('M', 'M'), ('=', '='), ('[', '['), ('(', '('), ('201', '201'), ('mod', 'mod'), ('33', '33'), (')', ')'), ('X', 'X'), ('(', '('), ('202', '202'), ('mod', 'mod'), ('33', '33'), (')', ')'), (']', ']'), ('mod', 'mod'), ('33', '33'), ('M', 'M'), ('=', '='), ('(', '('), ('20', '20'), ('X', 'X'), ('4', '4'), (')', ')'), ('mod', 'mod'), ('33', '33'), ('=', '='), ('80', '80'), ('mod', 'mod'), ('33', '33'), ('M', 'M'), ('=', '='), ('14', '14'), ('PR', 'PR'), ('=', '='), ('{', '{'), (',', ','), ('n', 'n'), ('}', '}'), (',', ','), ('PR', 'PR'), ('=', '='), ('{', '{'), ('3', '3'), (',', ','), ('33', '33'), ('}', '}'), ('Unit-4', 'Unit-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Example', 'Example'), ('RSA', 'RSA'), ('Algorithm', 'Algorithm'), ('147', '147'), ('mod', 'mod'), ('33', '33'), ('=', '='), ('20', '20'), ('Plaintext', 'Plaintext'), ('14', '14'), ('Plaintext', 'Plaintext'), ('14', '14'), ('203', '203'), ('mod', 'mod'), ('33', '33'), ('=', '='), ('14', '14'), ('Ciphertext', 'Ciphertext'), ('20', '20'), ('PU', 'PU'), ('=', '='), ('7', '7'), (',', ','), ('33', '33'), ('PR', 'PR'), ('=', '='), ('3', '3'), (',', ','), ('33', '33'), ('Encryption', 'Encryption'), ('Decryption', 'Decryption'), ('Unit-4', 'Unit-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('RSA', 'RSA'), ('Example', 'Example'), ('Find', 'Find'), ('n', 'n'), (',', ','), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), (',', ','), ('e', 'e'), (',', ','), ('p=7', 'p=7'), ('q=', 'q='), ('19', '19'), ('demonstrate', 'demonstrate'), ('encryption', 'encryption'), ('decryption', 'decryption'), ('M', 'M'), ('=', '='), ('6', '6'), ('n', 'n'), ('=', '='), ('p', 'p'), ('*', '*'), ('q', 'q'), ('=', '='), ('7', '7'), ('*', '*'), ('19', '19'), ('=', '='), ('133', '133'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), ('=', '='), ('(', '('), ('p', 'p'), ('–', '–'), ('1', '1'), (')', ')'), ('*', '*'), ('(', '('), ('q', 'q'), ('–', '–'), ('1', '1'), (')', ')'), ('=', '='), ('108', '108'), ('Finding', 'Finding'), ('e', 'e'), ('relatively', 'relatively'), ('prime', 'prime'), ('108', '108'), ('e', 'e'), ('=', '='), ('2', '2'), ('=', '='), ('>', '>'), ('GCD', 'GCD'), ('(', '('), ('2', '2'), (',', ','), ('108', '108'), (')', ')'), ('=', '='), ('2', '2'), ('(', '('), (')', ')'), ('e', 'e'), ('=', '='), ('3', '3'), ('=', '='), ('>', '>'), ('GCD', 'GCD'), ('(', '('), ('3', '3'), (',', ','), ('108', '108'), (')', ')'), ('=', '='), ('3', '3'), ('(', '('), (')', ')'), ('e', 'e'), ('=', '='), ('5', '5'), ('=', '='), ('>', '>'), ('GCD', 'GCD'), ('(', '('), ('5', '5'), (',', ','), ('108', '108'), (')', ')'), ('=', '='), ('1', '1'), ('(', '('), ('Yes', 'Yes'), (')', ')'), ('Finding', 'Finding'), ('(', '('), ('*', '*'), ('e', 'e'), (')', ')'), ('mod', 'mod'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), ('=', '='), ('1', '1'), ('We', 'We'), ('rewrite', 'rewrite'), ('=', '='), ('(', '('), ('1', '1'), ('+', '+'), ('j', 'j'), ('.', '.')]



============================ Sentence 15 =============================

φ(n)) / e j = 0  => d = 1 / 5 = 0.2  integer ? 


>> Tokens are: 
 ['φ', '(', 'n', ')', ')', '/', 'e', 'j', '=', '0', '=', '>', '=', '1', '/', '5', '=', '0.2', '\uf0df', 'integer', '?']

>> Bigrams are: 
 [('φ', '('), ('(', 'n'), ('n', ')'), (')', ')'), (')', '/'), ('/', 'e'), ('e', 'j'), ('j', '='), ('=', '0'), ('0', '='), ('=', '>'), ('>', '='), ('=', '1'), ('1', '/'), ('/', '5'), ('5', '='), ('=', '0.2'), ('0.2', '\uf0df'), ('\uf0df', 'integer'), ('integer', '?')]

>> Trigrams are: 
 [('φ', '(', 'n'), ('(', 'n', ')'), ('n', ')', ')'), (')', ')', '/'), (')', '/', 'e'), ('/', 'e', 'j'), ('e', 'j', '='), ('j', '=', '0'), ('=', '0', '='), ('0', '=', '>'), ('=', '>', '='), ('>', '=', '1'), ('=', '1', '/'), ('1', '/', '5'), ('/', '5', '='), ('5', '=', '0.2'), ('=', '0.2', '\uf0df'), ('0.2', '\uf0df', 'integer'), ('\uf0df', 'integer', '?')]

>> POS Tags are: 
 [('φ', 'NN'), ('(', '('), ('n', 'JJ'), (')', ')'), (')', ')'), ('/', 'VBP'), ('e', 'JJ'), ('j', 'NN'), ('=', 'VBD'), ('0', 'CD'), ('=', 'NNP'), ('>', 'NNP'), ('=', 'VBD'), ('1', 'CD'), ('/', 'JJ'), ('5', 'CD'), ('=', 'JJ'), ('0.2', 'CD'), ('\uf0df', 'NN'), ('integer', 'NN'), ('?', '.')]

 (S
  (NP φ/NN)
  (/(
  n/JJ
  )/)
  )/)
  //VBP
  (NP e/JJ j/NN)
  =/VBD
  0/CD
  (NP =/NNP >/NNP)
  =/VBD
  1/CD
  //JJ
  5/CD
  =/JJ
  0.2/CD
  (NP /NN integer/NN)
  ?/.) 


>> Noun Phrases are: 
 ['φ', 'e j', '= >', '\uf0df integer']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), (')', ')'), ('/', '/'), ('e', 'e'), ('j', 'j'), ('=', '='), ('0', '0'), ('=', '='), ('>', '>'), ('=', '='), ('1', '1'), ('/', '/'), ('5', '5'), ('=', '='), ('0.2', '0.2'), ('\uf0df', '\uf0df'), ('integer', 'integ'), ('?', '?')]

>> Stemming using Snowball Stemmer: 
 [('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), (')', ')'), ('/', '/'), ('e', 'e'), ('j', 'j'), ('=', '='), ('0', '0'), ('=', '='), ('>', '>'), ('=', '='), ('1', '1'), ('/', '/'), ('5', '5'), ('=', '='), ('0.2', '0.2'), ('\uf0df', '\uf0df'), ('integer', 'integ'), ('?', '?')]

>> Lemmatization: 
 [('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), (')', ')'), ('/', '/'), ('e', 'e'), ('j', 'j'), ('=', '='), ('0', '0'), ('=', '='), ('>', '>'), ('=', '='), ('1', '1'), ('/', '/'), ('5', '5'), ('=', '='), ('0.2', '0.2'), ('\uf0df', '\uf0df'), ('integer', 'integer'), ('?', '?')]



============================ Sentence 16 =============================

(no) j = 1  => d = 109 / 5 = 21.8  integer ? 


>> Tokens are: 
 ['(', ')', 'j', '=', '1', '=', '>', '=', '109', '/', '5', '=', '21.8', '\uf0df', 'integer', '?']

>> Bigrams are: 
 [('(', ')'), (')', 'j'), ('j', '='), ('=', '1'), ('1', '='), ('=', '>'), ('>', '='), ('=', '109'), ('109', '/'), ('/', '5'), ('5', '='), ('=', '21.8'), ('21.8', '\uf0df'), ('\uf0df', 'integer'), ('integer', '?')]

>> Trigrams are: 
 [('(', ')', 'j'), (')', 'j', '='), ('j', '=', '1'), ('=', '1', '='), ('1', '=', '>'), ('=', '>', '='), ('>', '=', '109'), ('=', '109', '/'), ('109', '/', '5'), ('/', '5', '='), ('5', '=', '21.8'), ('=', '21.8', '\uf0df'), ('21.8', '\uf0df', 'integer'), ('\uf0df', 'integer', '?')]

>> POS Tags are: 
 [('(', '('), (')', ')'), ('j', 'NN'), ('=', '$'), ('1', 'CD'), ('=', 'NNP'), ('>', 'NNP'), ('=', 'VBD'), ('109', 'CD'), ('/', 'JJ'), ('5', 'CD'), ('=', 'JJ'), ('21.8', 'CD'), ('\uf0df', 'NN'), ('integer', 'NN'), ('?', '.')]

 (S
  (/(
  )/)
  (NP j/NN)
  =/$
  1/CD
  (NP =/NNP >/NNP)
  =/VBD
  109/CD
  //JJ
  5/CD
  =/JJ
  21.8/CD
  (NP /NN integer/NN)
  ?/.) 


>> Noun Phrases are: 
 ['j', '= >', '\uf0df integer']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('(', '('), (')', ')'), ('j', 'j'), ('=', '='), ('1', '1'), ('=', '='), ('>', '>'), ('=', '='), ('109', '109'), ('/', '/'), ('5', '5'), ('=', '='), ('21.8', '21.8'), ('\uf0df', '\uf0df'), ('integer', 'integ'), ('?', '?')]

>> Stemming using Snowball Stemmer: 
 [('(', '('), (')', ')'), ('j', 'j'), ('=', '='), ('1', '1'), ('=', '='), ('>', '>'), ('=', '='), ('109', '109'), ('/', '/'), ('5', '5'), ('=', '='), ('21.8', '21.8'), ('\uf0df', '\uf0df'), ('integer', 'integ'), ('?', '?')]

>> Lemmatization: 
 [('(', '('), (')', ')'), ('j', 'j'), ('=', '='), ('1', '1'), ('=', '='), ('>', '>'), ('=', '='), ('109', '109'), ('/', '/'), ('5', '5'), ('=', '='), ('21.8', '21.8'), ('\uf0df', '\uf0df'), ('integer', 'integer'), ('?', '?')]



============================ Sentence 17 =============================

(no) j = 2  => d = 217 / 5 = 43.4  integer ? 


>> Tokens are: 
 ['(', ')', 'j', '=', '2', '=', '>', '=', '217', '/', '5', '=', '43.4', '\uf0df', 'integer', '?']

>> Bigrams are: 
 [('(', ')'), (')', 'j'), ('j', '='), ('=', '2'), ('2', '='), ('=', '>'), ('>', '='), ('=', '217'), ('217', '/'), ('/', '5'), ('5', '='), ('=', '43.4'), ('43.4', '\uf0df'), ('\uf0df', 'integer'), ('integer', '?')]

>> Trigrams are: 
 [('(', ')', 'j'), (')', 'j', '='), ('j', '=', '2'), ('=', '2', '='), ('2', '=', '>'), ('=', '>', '='), ('>', '=', '217'), ('=', '217', '/'), ('217', '/', '5'), ('/', '5', '='), ('5', '=', '43.4'), ('=', '43.4', '\uf0df'), ('43.4', '\uf0df', 'integer'), ('\uf0df', 'integer', '?')]

>> POS Tags are: 
 [('(', '('), (')', ')'), ('j', 'NN'), ('=', '$'), ('2', 'CD'), ('=', 'NNP'), ('>', 'NNP'), ('=', 'VBD'), ('217', 'CD'), ('/', 'JJ'), ('5', 'CD'), ('=', 'JJ'), ('43.4', 'CD'), ('\uf0df', 'NN'), ('integer', 'NN'), ('?', '.')]

 (S
  (/(
  )/)
  (NP j/NN)
  =/$
  2/CD
  (NP =/NNP >/NNP)
  =/VBD
  217/CD
  //JJ
  5/CD
  =/JJ
  43.4/CD
  (NP /NN integer/NN)
  ?/.) 


>> Noun Phrases are: 
 ['j', '= >', '\uf0df integer']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('(', '('), (')', ')'), ('j', 'j'), ('=', '='), ('2', '2'), ('=', '='), ('>', '>'), ('=', '='), ('217', '217'), ('/', '/'), ('5', '5'), ('=', '='), ('43.4', '43.4'), ('\uf0df', '\uf0df'), ('integer', 'integ'), ('?', '?')]

>> Stemming using Snowball Stemmer: 
 [('(', '('), (')', ')'), ('j', 'j'), ('=', '='), ('2', '2'), ('=', '='), ('>', '>'), ('=', '='), ('217', '217'), ('/', '/'), ('5', '5'), ('=', '='), ('43.4', '43.4'), ('\uf0df', '\uf0df'), ('integer', 'integ'), ('?', '?')]

>> Lemmatization: 
 [('(', '('), (')', ')'), ('j', 'j'), ('=', '='), ('2', '2'), ('=', '='), ('>', '>'), ('=', '='), ('217', '217'), ('/', '/'), ('5', '5'), ('=', '='), ('43.4', '43.4'), ('\uf0df', '\uf0df'), ('integer', 'integer'), ('?', '?')]



============================ Sentence 18 =============================

(no) j = 3  => d = 325 / 5 = 65 integer ? 


>> Tokens are: 
 ['(', ')', 'j', '=', '3', '=', '>', '=', '325', '/', '5', '=', '65', 'integer', '?']

>> Bigrams are: 
 [('(', ')'), (')', 'j'), ('j', '='), ('=', '3'), ('3', '='), ('=', '>'), ('>', '='), ('=', '325'), ('325', '/'), ('/', '5'), ('5', '='), ('=', '65'), ('65', 'integer'), ('integer', '?')]

>> Trigrams are: 
 [('(', ')', 'j'), (')', 'j', '='), ('j', '=', '3'), ('=', '3', '='), ('3', '=', '>'), ('=', '>', '='), ('>', '=', '325'), ('=', '325', '/'), ('325', '/', '5'), ('/', '5', '='), ('5', '=', '65'), ('=', '65', 'integer'), ('65', 'integer', '?')]

>> POS Tags are: 
 [('(', '('), (')', ')'), ('j', 'NN'), ('=', '$'), ('3', 'CD'), ('=', 'NNP'), ('>', 'NNP'), ('=', 'VBD'), ('325', 'CD'), ('/', 'JJ'), ('5', 'CD'), ('=', 'JJ'), ('65', 'CD'), ('integer', 'NN'), ('?', '.')]

 (S
  (/(
  )/)
  (NP j/NN)
  =/$
  3/CD
  (NP =/NNP >/NNP)
  =/VBD
  325/CD
  //JJ
  5/CD
  =/JJ
  65/CD
  (NP integer/NN)
  ?/.) 


>> Noun Phrases are: 
 ['j', '= >', 'integer']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('(', '('), (')', ')'), ('j', 'j'), ('=', '='), ('3', '3'), ('=', '='), ('>', '>'), ('=', '='), ('325', '325'), ('/', '/'), ('5', '5'), ('=', '='), ('65', '65'), ('integer', 'integ'), ('?', '?')]

>> Stemming using Snowball Stemmer: 
 [('(', '('), (')', ')'), ('j', 'j'), ('=', '='), ('3', '3'), ('=', '='), ('>', '>'), ('=', '='), ('325', '325'), ('/', '/'), ('5', '5'), ('=', '='), ('65', '65'), ('integer', 'integ'), ('?', '?')]

>> Lemmatization: 
 [('(', '('), (')', ')'), ('j', 'j'), ('=', '='), ('3', '3'), ('=', '='), ('>', '>'), ('=', '='), ('325', '325'), ('/', '/'), ('5', '5'), ('=', '='), ('65', '65'), ('integer', 'integer'), ('?', '?')]



============================ Sentence 19 =============================

(yes) Public key :  PU = { e, n } = {5, 133} Private key :  PR = { d, n } = {65, 133}  Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  RSA Example – cont… Encryption: C = Me mod n For message M = 6 C = 65 mod 133 C = 7776 mod 33 C = 62 PU = { e, n } , PU = { 5, 133 } Decryption: M = Cd mod n For C = 62 M = 6265 mod 133 M = 2666 mod 33 M = 6 PR = { d, n } , PU = { 65, 133 }  Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  RSA Example P and Q are two prime numbers. 


>> Tokens are: 
 ['(', 'yes', ')', 'Public', 'key', ':', 'PU', '=', '{', 'e', ',', 'n', '}', '=', '{', '5', ',', '133', '}', 'Private', 'key', ':', 'PR', '=', '{', ',', 'n', '}', '=', '{', '65', ',', '133', '}', 'Unit-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'RSA', 'Example', '–', 'cont…', 'Encryption', ':', 'C', '=', 'Me', 'mod', 'n', 'For', 'message', 'M', '=', '6', 'C', '=', '65', 'mod', '133', 'C', '=', '7776', 'mod', '33', 'C', '=', '62', 'PU', '=', '{', 'e', ',', 'n', '}', ',', 'PU', '=', '{', '5', ',', '133', '}', 'Decryption', ':', 'M', '=', 'Cd', 'mod', 'n', 'For', 'C', '=', '62', 'M', '=', '6265', 'mod', '133', 'M', '=', '2666', 'mod', '33', 'M', '=', '6', 'PR', '=', '{', ',', 'n', '}', ',', 'PU', '=', '{', '65', ',', '133', '}', 'Unit-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'RSA', 'Example', 'P', 'Q', 'two', 'prime', 'numbers', '.']

>> Bigrams are: 
 [('(', 'yes'), ('yes', ')'), (')', 'Public'), ('Public', 'key'), ('key', ':'), (':', 'PU'), ('PU', '='), ('=', '{'), ('{', 'e'), ('e', ','), (',', 'n'), ('n', '}'), ('}', '='), ('=', '{'), ('{', '5'), ('5', ','), (',', '133'), ('133', '}'), ('}', 'Private'), ('Private', 'key'), ('key', ':'), (':', 'PR'), ('PR', '='), ('=', '{'), ('{', ','), (',', 'n'), ('n', '}'), ('}', '='), ('=', '{'), ('{', '65'), ('65', ','), (',', '133'), ('133', '}'), ('}', 'Unit-4'), ('Unit-4', 'Asymmertic'), ('Asymmertic', 'Ciphers'), ('Ciphers', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'RSA'), ('RSA', 'Example'), ('Example', '–'), ('–', 'cont…'), ('cont…', 'Encryption'), ('Encryption', ':'), (':', 'C'), ('C', '='), ('=', 'Me'), ('Me', 'mod'), ('mod', 'n'), ('n', 'For'), ('For', 'message'), ('message', 'M'), ('M', '='), ('=', '6'), ('6', 'C'), ('C', '='), ('=', '65'), ('65', 'mod'), ('mod', '133'), ('133', 'C'), ('C', '='), ('=', '7776'), ('7776', 'mod'), ('mod', '33'), ('33', 'C'), ('C', '='), ('=', '62'), ('62', 'PU'), ('PU', '='), ('=', '{'), ('{', 'e'), ('e', ','), (',', 'n'), ('n', '}'), ('}', ','), (',', 'PU'), ('PU', '='), ('=', '{'), ('{', '5'), ('5', ','), (',', '133'), ('133', '}'), ('}', 'Decryption'), ('Decryption', ':'), (':', 'M'), ('M', '='), ('=', 'Cd'), ('Cd', 'mod'), ('mod', 'n'), ('n', 'For'), ('For', 'C'), ('C', '='), ('=', '62'), ('62', 'M'), ('M', '='), ('=', '6265'), ('6265', 'mod'), ('mod', '133'), ('133', 'M'), ('M', '='), ('=', '2666'), ('2666', 'mod'), ('mod', '33'), ('33', 'M'), ('M', '='), ('=', '6'), ('6', 'PR'), ('PR', '='), ('=', '{'), ('{', ','), (',', 'n'), ('n', '}'), ('}', ','), (',', 'PU'), ('PU', '='), ('=', '{'), ('{', '65'), ('65', ','), (',', '133'), ('133', '}'), ('}', 'Unit-4'), ('Unit-4', 'Asymmertic'), ('Asymmertic', 'Ciphers'), ('Ciphers', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'RSA'), ('RSA', 'Example'), ('Example', 'P'), ('P', 'Q'), ('Q', 'two'), ('two', 'prime'), ('prime', 'numbers'), ('numbers', '.')]

>> Trigrams are: 
 [('(', 'yes', ')'), ('yes', ')', 'Public'), (')', 'Public', 'key'), ('Public', 'key', ':'), ('key', ':', 'PU'), (':', 'PU', '='), ('PU', '=', '{'), ('=', '{', 'e'), ('{', 'e', ','), ('e', ',', 'n'), (',', 'n', '}'), ('n', '}', '='), ('}', '=', '{'), ('=', '{', '5'), ('{', '5', ','), ('5', ',', '133'), (',', '133', '}'), ('133', '}', 'Private'), ('}', 'Private', 'key'), ('Private', 'key', ':'), ('key', ':', 'PR'), (':', 'PR', '='), ('PR', '=', '{'), ('=', '{', ','), ('{', ',', 'n'), (',', 'n', '}'), ('n', '}', '='), ('}', '=', '{'), ('=', '{', '65'), ('{', '65', ','), ('65', ',', '133'), (',', '133', '}'), ('133', '}', 'Unit-4'), ('}', 'Unit-4', 'Asymmertic'), ('Unit-4', 'Asymmertic', 'Ciphers'), ('Asymmertic', 'Ciphers', 'Darshan'), ('Ciphers', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'RSA'), ('›', 'RSA', 'Example'), ('RSA', 'Example', '–'), ('Example', '–', 'cont…'), ('–', 'cont…', 'Encryption'), ('cont…', 'Encryption', ':'), ('Encryption', ':', 'C'), (':', 'C', '='), ('C', '=', 'Me'), ('=', 'Me', 'mod'), ('Me', 'mod', 'n'), ('mod', 'n', 'For'), ('n', 'For', 'message'), ('For', 'message', 'M'), ('message', 'M', '='), ('M', '=', '6'), ('=', '6', 'C'), ('6', 'C', '='), ('C', '=', '65'), ('=', '65', 'mod'), ('65', 'mod', '133'), ('mod', '133', 'C'), ('133', 'C', '='), ('C', '=', '7776'), ('=', '7776', 'mod'), ('7776', 'mod', '33'), ('mod', '33', 'C'), ('33', 'C', '='), ('C', '=', '62'), ('=', '62', 'PU'), ('62', 'PU', '='), ('PU', '=', '{'), ('=', '{', 'e'), ('{', 'e', ','), ('e', ',', 'n'), (',', 'n', '}'), ('n', '}', ','), ('}', ',', 'PU'), (',', 'PU', '='), ('PU', '=', '{'), ('=', '{', '5'), ('{', '5', ','), ('5', ',', '133'), (',', '133', '}'), ('133', '}', 'Decryption'), ('}', 'Decryption', ':'), ('Decryption', ':', 'M'), (':', 'M', '='), ('M', '=', 'Cd'), ('=', 'Cd', 'mod'), ('Cd', 'mod', 'n'), ('mod', 'n', 'For'), ('n', 'For', 'C'), ('For', 'C', '='), ('C', '=', '62'), ('=', '62', 'M'), ('62', 'M', '='), ('M', '=', '6265'), ('=', '6265', 'mod'), ('6265', 'mod', '133'), ('mod', '133', 'M'), ('133', 'M', '='), ('M', '=', '2666'), ('=', '2666', 'mod'), ('2666', 'mod', '33'), ('mod', '33', 'M'), ('33', 'M', '='), ('M', '=', '6'), ('=', '6', 'PR'), ('6', 'PR', '='), ('PR', '=', '{'), ('=', '{', ','), ('{', ',', 'n'), (',', 'n', '}'), ('n', '}', ','), ('}', ',', 'PU'), (',', 'PU', '='), ('PU', '=', '{'), ('=', '{', '65'), ('{', '65', ','), ('65', ',', '133'), (',', '133', '}'), ('133', '}', 'Unit-4'), ('}', 'Unit-4', 'Asymmertic'), ('Unit-4', 'Asymmertic', 'Ciphers'), ('Asymmertic', 'Ciphers', 'Darshan'), ('Ciphers', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'RSA'), ('›', 'RSA', 'Example'), ('RSA', 'Example', 'P'), ('Example', 'P', 'Q'), ('P', 'Q', 'two'), ('Q', 'two', 'prime'), ('two', 'prime', 'numbers'), ('prime', 'numbers', '.')]

>> POS Tags are: 
 [('(', '('), ('yes', 'UH'), (')', ')'), ('Public', 'NNP'), ('key', 'NN'), (':', ':'), ('PU', 'NNP'), ('=', 'NNP'), ('{', '('), ('e', 'NN'), (',', ','), ('n', 'JJ'), ('}', ')'), ('=', 'NNP'), ('{', '('), ('5', 'CD'), (',', ','), ('133', 'CD'), ('}', ')'), ('Private', 'NNP'), ('key', 'NN'), (':', ':'), ('PR', 'NNP'), ('=', 'NNP'), ('{', '('), (',', ','), ('n', 'RB'), ('}', ')'), ('=', 'NNP'), ('{', '('), ('65', 'CD'), (',', ','), ('133', 'CD'), ('}', ')'), ('Unit-4', 'NNP'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('RSA', 'NNP'), ('Example', 'NNP'), ('–', 'NNP'), ('cont…', 'VBZ'), ('Encryption', 'NN'), (':', ':'), ('C', 'NNP'), ('=', 'IN'), ('Me', 'NNP'), ('mod', 'FW'), ('n', 'NN'), ('For', 'IN'), ('message', 'NN'), ('M', 'NNP'), ('=', 'VBZ'), ('6', 'CD'), ('C', 'NNP'), ('=', 'VBD'), ('65', 'CD'), ('mod', 'NN'), ('133', 'CD'), ('C', 'NNP'), ('=', 'NN'), ('7776', 'CD'), ('mod', 'NN'), ('33', 'CD'), ('C', 'NNP'), ('=', 'VBD'), ('62', 'CD'), ('PU', 'NNP'), ('=', 'NNP'), ('{', '('), ('e', 'NN'), (',', ','), ('n', 'JJ'), ('}', ')'), (',', ','), ('PU', 'NNP'), ('=', 'NNP'), ('{', '('), ('5', 'CD'), (',', ','), ('133', 'CD'), ('}', ')'), ('Decryption', 'NN'), (':', ':'), ('M', 'NNP'), ('=', 'NNP'), ('Cd', 'NNP'), ('mod', 'MD'), ('n', 'VB'), ('For', 'IN'), ('C', 'NNP'), ('=', 'NNP'), ('62', 'CD'), ('M', 'NNP'), ('=', 'NN'), ('6265', 'CD'), ('mod', 'NN'), ('133', 'CD'), ('M', 'NNP'), ('=', 'NN'), ('2666', 'CD'), ('mod', 'NN'), ('33', 'CD'), ('M', 'NNP'), ('=', 'VBD'), ('6', 'CD'), ('PR', 'NNP'), ('=', 'NNP'), ('{', '('), (',', ','), ('n', 'RB'), ('}', ')'), (',', ','), ('PU', 'NNP'), ('=', 'NNP'), ('{', '('), ('65', 'CD'), (',', ','), ('133', 'CD'), ('}', ')'), ('Unit-4', 'NNP'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('RSA', 'NNP'), ('Example', 'NNP'), ('P', 'NNP'), ('Q', 'NNP'), ('two', 'CD'), ('prime', 'JJ'), ('numbers', 'NNS'), ('.', '.')]

 (S
  (/(
  yes/UH
  )/)
  (NP Public/NNP key/NN)
  :/:
  (NP PU/NNP =/NNP)
  {/(
  (NP e/NN)
  ,/,
  n/JJ
  }/)
  (NP =/NNP)
  {/(
  5/CD
  ,/,
  133/CD
  }/)
  (NP Private/NNP key/NN)
  :/:
  (NP PR/NNP =/NNP)
  {/(
  ,/,
  n/RB
  }/)
  (NP =/NNP)
  {/(
  65/CD
  ,/,
  133/CD
  }/)
  (NP
    Unit-4/NNP
    Asymmertic/NNP
    Ciphers/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP RSA/NNP Example/NNP –/NNP)
  cont…/VBZ
  (NP Encryption/NN)
  :/:
  (NP C/NNP)
  =/IN
  (NP Me/NNP)
  mod/FW
  (NP n/NN)
  For/IN
  (NP message/NN M/NNP)
  =/VBZ
  6/CD
  (NP C/NNP)
  =/VBD
  65/CD
  (NP mod/NN)
  133/CD
  (NP C/NNP =/NN)
  7776/CD
  (NP mod/NN)
  33/CD
  (NP C/NNP)
  =/VBD
  62/CD
  (NP PU/NNP =/NNP)
  {/(
  (NP e/NN)
  ,/,
  n/JJ
  }/)
  ,/,
  (NP PU/NNP =/NNP)
  {/(
  5/CD
  ,/,
  133/CD
  }/)
  (NP Decryption/NN)
  :/:
  (NP M/NNP =/NNP Cd/NNP)
  mod/MD
  n/VB
  For/IN
  (NP C/NNP =/NNP)
  62/CD
  (NP M/NNP =/NN)
  6265/CD
  (NP mod/NN)
  133/CD
  (NP M/NNP =/NN)
  2666/CD
  (NP mod/NN)
  33/CD
  (NP M/NNP)
  =/VBD
  6/CD
  (NP PR/NNP =/NNP)
  {/(
  ,/,
  n/RB
  }/)
  ,/,
  (NP PU/NNP =/NNP)
  {/(
  65/CD
  ,/,
  133/CD
  }/)
  (NP
    Unit-4/NNP
    Asymmertic/NNP
    Ciphers/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP RSA/NNP Example/NNP P/NNP Q/NNP)
  two/CD
  (NP prime/JJ numbers/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Public key', 'PU =', 'e', '=', 'Private key', 'PR =', '=', 'Unit-4 Asymmertic Ciphers Darshan Institute Engineering', 'Technology ‹', '› RSA Example –', 'Encryption', 'C', 'Me', 'n', 'message M', 'C', 'mod', 'C =', 'mod', 'C', 'PU =', 'e', 'PU =', 'Decryption', 'M = Cd', 'C =', 'M =', 'mod', 'M =', 'mod', 'M', 'PR =', 'PU =', 'Unit-4 Asymmertic Ciphers Darshan Institute Engineering', 'Technology ‹', '› RSA Example P Q', 'prime numbers']

>> Named Entities are: 
 [('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'PU'), ('ORGANIZATION', 'PU'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('(', '('), ('yes', 'ye'), (')', ')'), ('Public', 'public'), ('key', 'key'), (':', ':'), ('PU', 'pu'), ('=', '='), ('{', '{'), ('e', 'e'), (',', ','), ('n', 'n'), ('}', '}'), ('=', '='), ('{', '{'), ('5', '5'), (',', ','), ('133', '133'), ('}', '}'), ('Private', 'privat'), ('key', 'key'), (':', ':'), ('PR', 'pr'), ('=', '='), ('{', '{'), (',', ','), ('n', 'n'), ('}', '}'), ('=', '='), ('{', '{'), ('65', '65'), (',', ','), ('133', '133'), ('}', '}'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('RSA', 'rsa'), ('Example', 'exampl'), ('–', '–'), ('cont…', 'cont…'), ('Encryption', 'encrypt'), (':', ':'), ('C', 'c'), ('=', '='), ('Me', 'me'), ('mod', 'mod'), ('n', 'n'), ('For', 'for'), ('message', 'messag'), ('M', 'm'), ('=', '='), ('6', '6'), ('C', 'c'), ('=', '='), ('65', '65'), ('mod', 'mod'), ('133', '133'), ('C', 'c'), ('=', '='), ('7776', '7776'), ('mod', 'mod'), ('33', '33'), ('C', 'c'), ('=', '='), ('62', '62'), ('PU', 'pu'), ('=', '='), ('{', '{'), ('e', 'e'), (',', ','), ('n', 'n'), ('}', '}'), (',', ','), ('PU', 'pu'), ('=', '='), ('{', '{'), ('5', '5'), (',', ','), ('133', '133'), ('}', '}'), ('Decryption', 'decrypt'), (':', ':'), ('M', 'm'), ('=', '='), ('Cd', 'cd'), ('mod', 'mod'), ('n', 'n'), ('For', 'for'), ('C', 'c'), ('=', '='), ('62', '62'), ('M', 'm'), ('=', '='), ('6265', '6265'), ('mod', 'mod'), ('133', '133'), ('M', 'm'), ('=', '='), ('2666', '2666'), ('mod', 'mod'), ('33', '33'), ('M', 'm'), ('=', '='), ('6', '6'), ('PR', 'pr'), ('=', '='), ('{', '{'), (',', ','), ('n', 'n'), ('}', '}'), (',', ','), ('PU', 'pu'), ('=', '='), ('{', '{'), ('65', '65'), (',', ','), ('133', '133'), ('}', '}'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('RSA', 'rsa'), ('Example', 'exampl'), ('P', 'p'), ('Q', 'q'), ('two', 'two'), ('prime', 'prime'), ('numbers', 'number'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('(', '('), ('yes', 'yes'), (')', ')'), ('Public', 'public'), ('key', 'key'), (':', ':'), ('PU', 'pu'), ('=', '='), ('{', '{'), ('e', 'e'), (',', ','), ('n', 'n'), ('}', '}'), ('=', '='), ('{', '{'), ('5', '5'), (',', ','), ('133', '133'), ('}', '}'), ('Private', 'privat'), ('key', 'key'), (':', ':'), ('PR', 'pr'), ('=', '='), ('{', '{'), (',', ','), ('n', 'n'), ('}', '}'), ('=', '='), ('{', '{'), ('65', '65'), (',', ','), ('133', '133'), ('}', '}'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('RSA', 'rsa'), ('Example', 'exampl'), ('–', '–'), ('cont…', 'cont…'), ('Encryption', 'encrypt'), (':', ':'), ('C', 'c'), ('=', '='), ('Me', 'me'), ('mod', 'mod'), ('n', 'n'), ('For', 'for'), ('message', 'messag'), ('M', 'm'), ('=', '='), ('6', '6'), ('C', 'c'), ('=', '='), ('65', '65'), ('mod', 'mod'), ('133', '133'), ('C', 'c'), ('=', '='), ('7776', '7776'), ('mod', 'mod'), ('33', '33'), ('C', 'c'), ('=', '='), ('62', '62'), ('PU', 'pu'), ('=', '='), ('{', '{'), ('e', 'e'), (',', ','), ('n', 'n'), ('}', '}'), (',', ','), ('PU', 'pu'), ('=', '='), ('{', '{'), ('5', '5'), (',', ','), ('133', '133'), ('}', '}'), ('Decryption', 'decrypt'), (':', ':'), ('M', 'm'), ('=', '='), ('Cd', 'cd'), ('mod', 'mod'), ('n', 'n'), ('For', 'for'), ('C', 'c'), ('=', '='), ('62', '62'), ('M', 'm'), ('=', '='), ('6265', '6265'), ('mod', 'mod'), ('133', '133'), ('M', 'm'), ('=', '='), ('2666', '2666'), ('mod', 'mod'), ('33', '33'), ('M', 'm'), ('=', '='), ('6', '6'), ('PR', 'pr'), ('=', '='), ('{', '{'), (',', ','), ('n', 'n'), ('}', '}'), (',', ','), ('PU', 'pu'), ('=', '='), ('{', '{'), ('65', '65'), (',', ','), ('133', '133'), ('}', '}'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('RSA', 'rsa'), ('Example', 'exampl'), ('P', 'p'), ('Q', 'q'), ('two', 'two'), ('prime', 'prime'), ('numbers', 'number'), ('.', '.')]

>> Lemmatization: 
 [('(', '('), ('yes', 'yes'), (')', ')'), ('Public', 'Public'), ('key', 'key'), (':', ':'), ('PU', 'PU'), ('=', '='), ('{', '{'), ('e', 'e'), (',', ','), ('n', 'n'), ('}', '}'), ('=', '='), ('{', '{'), ('5', '5'), (',', ','), ('133', '133'), ('}', '}'), ('Private', 'Private'), ('key', 'key'), (':', ':'), ('PR', 'PR'), ('=', '='), ('{', '{'), (',', ','), ('n', 'n'), ('}', '}'), ('=', '='), ('{', '{'), ('65', '65'), (',', ','), ('133', '133'), ('}', '}'), ('Unit-4', 'Unit-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('RSA', 'RSA'), ('Example', 'Example'), ('–', '–'), ('cont…', 'cont…'), ('Encryption', 'Encryption'), (':', ':'), ('C', 'C'), ('=', '='), ('Me', 'Me'), ('mod', 'mod'), ('n', 'n'), ('For', 'For'), ('message', 'message'), ('M', 'M'), ('=', '='), ('6', '6'), ('C', 'C'), ('=', '='), ('65', '65'), ('mod', 'mod'), ('133', '133'), ('C', 'C'), ('=', '='), ('7776', '7776'), ('mod', 'mod'), ('33', '33'), ('C', 'C'), ('=', '='), ('62', '62'), ('PU', 'PU'), ('=', '='), ('{', '{'), ('e', 'e'), (',', ','), ('n', 'n'), ('}', '}'), (',', ','), ('PU', 'PU'), ('=', '='), ('{', '{'), ('5', '5'), (',', ','), ('133', '133'), ('}', '}'), ('Decryption', 'Decryption'), (':', ':'), ('M', 'M'), ('=', '='), ('Cd', 'Cd'), ('mod', 'mod'), ('n', 'n'), ('For', 'For'), ('C', 'C'), ('=', '='), ('62', '62'), ('M', 'M'), ('=', '='), ('6265', '6265'), ('mod', 'mod'), ('133', '133'), ('M', 'M'), ('=', '='), ('2666', '2666'), ('mod', 'mod'), ('33', '33'), ('M', 'M'), ('=', '='), ('6', '6'), ('PR', 'PR'), ('=', '='), ('{', '{'), (',', ','), ('n', 'n'), ('}', '}'), (',', ','), ('PU', 'PU'), ('=', '='), ('{', '{'), ('65', '65'), (',', ','), ('133', '133'), ('}', '}'), ('Unit-4', 'Unit-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('RSA', 'RSA'), ('Example', 'Example'), ('P', 'P'), ('Q', 'Q'), ('two', 'two'), ('prime', 'prime'), ('numbers', 'number'), ('.', '.')]



============================ Sentence 20 =============================

P=7, and Q=17. 


>> Tokens are: 
 ['P=7', ',', 'Q=17', '.']

>> Bigrams are: 
 [('P=7', ','), (',', 'Q=17'), ('Q=17', '.')]

>> Trigrams are: 
 [('P=7', ',', 'Q=17'), (',', 'Q=17', '.')]

>> POS Tags are: 
 [('P=7', 'NNP'), (',', ','), ('Q=17', 'NNP'), ('.', '.')]

 (S (NP P=7/NNP) ,/, (NP Q=17/NNP) ./.) 


>> Noun Phrases are: 
 ['P=7', 'Q=17']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('P=7', 'p=7'), (',', ','), ('Q=17', 'q=17'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('P=7', 'p=7'), (',', ','), ('Q=17', 'q=17'), ('.', '.')]

>> Lemmatization: 
 [('P=7', 'P=7'), (',', ','), ('Q=17', 'Q=17'), ('.', '.')]



============================ Sentence 21 =============================

Take public key E=5. 


>> Tokens are: 
 ['Take', 'public', 'key', 'E=5', '.']

>> Bigrams are: 
 [('Take', 'public'), ('public', 'key'), ('key', 'E=5'), ('E=5', '.')]

>> Trigrams are: 
 [('Take', 'public', 'key'), ('public', 'key', 'E=5'), ('key', 'E=5', '.')]

>> POS Tags are: 
 [('Take', 'VB'), ('public', 'JJ'), ('key', 'NN'), ('E=5', 'NNP'), ('.', '.')]

 (S Take/VB (NP public/JJ key/NN E=5/NNP) ./.) 


>> Noun Phrases are: 
 ['public key E=5']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Take', 'take'), ('public', 'public'), ('key', 'key'), ('E=5', 'e=5'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Take', 'take'), ('public', 'public'), ('key', 'key'), ('E=5', 'e=5'), ('.', '.')]

>> Lemmatization: 
 [('Take', 'Take'), ('public', 'public'), ('key', 'key'), ('E=5', 'E=5'), ('.', '.')]



============================ Sentence 22 =============================

If plain text value is 10, then what will be cipher text value according to RSA algorithm? 


>> Tokens are: 
 ['If', 'plain', 'text', 'value', '10', ',', 'cipher', 'text', 'value', 'according', 'RSA', 'algorithm', '?']

>> Bigrams are: 
 [('If', 'plain'), ('plain', 'text'), ('text', 'value'), ('value', '10'), ('10', ','), (',', 'cipher'), ('cipher', 'text'), ('text', 'value'), ('value', 'according'), ('according', 'RSA'), ('RSA', 'algorithm'), ('algorithm', '?')]

>> Trigrams are: 
 [('If', 'plain', 'text'), ('plain', 'text', 'value'), ('text', 'value', '10'), ('value', '10', ','), ('10', ',', 'cipher'), (',', 'cipher', 'text'), ('cipher', 'text', 'value'), ('text', 'value', 'according'), ('value', 'according', 'RSA'), ('according', 'RSA', 'algorithm'), ('RSA', 'algorithm', '?')]

>> POS Tags are: 
 [('If', 'IN'), ('plain', 'VBN'), ('text', 'IN'), ('value', 'NN'), ('10', 'CD'), (',', ','), ('cipher', 'JJR'), ('text', 'NN'), ('value', 'NN'), ('according', 'VBG'), ('RSA', 'NNP'), ('algorithm', 'NN'), ('?', '.')]

 (S
  If/IN
  plain/VBN
  text/IN
  (NP value/NN)
  10/CD
  ,/,
  cipher/JJR
  (NP text/NN value/NN)
  according/VBG
  (NP RSA/NNP algorithm/NN)
  ?/.) 


>> Noun Phrases are: 
 ['value', 'text value', 'RSA algorithm']

>> Named Entities are: 
 [('ORGANIZATION', 'RSA')] 

>> Stemming using Porter Stemmer: 
 [('If', 'if'), ('plain', 'plain'), ('text', 'text'), ('value', 'valu'), ('10', '10'), (',', ','), ('cipher', 'cipher'), ('text', 'text'), ('value', 'valu'), ('according', 'accord'), ('RSA', 'rsa'), ('algorithm', 'algorithm'), ('?', '?')]

>> Stemming using Snowball Stemmer: 
 [('If', 'if'), ('plain', 'plain'), ('text', 'text'), ('value', 'valu'), ('10', '10'), (',', ','), ('cipher', 'cipher'), ('text', 'text'), ('value', 'valu'), ('according', 'accord'), ('RSA', 'rsa'), ('algorithm', 'algorithm'), ('?', '?')]

>> Lemmatization: 
 [('If', 'If'), ('plain', 'plain'), ('text', 'text'), ('value', 'value'), ('10', '10'), (',', ','), ('cipher', 'cipher'), ('text', 'text'), ('value', 'value'), ('according', 'according'), ('RSA', 'RSA'), ('algorithm', 'algorithm'), ('?', '?')]



============================ Sentence 23 =============================

n = 119 φ(n) = 96 e = 5 d = 77 PU = { 5, 119 } PR = {77, 119} C = 105 mod 119 => C = 40   Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  Diffie-Hellman key Exchange The purpose of the Diffie-Hellman algorithm is to enable two users to securely exchange a key that can be used for subsequent encryption of message. 


>> Tokens are: 
 ['n', '=', '119', 'φ', '(', 'n', ')', '=', '96', 'e', '=', '5', '=', '77', 'PU', '=', '{', '5', ',', '119', '}', 'PR', '=', '{', '77', ',', '119', '}', 'C', '=', '105', 'mod', '119', '=', '>', 'C', '=', '40', 'Unit-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Diffie-Hellman', 'key', 'Exchange', 'The', 'purpose', 'Diffie-Hellman', 'algorithm', 'enable', 'two', 'users', 'securely', 'exchange', 'key', 'used', 'subsequent', 'encryption', 'message', '.']

>> Bigrams are: 
 [('n', '='), ('=', '119'), ('119', 'φ'), ('φ', '('), ('(', 'n'), ('n', ')'), (')', '='), ('=', '96'), ('96', 'e'), ('e', '='), ('=', '5'), ('5', '='), ('=', '77'), ('77', 'PU'), ('PU', '='), ('=', '{'), ('{', '5'), ('5', ','), (',', '119'), ('119', '}'), ('}', 'PR'), ('PR', '='), ('=', '{'), ('{', '77'), ('77', ','), (',', '119'), ('119', '}'), ('}', 'C'), ('C', '='), ('=', '105'), ('105', 'mod'), ('mod', '119'), ('119', '='), ('=', '>'), ('>', 'C'), ('C', '='), ('=', '40'), ('40', 'Unit-4'), ('Unit-4', 'Asymmertic'), ('Asymmertic', 'Ciphers'), ('Ciphers', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Diffie-Hellman'), ('Diffie-Hellman', 'key'), ('key', 'Exchange'), ('Exchange', 'The'), ('The', 'purpose'), ('purpose', 'Diffie-Hellman'), ('Diffie-Hellman', 'algorithm'), ('algorithm', 'enable'), ('enable', 'two'), ('two', 'users'), ('users', 'securely'), ('securely', 'exchange'), ('exchange', 'key'), ('key', 'used'), ('used', 'subsequent'), ('subsequent', 'encryption'), ('encryption', 'message'), ('message', '.')]

>> Trigrams are: 
 [('n', '=', '119'), ('=', '119', 'φ'), ('119', 'φ', '('), ('φ', '(', 'n'), ('(', 'n', ')'), ('n', ')', '='), (')', '=', '96'), ('=', '96', 'e'), ('96', 'e', '='), ('e', '=', '5'), ('=', '5', '='), ('5', '=', '77'), ('=', '77', 'PU'), ('77', 'PU', '='), ('PU', '=', '{'), ('=', '{', '5'), ('{', '5', ','), ('5', ',', '119'), (',', '119', '}'), ('119', '}', 'PR'), ('}', 'PR', '='), ('PR', '=', '{'), ('=', '{', '77'), ('{', '77', ','), ('77', ',', '119'), (',', '119', '}'), ('119', '}', 'C'), ('}', 'C', '='), ('C', '=', '105'), ('=', '105', 'mod'), ('105', 'mod', '119'), ('mod', '119', '='), ('119', '=', '>'), ('=', '>', 'C'), ('>', 'C', '='), ('C', '=', '40'), ('=', '40', 'Unit-4'), ('40', 'Unit-4', 'Asymmertic'), ('Unit-4', 'Asymmertic', 'Ciphers'), ('Asymmertic', 'Ciphers', 'Darshan'), ('Ciphers', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Diffie-Hellman'), ('›', 'Diffie-Hellman', 'key'), ('Diffie-Hellman', 'key', 'Exchange'), ('key', 'Exchange', 'The'), ('Exchange', 'The', 'purpose'), ('The', 'purpose', 'Diffie-Hellman'), ('purpose', 'Diffie-Hellman', 'algorithm'), ('Diffie-Hellman', 'algorithm', 'enable'), ('algorithm', 'enable', 'two'), ('enable', 'two', 'users'), ('two', 'users', 'securely'), ('users', 'securely', 'exchange'), ('securely', 'exchange', 'key'), ('exchange', 'key', 'used'), ('key', 'used', 'subsequent'), ('used', 'subsequent', 'encryption'), ('subsequent', 'encryption', 'message'), ('encryption', 'message', '.')]

>> POS Tags are: 
 [('n', 'JJ'), ('=', '$'), ('119', 'CD'), ('φ', 'NNP'), ('(', '('), ('n', 'NN'), (')', ')'), ('=', 'VBZ'), ('96', 'CD'), ('e', 'NN'), ('=', 'VBD'), ('5', 'CD'), ('=', 'JJ'), ('77', 'CD'), ('PU', 'NNP'), ('=', 'NNP'), ('{', '('), ('5', 'CD'), (',', ','), ('119', 'CD'), ('}', ')'), ('PR', 'NNP'), ('=', 'NNP'), ('{', '('), ('77', 'CD'), (',', ','), ('119', 'CD'), ('}', ')'), ('C', 'NNP'), ('=', '$'), ('105', 'CD'), ('mod', 'NN'), ('119', 'CD'), ('=', 'NN'), ('>', 'NNP'), ('C', 'NNP'), ('=', 'VBD'), ('40', 'CD'), ('Unit-4', 'JJ'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Diffie-Hellman', 'NNP'), ('key', 'JJ'), ('Exchange', 'NNP'), ('The', 'DT'), ('purpose', 'JJ'), ('Diffie-Hellman', 'NNP'), ('algorithm', 'NN'), ('enable', 'JJ'), ('two', 'CD'), ('users', 'NNS'), ('securely', 'RB'), ('exchange', 'VBP'), ('key', 'JJ'), ('used', 'VBN'), ('subsequent', 'JJ'), ('encryption', 'NN'), ('message', 'NN'), ('.', '.')]

 (S
  n/JJ
  =/$
  119/CD
  (NP φ/NNP)
  (/(
  (NP n/NN)
  )/)
  =/VBZ
  96/CD
  (NP e/NN)
  =/VBD
  5/CD
  =/JJ
  77/CD
  (NP PU/NNP =/NNP)
  {/(
  5/CD
  ,/,
  119/CD
  }/)
  (NP PR/NNP =/NNP)
  {/(
  77/CD
  ,/,
  119/CD
  }/)
  (NP C/NNP)
  =/$
  105/CD
  (NP mod/NN)
  119/CD
  (NP =/NN >/NNP C/NNP)
  =/VBD
  40/CD
  (NP
    Unit-4/JJ
    Asymmertic/NNP
    Ciphers/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Diffie-Hellman/NNP)
  (NP key/JJ Exchange/NNP)
  (NP The/DT purpose/JJ Diffie-Hellman/NNP algorithm/NN)
  enable/JJ
  two/CD
  (NP users/NNS)
  securely/RB
  exchange/VBP
  key/JJ
  used/VBN
  (NP subsequent/JJ encryption/NN message/NN)
  ./.) 


>> Noun Phrases are: 
 ['φ', 'n', 'e', 'PU =', 'PR =', 'C', 'mod', '= > C', 'Unit-4 Asymmertic Ciphers Darshan Institute Engineering', 'Technology ‹', '› Diffie-Hellman', 'key Exchange', 'The purpose Diffie-Hellman algorithm', 'users', 'subsequent encryption message']

>> Named Entities are: 
 [('ORGANIZATION', 'Asymmertic Ciphers Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('n', 'n'), ('=', '='), ('119', '119'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), ('=', '='), ('96', '96'), ('e', 'e'), ('=', '='), ('5', '5'), ('=', '='), ('77', '77'), ('PU', 'pu'), ('=', '='), ('{', '{'), ('5', '5'), (',', ','), ('119', '119'), ('}', '}'), ('PR', 'pr'), ('=', '='), ('{', '{'), ('77', '77'), (',', ','), ('119', '119'), ('}', '}'), ('C', 'c'), ('=', '='), ('105', '105'), ('mod', 'mod'), ('119', '119'), ('=', '='), ('>', '>'), ('C', 'c'), ('=', '='), ('40', '40'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Diffie-Hellman', 'diffie-hellman'), ('key', 'key'), ('Exchange', 'exchang'), ('The', 'the'), ('purpose', 'purpos'), ('Diffie-Hellman', 'diffie-hellman'), ('algorithm', 'algorithm'), ('enable', 'enabl'), ('two', 'two'), ('users', 'user'), ('securely', 'secur'), ('exchange', 'exchang'), ('key', 'key'), ('used', 'use'), ('subsequent', 'subsequ'), ('encryption', 'encrypt'), ('message', 'messag'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('n', 'n'), ('=', '='), ('119', '119'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), ('=', '='), ('96', '96'), ('e', 'e'), ('=', '='), ('5', '5'), ('=', '='), ('77', '77'), ('PU', 'pu'), ('=', '='), ('{', '{'), ('5', '5'), (',', ','), ('119', '119'), ('}', '}'), ('PR', 'pr'), ('=', '='), ('{', '{'), ('77', '77'), (',', ','), ('119', '119'), ('}', '}'), ('C', 'c'), ('=', '='), ('105', '105'), ('mod', 'mod'), ('119', '119'), ('=', '='), ('>', '>'), ('C', 'c'), ('=', '='), ('40', '40'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Diffie-Hellman', 'diffie-hellman'), ('key', 'key'), ('Exchange', 'exchang'), ('The', 'the'), ('purpose', 'purpos'), ('Diffie-Hellman', 'diffie-hellman'), ('algorithm', 'algorithm'), ('enable', 'enabl'), ('two', 'two'), ('users', 'user'), ('securely', 'secur'), ('exchange', 'exchang'), ('key', 'key'), ('used', 'use'), ('subsequent', 'subsequ'), ('encryption', 'encrypt'), ('message', 'messag'), ('.', '.')]

>> Lemmatization: 
 [('n', 'n'), ('=', '='), ('119', '119'), ('φ', 'φ'), ('(', '('), ('n', 'n'), (')', ')'), ('=', '='), ('96', '96'), ('e', 'e'), ('=', '='), ('5', '5'), ('=', '='), ('77', '77'), ('PU', 'PU'), ('=', '='), ('{', '{'), ('5', '5'), (',', ','), ('119', '119'), ('}', '}'), ('PR', 'PR'), ('=', '='), ('{', '{'), ('77', '77'), (',', ','), ('119', '119'), ('}', '}'), ('C', 'C'), ('=', '='), ('105', '105'), ('mod', 'mod'), ('119', '119'), ('=', '='), ('>', '>'), ('C', 'C'), ('=', '='), ('40', '40'), ('Unit-4', 'Unit-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Diffie-Hellman', 'Diffie-Hellman'), ('key', 'key'), ('Exchange', 'Exchange'), ('The', 'The'), ('purpose', 'purpose'), ('Diffie-Hellman', 'Diffie-Hellman'), ('algorithm', 'algorithm'), ('enable', 'enable'), ('two', 'two'), ('users', 'user'), ('securely', 'securely'), ('exchange', 'exchange'), ('key', 'key'), ('used', 'used'), ('subsequent', 'subsequent'), ('encryption', 'encryption'), ('message', 'message'), ('.', '.')]



============================ Sentence 24 =============================

This algorithm depends for its effectiveness on the difficulty of computing discrete logarithms. 


>> Tokens are: 
 ['This', 'algorithm', 'depends', 'effectiveness', 'difficulty', 'computing', 'discrete', 'logarithms', '.']

>> Bigrams are: 
 [('This', 'algorithm'), ('algorithm', 'depends'), ('depends', 'effectiveness'), ('effectiveness', 'difficulty'), ('difficulty', 'computing'), ('computing', 'discrete'), ('discrete', 'logarithms'), ('logarithms', '.')]

>> Trigrams are: 
 [('This', 'algorithm', 'depends'), ('algorithm', 'depends', 'effectiveness'), ('depends', 'effectiveness', 'difficulty'), ('effectiveness', 'difficulty', 'computing'), ('difficulty', 'computing', 'discrete'), ('computing', 'discrete', 'logarithms'), ('discrete', 'logarithms', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('algorithm', 'NN'), ('depends', 'VBZ'), ('effectiveness', 'JJ'), ('difficulty', 'NN'), ('computing', 'VBG'), ('discrete', 'JJ'), ('logarithms', 'NN'), ('.', '.')]

 (S
  (NP This/DT algorithm/NN)
  depends/VBZ
  (NP effectiveness/JJ difficulty/NN)
  computing/VBG
  (NP discrete/JJ logarithms/NN)
  ./.) 


>> Noun Phrases are: 
 ['This algorithm', 'effectiveness difficulty', 'discrete logarithms']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('algorithm', 'algorithm'), ('depends', 'depend'), ('effectiveness', 'effect'), ('difficulty', 'difficulti'), ('computing', 'comput'), ('discrete', 'discret'), ('logarithms', 'logarithm'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('algorithm', 'algorithm'), ('depends', 'depend'), ('effectiveness', 'effect'), ('difficulty', 'difficulti'), ('computing', 'comput'), ('discrete', 'discret'), ('logarithms', 'logarithm'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('algorithm', 'algorithm'), ('depends', 'depends'), ('effectiveness', 'effectiveness'), ('difficulty', 'difficulty'), ('computing', 'computing'), ('discrete', 'discrete'), ('logarithms', 'logarithm'), ('.', '.')]



============================ Sentence 25 =============================

Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  Primitive root Let  be a prime number Then  is a primitive root for , if the powers of  modulo  generates all integers from 1 to  – 1 in some permutation. 


>> Tokens are: 
 ['Unit-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Primitive', 'root', 'Let', 'prime', 'number', 'Then', 'primitive', 'root', ',', 'powers', 'modulo', 'generates', 'integers', '1', '–', '1', 'permutation', '.']

>> Bigrams are: 
 [('Unit-4', 'Asymmertic'), ('Asymmertic', 'Ciphers'), ('Ciphers', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Primitive'), ('Primitive', 'root'), ('root', 'Let'), ('Let', 'prime'), ('prime', 'number'), ('number', 'Then'), ('Then', 'primitive'), ('primitive', 'root'), ('root', ','), (',', 'powers'), ('powers', 'modulo'), ('modulo', 'generates'), ('generates', 'integers'), ('integers', '1'), ('1', '–'), ('–', '1'), ('1', 'permutation'), ('permutation', '.')]

>> Trigrams are: 
 [('Unit-4', 'Asymmertic', 'Ciphers'), ('Asymmertic', 'Ciphers', 'Darshan'), ('Ciphers', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Primitive'), ('›', 'Primitive', 'root'), ('Primitive', 'root', 'Let'), ('root', 'Let', 'prime'), ('Let', 'prime', 'number'), ('prime', 'number', 'Then'), ('number', 'Then', 'primitive'), ('Then', 'primitive', 'root'), ('primitive', 'root', ','), ('root', ',', 'powers'), (',', 'powers', 'modulo'), ('powers', 'modulo', 'generates'), ('modulo', 'generates', 'integers'), ('generates', 'integers', '1'), ('integers', '1', '–'), ('1', '–', '1'), ('–', '1', 'permutation'), ('1', 'permutation', '.')]

>> POS Tags are: 
 [('Unit-4', 'JJ'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Primitive', 'NNP'), ('root', 'NN'), ('Let', 'NNP'), ('prime', 'JJ'), ('number', 'NN'), ('Then', 'RB'), ('primitive', 'JJ'), ('root', 'NN'), (',', ','), ('powers', 'NNS'), ('modulo', 'VBP'), ('generates', 'VBZ'), ('integers', 'NNS'), ('1', 'CD'), ('–', '$'), ('1', 'CD'), ('permutation', 'NN'), ('.', '.')]

 (S
  (NP
    Unit-4/JJ
    Asymmertic/NNP
    Ciphers/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Primitive/NNP root/NN Let/NNP)
  (NP prime/JJ number/NN)
  Then/RB
  (NP primitive/JJ root/NN)
  ,/,
  (NP powers/NNS)
  modulo/VBP
  generates/VBZ
  (NP integers/NNS)
  1/CD
  –/$
  1/CD
  (NP permutation/NN)
  ./.) 


>> Noun Phrases are: 
 ['Unit-4 Asymmertic Ciphers Darshan Institute Engineering', 'Technology ‹', '› Primitive root Let', 'prime number', 'primitive root', 'powers', 'integers', 'permutation']

>> Named Entities are: 
 [('ORGANIZATION', 'Asymmertic Ciphers Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Primitive', 'primit'), ('root', 'root'), ('Let', 'let'), ('prime', 'prime'), ('number', 'number'), ('Then', 'then'), ('primitive', 'primit'), ('root', 'root'), (',', ','), ('powers', 'power'), ('modulo', 'modulo'), ('generates', 'gener'), ('integers', 'integ'), ('1', '1'), ('–', '–'), ('1', '1'), ('permutation', 'permut'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Primitive', 'primit'), ('root', 'root'), ('Let', 'let'), ('prime', 'prime'), ('number', 'number'), ('Then', 'then'), ('primitive', 'primit'), ('root', 'root'), (',', ','), ('powers', 'power'), ('modulo', 'modulo'), ('generates', 'generat'), ('integers', 'integ'), ('1', '1'), ('–', '–'), ('1', '1'), ('permutation', 'permut'), ('.', '.')]

>> Lemmatization: 
 [('Unit-4', 'Unit-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Primitive', 'Primitive'), ('root', 'root'), ('Let', 'Let'), ('prime', 'prime'), ('number', 'number'), ('Then', 'Then'), ('primitive', 'primitive'), ('root', 'root'), (',', ','), ('powers', 'power'), ('modulo', 'modulo'), ('generates', 'generates'), ('integers', 'integer'), ('1', '1'), ('–', '–'), ('1', '1'), ('permutation', 'permutation'), ('.', '.')]



============================ Sentence 26 =============================

Example: p = 7 then primitive root is 3 because powers of 3 mod 7 generates all the integers from 1 to 6          Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  Discrete Logarithm For any integer  and a primitive root  of prime number , we can find a unique exponent  such that  The exponent  is referred as the discrete logarithm of  for the base , mod . 


>> Tokens are: 
 ['Example', ':', 'p', '=', '7', 'primitive', 'root', '3', 'powers', '3', 'mod', '7', 'generates', 'integers', '1', '6', 'Unit-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Discrete', 'Logarithm', 'For', 'integer', 'primitive', 'root', 'prime', 'number', ',', 'find', 'unique', 'exponent', 'The', 'exponent', 'referred', 'discrete', 'logarithm', 'base', ',', 'mod', '.']

>> Bigrams are: 
 [('Example', ':'), (':', 'p'), ('p', '='), ('=', '7'), ('7', 'primitive'), ('primitive', 'root'), ('root', '3'), ('3', 'powers'), ('powers', '3'), ('3', 'mod'), ('mod', '7'), ('7', 'generates'), ('generates', 'integers'), ('integers', '1'), ('1', '6'), ('6', 'Unit-4'), ('Unit-4', 'Asymmertic'), ('Asymmertic', 'Ciphers'), ('Ciphers', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Discrete'), ('Discrete', 'Logarithm'), ('Logarithm', 'For'), ('For', 'integer'), ('integer', 'primitive'), ('primitive', 'root'), ('root', 'prime'), ('prime', 'number'), ('number', ','), (',', 'find'), ('find', 'unique'), ('unique', 'exponent'), ('exponent', 'The'), ('The', 'exponent'), ('exponent', 'referred'), ('referred', 'discrete'), ('discrete', 'logarithm'), ('logarithm', 'base'), ('base', ','), (',', 'mod'), ('mod', '.')]

>> Trigrams are: 
 [('Example', ':', 'p'), (':', 'p', '='), ('p', '=', '7'), ('=', '7', 'primitive'), ('7', 'primitive', 'root'), ('primitive', 'root', '3'), ('root', '3', 'powers'), ('3', 'powers', '3'), ('powers', '3', 'mod'), ('3', 'mod', '7'), ('mod', '7', 'generates'), ('7', 'generates', 'integers'), ('generates', 'integers', '1'), ('integers', '1', '6'), ('1', '6', 'Unit-4'), ('6', 'Unit-4', 'Asymmertic'), ('Unit-4', 'Asymmertic', 'Ciphers'), ('Asymmertic', 'Ciphers', 'Darshan'), ('Ciphers', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Discrete'), ('›', 'Discrete', 'Logarithm'), ('Discrete', 'Logarithm', 'For'), ('Logarithm', 'For', 'integer'), ('For', 'integer', 'primitive'), ('integer', 'primitive', 'root'), ('primitive', 'root', 'prime'), ('root', 'prime', 'number'), ('prime', 'number', ','), ('number', ',', 'find'), (',', 'find', 'unique'), ('find', 'unique', 'exponent'), ('unique', 'exponent', 'The'), ('exponent', 'The', 'exponent'), ('The', 'exponent', 'referred'), ('exponent', 'referred', 'discrete'), ('referred', 'discrete', 'logarithm'), ('discrete', 'logarithm', 'base'), ('logarithm', 'base', ','), ('base', ',', 'mod'), (',', 'mod', '.')]

>> POS Tags are: 
 [('Example', 'NN'), (':', ':'), ('p', 'NN'), ('=', 'VBZ'), ('7', 'CD'), ('primitive', 'JJ'), ('root', 'NN'), ('3', 'CD'), ('powers', 'NNS'), ('3', 'CD'), ('mod', 'NNS'), ('7', 'CD'), ('generates', 'NNS'), ('integers', 'NNS'), ('1', 'CD'), ('6', 'CD'), ('Unit-4', 'JJ'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Discrete', 'NNP'), ('Logarithm', 'NNP'), ('For', 'IN'), ('integer', 'NN'), ('primitive', 'JJ'), ('root', 'NN'), ('prime', 'JJ'), ('number', 'NN'), (',', ','), ('find', 'VBP'), ('unique', 'JJ'), ('exponent', 'NN'), ('The', 'DT'), ('exponent', 'NN'), ('referred', 'VBD'), ('discrete', 'JJ'), ('logarithm', 'JJ'), ('base', 'NN'), (',', ','), ('mod', 'NN'), ('.', '.')]

 (S
  (NP Example/NN)
  :/:
  (NP p/NN)
  =/VBZ
  7/CD
  (NP primitive/JJ root/NN)
  3/CD
  (NP powers/NNS)
  3/CD
  (NP mod/NNS)
  7/CD
  (NP generates/NNS integers/NNS)
  1/CD
  6/CD
  (NP
    Unit-4/JJ
    Asymmertic/NNP
    Ciphers/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Discrete/NNP Logarithm/NNP)
  For/IN
  (NP integer/NN)
  (NP primitive/JJ root/NN)
  (NP prime/JJ number/NN)
  ,/,
  find/VBP
  (NP unique/JJ exponent/NN)
  (NP The/DT exponent/NN)
  referred/VBD
  (NP discrete/JJ logarithm/JJ base/NN)
  ,/,
  (NP mod/NN)
  ./.) 


>> Noun Phrases are: 
 ['Example', 'p', 'primitive root', 'powers', 'mod', 'generates integers', 'Unit-4 Asymmertic Ciphers Darshan Institute Engineering', 'Technology ‹', '› Discrete Logarithm', 'integer', 'primitive root', 'prime number', 'unique exponent', 'The exponent', 'discrete logarithm base', 'mod']

>> Named Entities are: 
 [('GPE', 'Example'), ('ORGANIZATION', 'Asymmertic Ciphers Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('Example', 'exampl'), (':', ':'), ('p', 'p'), ('=', '='), ('7', '7'), ('primitive', 'primit'), ('root', 'root'), ('3', '3'), ('powers', 'power'), ('3', '3'), ('mod', 'mod'), ('7', '7'), ('generates', 'gener'), ('integers', 'integ'), ('1', '1'), ('6', '6'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Discrete', 'discret'), ('Logarithm', 'logarithm'), ('For', 'for'), ('integer', 'integ'), ('primitive', 'primit'), ('root', 'root'), ('prime', 'prime'), ('number', 'number'), (',', ','), ('find', 'find'), ('unique', 'uniqu'), ('exponent', 'expon'), ('The', 'the'), ('exponent', 'expon'), ('referred', 'refer'), ('discrete', 'discret'), ('logarithm', 'logarithm'), ('base', 'base'), (',', ','), ('mod', 'mod'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Example', 'exampl'), (':', ':'), ('p', 'p'), ('=', '='), ('7', '7'), ('primitive', 'primit'), ('root', 'root'), ('3', '3'), ('powers', 'power'), ('3', '3'), ('mod', 'mod'), ('7', '7'), ('generates', 'generat'), ('integers', 'integ'), ('1', '1'), ('6', '6'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Discrete', 'discret'), ('Logarithm', 'logarithm'), ('For', 'for'), ('integer', 'integ'), ('primitive', 'primit'), ('root', 'root'), ('prime', 'prime'), ('number', 'number'), (',', ','), ('find', 'find'), ('unique', 'uniqu'), ('exponent', 'expon'), ('The', 'the'), ('exponent', 'expon'), ('referred', 'refer'), ('discrete', 'discret'), ('logarithm', 'logarithm'), ('base', 'base'), (',', ','), ('mod', 'mod'), ('.', '.')]

>> Lemmatization: 
 [('Example', 'Example'), (':', ':'), ('p', 'p'), ('=', '='), ('7', '7'), ('primitive', 'primitive'), ('root', 'root'), ('3', '3'), ('powers', 'power'), ('3', '3'), ('mod', 'mod'), ('7', '7'), ('generates', 'generates'), ('integers', 'integer'), ('1', '1'), ('6', '6'), ('Unit-4', 'Unit-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Discrete', 'Discrete'), ('Logarithm', 'Logarithm'), ('For', 'For'), ('integer', 'integer'), ('primitive', 'primitive'), ('root', 'root'), ('prime', 'prime'), ('number', 'number'), (',', ','), ('find', 'find'), ('unique', 'unique'), ('exponent', 'exponent'), ('The', 'The'), ('exponent', 'exponent'), ('referred', 'referred'), ('discrete', 'discrete'), ('logarithm', 'logarithm'), ('base', 'base'), (',', ','), ('mod', 'mod'), ('.', '.')]



============================ Sentence 27 =============================

It expressed as below. 


>> Tokens are: 
 ['It', 'expressed', '.']

>> Bigrams are: 
 [('It', 'expressed'), ('expressed', '.')]

>> Trigrams are: 
 [('It', 'expressed', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('expressed', 'VBD'), ('.', '.')]

 (S It/PRP expressed/VBD ./.) 


>> Noun Phrases are: 
 []

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('expressed', 'express'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('expressed', 'express'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('expressed', 'expressed'), ('.', '.')]



============================ Sentence 28 =============================

Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  Diffie-Hellman Key Exchange – Cont… User A and User B agree on two large prime numbers q and α. 


>> Tokens are: 
 ['Unit-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Diffie-Hellman', 'Key', 'Exchange', '–', 'Cont…', 'User', 'A', 'User', 'B', 'agree', 'two', 'large', 'prime', 'numbers', 'q', 'α', '.']

>> Bigrams are: 
 [('Unit-4', 'Asymmertic'), ('Asymmertic', 'Ciphers'), ('Ciphers', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Diffie-Hellman'), ('Diffie-Hellman', 'Key'), ('Key', 'Exchange'), ('Exchange', '–'), ('–', 'Cont…'), ('Cont…', 'User'), ('User', 'A'), ('A', 'User'), ('User', 'B'), ('B', 'agree'), ('agree', 'two'), ('two', 'large'), ('large', 'prime'), ('prime', 'numbers'), ('numbers', 'q'), ('q', 'α'), ('α', '.')]

>> Trigrams are: 
 [('Unit-4', 'Asymmertic', 'Ciphers'), ('Asymmertic', 'Ciphers', 'Darshan'), ('Ciphers', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Diffie-Hellman'), ('›', 'Diffie-Hellman', 'Key'), ('Diffie-Hellman', 'Key', 'Exchange'), ('Key', 'Exchange', '–'), ('Exchange', '–', 'Cont…'), ('–', 'Cont…', 'User'), ('Cont…', 'User', 'A'), ('User', 'A', 'User'), ('A', 'User', 'B'), ('User', 'B', 'agree'), ('B', 'agree', 'two'), ('agree', 'two', 'large'), ('two', 'large', 'prime'), ('large', 'prime', 'numbers'), ('prime', 'numbers', 'q'), ('numbers', 'q', 'α'), ('q', 'α', '.')]

>> POS Tags are: 
 [('Unit-4', 'JJ'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Diffie-Hellman', 'NNP'), ('Key', 'NNP'), ('Exchange', 'NNP'), ('–', 'NNP'), ('Cont…', 'NNP'), ('User', 'NNP'), ('A', 'NNP'), ('User', 'NNP'), ('B', 'NNP'), ('agree', 'VBP'), ('two', 'CD'), ('large', 'JJ'), ('prime', 'JJ'), ('numbers', 'NNS'), ('q', 'VBP'), ('α', 'NN'), ('.', '.')]

 (S
  (NP
    Unit-4/JJ
    Asymmertic/NNP
    Ciphers/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP
    ›/NNP
    Diffie-Hellman/NNP
    Key/NNP
    Exchange/NNP
    –/NNP
    Cont…/NNP
    User/NNP
    A/NNP
    User/NNP
    B/NNP)
  agree/VBP
  two/CD
  (NP large/JJ prime/JJ numbers/NNS)
  q/VBP
  (NP α/NN)
  ./.) 


>> Noun Phrases are: 
 ['Unit-4 Asymmertic Ciphers Darshan Institute Engineering', 'Technology ‹', '› Diffie-Hellman Key Exchange – Cont… User A User B', 'large prime numbers', 'α']

>> Named Entities are: 
 [('ORGANIZATION', 'Asymmertic Ciphers Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Diffie-Hellman', 'diffie-hellman'), ('Key', 'key'), ('Exchange', 'exchang'), ('–', '–'), ('Cont…', 'cont…'), ('User', 'user'), ('A', 'a'), ('User', 'user'), ('B', 'b'), ('agree', 'agre'), ('two', 'two'), ('large', 'larg'), ('prime', 'prime'), ('numbers', 'number'), ('q', 'q'), ('α', 'α'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Diffie-Hellman', 'diffie-hellman'), ('Key', 'key'), ('Exchange', 'exchang'), ('–', '–'), ('Cont…', 'cont…'), ('User', 'user'), ('A', 'a'), ('User', 'user'), ('B', 'b'), ('agree', 'agre'), ('two', 'two'), ('large', 'larg'), ('prime', 'prime'), ('numbers', 'number'), ('q', 'q'), ('α', 'α'), ('.', '.')]

>> Lemmatization: 
 [('Unit-4', 'Unit-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Diffie-Hellman', 'Diffie-Hellman'), ('Key', 'Key'), ('Exchange', 'Exchange'), ('–', '–'), ('Cont…', 'Cont…'), ('User', 'User'), ('A', 'A'), ('User', 'User'), ('B', 'B'), ('agree', 'agree'), ('two', 'two'), ('large', 'large'), ('prime', 'prime'), ('numbers', 'number'), ('q', 'q'), ('α', 'α'), ('.', '.')]



============================ Sentence 29 =============================

User A and User B can use insecure channel to agree on them. 


>> Tokens are: 
 ['User', 'A', 'User', 'B', 'use', 'insecure', 'channel', 'agree', '.']

>> Bigrams are: 
 [('User', 'A'), ('A', 'User'), ('User', 'B'), ('B', 'use'), ('use', 'insecure'), ('insecure', 'channel'), ('channel', 'agree'), ('agree', '.')]

>> Trigrams are: 
 [('User', 'A', 'User'), ('A', 'User', 'B'), ('User', 'B', 'use'), ('B', 'use', 'insecure'), ('use', 'insecure', 'channel'), ('insecure', 'channel', 'agree'), ('channel', 'agree', '.')]

>> POS Tags are: 
 [('User', 'IN'), ('A', 'NNP'), ('User', 'NNP'), ('B', 'NNP'), ('use', 'NN'), ('insecure', 'NN'), ('channel', 'NN'), ('agree', 'NN'), ('.', '.')]

 (S
  User/IN
  (NP A/NNP User/NNP B/NNP use/NN insecure/NN channel/NN agree/NN)
  ./.) 


>> Noun Phrases are: 
 ['A User B use insecure channel agree']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('User', 'user'), ('A', 'a'), ('User', 'user'), ('B', 'b'), ('use', 'use'), ('insecure', 'insecur'), ('channel', 'channel'), ('agree', 'agre'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('User', 'user'), ('A', 'a'), ('User', 'user'), ('B', 'b'), ('use', 'use'), ('insecure', 'insecur'), ('channel', 'channel'), ('agree', 'agre'), ('.', '.')]

>> Lemmatization: 
 [('User', 'User'), ('A', 'A'), ('User', 'User'), ('B', 'B'), ('use', 'use'), ('insecure', 'insecure'), ('channel', 'channel'), ('agree', 'agree'), ('.', '.')]



============================ Sentence 30 =============================

User A selects a random integer  and calculates   Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  Diffie-Hellman Key Exchange – Cont… Global Public Elements                                                             prime number                                                             <  and  is primitive root of  User A Key Generation             Select private                                   Calculate public                   User B Key Generation             Select private                                   Calculate public                    Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  Diffie-Hellman Key Exchange – Cont… User A Key Generation             Select private                                   Calculate public                  User B Key Generation             Select private                                   Calculate public                  Calculation of Secret Key by User A              Calculation of Secret Key by User b                 Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  Diffie-Hellman Key Exchange – Cont… User A Key Generation Private            ,                    Public             User B Key Generation Private           ,                    Public             Secret Key by User A :  Secret Key by User B :                       Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›     Diffie-Hellman Key Exchange Example Alice and bob agrees on a prime number   as primitive root of  Alice selects a private integer   Alice computes  =>  Bob selects a private integer   Bob computes  =>  Alice sends  to Bob and Bob sends  to Alice Alice computes key  =>   Bob computes key =>     Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  Diffie-Hellman Key Exchange Illustration    Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#›  Man in the middle attack Suppose Alice and Bob wish to exchange keys, and Darth is the adversary. 


>> Tokens are: 
 ['User', 'A', 'selects', 'random', 'integer', 'calculates', 'Unit-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Diffie-Hellman', 'Key', 'Exchange', '–', 'Cont…', 'Global', 'Public', 'Elements', 'prime', 'number', '<', 'primitive', 'root', 'User', 'A', 'Key', 'Generation', 'Select', 'private', 'Calculate', 'public', 'User', 'B', 'Key', 'Generation', 'Select', 'private', 'Calculate', 'public', 'Unit-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Diffie-Hellman', 'Key', 'Exchange', '–', 'Cont…', 'User', 'A', 'Key', 'Generation', 'Select', 'private', 'Calculate', 'public', 'User', 'B', 'Key', 'Generation', 'Select', 'private', 'Calculate', 'public', 'Calculation', 'Secret', 'Key', 'User', 'A', 'Calculation', 'Secret', 'Key', 'User', 'b', 'Unit-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Diffie-Hellman', 'Key', 'Exchange', '–', 'Cont…', 'User', 'A', 'Key', 'Generation', 'Private', ',', 'Public', 'User', 'B', 'Key', 'Generation', 'Private', ',', 'Public', 'Secret', 'Key', 'User', 'A', ':', 'Secret', 'Key', 'User', 'B', ':', 'Unit-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Diffie-Hellman', 'Key', 'Exchange', 'Example', 'Alice', 'bob', 'agrees', 'prime', 'number', 'primitive', 'root', 'Alice', 'selects', 'private', 'integer', 'Alice', 'computes', '=', '>', 'Bob', 'selects', 'private', 'integer', 'Bob', 'computes', '=', '>', 'Alice', 'sends', 'Bob', 'Bob', 'sends', 'Alice', 'Alice', 'computes', 'key', '=', '>', 'Bob', 'computes', 'key', '=', '>', 'Unit-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Diffie-Hellman', 'Key', 'Exchange', 'Illustration', 'Unit-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›', 'Man', 'middle', 'attack', 'Suppose', 'Alice', 'Bob', 'wish', 'exchange', 'keys', ',', 'Darth', 'adversary', '.']

>> Bigrams are: 
 [('User', 'A'), ('A', 'selects'), ('selects', 'random'), ('random', 'integer'), ('integer', 'calculates'), ('calculates', 'Unit-4'), ('Unit-4', 'Asymmertic'), ('Asymmertic', 'Ciphers'), ('Ciphers', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Diffie-Hellman'), ('Diffie-Hellman', 'Key'), ('Key', 'Exchange'), ('Exchange', '–'), ('–', 'Cont…'), ('Cont…', 'Global'), ('Global', 'Public'), ('Public', 'Elements'), ('Elements', 'prime'), ('prime', 'number'), ('number', '<'), ('<', 'primitive'), ('primitive', 'root'), ('root', 'User'), ('User', 'A'), ('A', 'Key'), ('Key', 'Generation'), ('Generation', 'Select'), ('Select', 'private'), ('private', 'Calculate'), ('Calculate', 'public'), ('public', 'User'), ('User', 'B'), ('B', 'Key'), ('Key', 'Generation'), ('Generation', 'Select'), ('Select', 'private'), ('private', 'Calculate'), ('Calculate', 'public'), ('public', 'Unit-4'), ('Unit-4', 'Asymmertic'), ('Asymmertic', 'Ciphers'), ('Ciphers', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Diffie-Hellman'), ('Diffie-Hellman', 'Key'), ('Key', 'Exchange'), ('Exchange', '–'), ('–', 'Cont…'), ('Cont…', 'User'), ('User', 'A'), ('A', 'Key'), ('Key', 'Generation'), ('Generation', 'Select'), ('Select', 'private'), ('private', 'Calculate'), ('Calculate', 'public'), ('public', 'User'), ('User', 'B'), ('B', 'Key'), ('Key', 'Generation'), ('Generation', 'Select'), ('Select', 'private'), ('private', 'Calculate'), ('Calculate', 'public'), ('public', 'Calculation'), ('Calculation', 'Secret'), ('Secret', 'Key'), ('Key', 'User'), ('User', 'A'), ('A', 'Calculation'), ('Calculation', 'Secret'), ('Secret', 'Key'), ('Key', 'User'), ('User', 'b'), ('b', 'Unit-4'), ('Unit-4', 'Asymmertic'), ('Asymmertic', 'Ciphers'), ('Ciphers', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Diffie-Hellman'), ('Diffie-Hellman', 'Key'), ('Key', 'Exchange'), ('Exchange', '–'), ('–', 'Cont…'), ('Cont…', 'User'), ('User', 'A'), ('A', 'Key'), ('Key', 'Generation'), ('Generation', 'Private'), ('Private', ','), (',', 'Public'), ('Public', 'User'), ('User', 'B'), ('B', 'Key'), ('Key', 'Generation'), ('Generation', 'Private'), ('Private', ','), (',', 'Public'), ('Public', 'Secret'), ('Secret', 'Key'), ('Key', 'User'), ('User', 'A'), ('A', ':'), (':', 'Secret'), ('Secret', 'Key'), ('Key', 'User'), ('User', 'B'), ('B', ':'), (':', 'Unit-4'), ('Unit-4', 'Asymmertic'), ('Asymmertic', 'Ciphers'), ('Ciphers', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Diffie-Hellman'), ('Diffie-Hellman', 'Key'), ('Key', 'Exchange'), ('Exchange', 'Example'), ('Example', 'Alice'), ('Alice', 'bob'), ('bob', 'agrees'), ('agrees', 'prime'), ('prime', 'number'), ('number', 'primitive'), ('primitive', 'root'), ('root', 'Alice'), ('Alice', 'selects'), ('selects', 'private'), ('private', 'integer'), ('integer', 'Alice'), ('Alice', 'computes'), ('computes', '='), ('=', '>'), ('>', 'Bob'), ('Bob', 'selects'), ('selects', 'private'), ('private', 'integer'), ('integer', 'Bob'), ('Bob', 'computes'), ('computes', '='), ('=', '>'), ('>', 'Alice'), ('Alice', 'sends'), ('sends', 'Bob'), ('Bob', 'Bob'), ('Bob', 'sends'), ('sends', 'Alice'), ('Alice', 'Alice'), ('Alice', 'computes'), ('computes', 'key'), ('key', '='), ('=', '>'), ('>', 'Bob'), ('Bob', 'computes'), ('computes', 'key'), ('key', '='), ('=', '>'), ('>', 'Unit-4'), ('Unit-4', 'Asymmertic'), ('Asymmertic', 'Ciphers'), ('Ciphers', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Diffie-Hellman'), ('Diffie-Hellman', 'Key'), ('Key', 'Exchange'), ('Exchange', 'Illustration'), ('Illustration', 'Unit-4'), ('Unit-4', 'Asymmertic'), ('Asymmertic', 'Ciphers'), ('Ciphers', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Man'), ('Man', 'middle'), ('middle', 'attack'), ('attack', 'Suppose'), ('Suppose', 'Alice'), ('Alice', 'Bob'), ('Bob', 'wish'), ('wish', 'exchange'), ('exchange', 'keys'), ('keys', ','), (',', 'Darth'), ('Darth', 'adversary'), ('adversary', '.')]

>> Trigrams are: 
 [('User', 'A', 'selects'), ('A', 'selects', 'random'), ('selects', 'random', 'integer'), ('random', 'integer', 'calculates'), ('integer', 'calculates', 'Unit-4'), ('calculates', 'Unit-4', 'Asymmertic'), ('Unit-4', 'Asymmertic', 'Ciphers'), ('Asymmertic', 'Ciphers', 'Darshan'), ('Ciphers', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Diffie-Hellman'), ('›', 'Diffie-Hellman', 'Key'), ('Diffie-Hellman', 'Key', 'Exchange'), ('Key', 'Exchange', '–'), ('Exchange', '–', 'Cont…'), ('–', 'Cont…', 'Global'), ('Cont…', 'Global', 'Public'), ('Global', 'Public', 'Elements'), ('Public', 'Elements', 'prime'), ('Elements', 'prime', 'number'), ('prime', 'number', '<'), ('number', '<', 'primitive'), ('<', 'primitive', 'root'), ('primitive', 'root', 'User'), ('root', 'User', 'A'), ('User', 'A', 'Key'), ('A', 'Key', 'Generation'), ('Key', 'Generation', 'Select'), ('Generation', 'Select', 'private'), ('Select', 'private', 'Calculate'), ('private', 'Calculate', 'public'), ('Calculate', 'public', 'User'), ('public', 'User', 'B'), ('User', 'B', 'Key'), ('B', 'Key', 'Generation'), ('Key', 'Generation', 'Select'), ('Generation', 'Select', 'private'), ('Select', 'private', 'Calculate'), ('private', 'Calculate', 'public'), ('Calculate', 'public', 'Unit-4'), ('public', 'Unit-4', 'Asymmertic'), ('Unit-4', 'Asymmertic', 'Ciphers'), ('Asymmertic', 'Ciphers', 'Darshan'), ('Ciphers', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Diffie-Hellman'), ('›', 'Diffie-Hellman', 'Key'), ('Diffie-Hellman', 'Key', 'Exchange'), ('Key', 'Exchange', '–'), ('Exchange', '–', 'Cont…'), ('–', 'Cont…', 'User'), ('Cont…', 'User', 'A'), ('User', 'A', 'Key'), ('A', 'Key', 'Generation'), ('Key', 'Generation', 'Select'), ('Generation', 'Select', 'private'), ('Select', 'private', 'Calculate'), ('private', 'Calculate', 'public'), ('Calculate', 'public', 'User'), ('public', 'User', 'B'), ('User', 'B', 'Key'), ('B', 'Key', 'Generation'), ('Key', 'Generation', 'Select'), ('Generation', 'Select', 'private'), ('Select', 'private', 'Calculate'), ('private', 'Calculate', 'public'), ('Calculate', 'public', 'Calculation'), ('public', 'Calculation', 'Secret'), ('Calculation', 'Secret', 'Key'), ('Secret', 'Key', 'User'), ('Key', 'User', 'A'), ('User', 'A', 'Calculation'), ('A', 'Calculation', 'Secret'), ('Calculation', 'Secret', 'Key'), ('Secret', 'Key', 'User'), ('Key', 'User', 'b'), ('User', 'b', 'Unit-4'), ('b', 'Unit-4', 'Asymmertic'), ('Unit-4', 'Asymmertic', 'Ciphers'), ('Asymmertic', 'Ciphers', 'Darshan'), ('Ciphers', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Diffie-Hellman'), ('›', 'Diffie-Hellman', 'Key'), ('Diffie-Hellman', 'Key', 'Exchange'), ('Key', 'Exchange', '–'), ('Exchange', '–', 'Cont…'), ('–', 'Cont…', 'User'), ('Cont…', 'User', 'A'), ('User', 'A', 'Key'), ('A', 'Key', 'Generation'), ('Key', 'Generation', 'Private'), ('Generation', 'Private', ','), ('Private', ',', 'Public'), (',', 'Public', 'User'), ('Public', 'User', 'B'), ('User', 'B', 'Key'), ('B', 'Key', 'Generation'), ('Key', 'Generation', 'Private'), ('Generation', 'Private', ','), ('Private', ',', 'Public'), (',', 'Public', 'Secret'), ('Public', 'Secret', 'Key'), ('Secret', 'Key', 'User'), ('Key', 'User', 'A'), ('User', 'A', ':'), ('A', ':', 'Secret'), (':', 'Secret', 'Key'), ('Secret', 'Key', 'User'), ('Key', 'User', 'B'), ('User', 'B', ':'), ('B', ':', 'Unit-4'), (':', 'Unit-4', 'Asymmertic'), ('Unit-4', 'Asymmertic', 'Ciphers'), ('Asymmertic', 'Ciphers', 'Darshan'), ('Ciphers', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Diffie-Hellman'), ('›', 'Diffie-Hellman', 'Key'), ('Diffie-Hellman', 'Key', 'Exchange'), ('Key', 'Exchange', 'Example'), ('Exchange', 'Example', 'Alice'), ('Example', 'Alice', 'bob'), ('Alice', 'bob', 'agrees'), ('bob', 'agrees', 'prime'), ('agrees', 'prime', 'number'), ('prime', 'number', 'primitive'), ('number', 'primitive', 'root'), ('primitive', 'root', 'Alice'), ('root', 'Alice', 'selects'), ('Alice', 'selects', 'private'), ('selects', 'private', 'integer'), ('private', 'integer', 'Alice'), ('integer', 'Alice', 'computes'), ('Alice', 'computes', '='), ('computes', '=', '>'), ('=', '>', 'Bob'), ('>', 'Bob', 'selects'), ('Bob', 'selects', 'private'), ('selects', 'private', 'integer'), ('private', 'integer', 'Bob'), ('integer', 'Bob', 'computes'), ('Bob', 'computes', '='), ('computes', '=', '>'), ('=', '>', 'Alice'), ('>', 'Alice', 'sends'), ('Alice', 'sends', 'Bob'), ('sends', 'Bob', 'Bob'), ('Bob', 'Bob', 'sends'), ('Bob', 'sends', 'Alice'), ('sends', 'Alice', 'Alice'), ('Alice', 'Alice', 'computes'), ('Alice', 'computes', 'key'), ('computes', 'key', '='), ('key', '=', '>'), ('=', '>', 'Bob'), ('>', 'Bob', 'computes'), ('Bob', 'computes', 'key'), ('computes', 'key', '='), ('key', '=', '>'), ('=', '>', 'Unit-4'), ('>', 'Unit-4', 'Asymmertic'), ('Unit-4', 'Asymmertic', 'Ciphers'), ('Asymmertic', 'Ciphers', 'Darshan'), ('Ciphers', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Diffie-Hellman'), ('›', 'Diffie-Hellman', 'Key'), ('Diffie-Hellman', 'Key', 'Exchange'), ('Key', 'Exchange', 'Illustration'), ('Exchange', 'Illustration', 'Unit-4'), ('Illustration', 'Unit-4', 'Asymmertic'), ('Unit-4', 'Asymmertic', 'Ciphers'), ('Asymmertic', 'Ciphers', 'Darshan'), ('Ciphers', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Man'), ('›', 'Man', 'middle'), ('Man', 'middle', 'attack'), ('middle', 'attack', 'Suppose'), ('attack', 'Suppose', 'Alice'), ('Suppose', 'Alice', 'Bob'), ('Alice', 'Bob', 'wish'), ('Bob', 'wish', 'exchange'), ('wish', 'exchange', 'keys'), ('exchange', 'keys', ','), ('keys', ',', 'Darth'), (',', 'Darth', 'adversary'), ('Darth', 'adversary', '.')]

>> POS Tags are: 
 [('User', 'IN'), ('A', 'NNP'), ('selects', 'NNS'), ('random', 'JJ'), ('integer', 'JJ'), ('calculates', 'NNS'), ('Unit-4', 'NNP'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Diffie-Hellman', 'NNP'), ('Key', 'NNP'), ('Exchange', 'NNP'), ('–', 'NNP'), ('Cont…', 'NNP'), ('Global', 'NNP'), ('Public', 'NNP'), ('Elements', 'NNP'), ('prime', 'JJ'), ('number', 'NN'), ('<', 'NNP'), ('primitive', 'JJ'), ('root', 'NN'), ('User', 'NNP'), ('A', 'NNP'), ('Key', 'NNP'), ('Generation', 'NNP'), ('Select', 'NNP'), ('private', 'JJ'), ('Calculate', 'NNP'), ('public', 'NN'), ('User', 'NNP'), ('B', 'NNP'), ('Key', 'NNP'), ('Generation', 'NNP'), ('Select', 'NNP'), ('private', 'JJ'), ('Calculate', 'NNP'), ('public', 'JJ'), ('Unit-4', 'NNP'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Diffie-Hellman', 'NNP'), ('Key', 'NNP'), ('Exchange', 'NNP'), ('–', 'NNP'), ('Cont…', 'NNP'), ('User', 'NNP'), ('A', 'NNP'), ('Key', 'NNP'), ('Generation', 'NNP'), ('Select', 'NNP'), ('private', 'JJ'), ('Calculate', 'NNP'), ('public', 'NN'), ('User', 'NNP'), ('B', 'NNP'), ('Key', 'NNP'), ('Generation', 'NNP'), ('Select', 'NNP'), ('private', 'JJ'), ('Calculate', 'NNP'), ('public', 'JJ'), ('Calculation', 'NNP'), ('Secret', 'NNP'), ('Key', 'NNP'), ('User', 'NNP'), ('A', 'NNP'), ('Calculation', 'NNP'), ('Secret', 'NNP'), ('Key', 'NNP'), ('User', 'NNP'), ('b', 'VBD'), ('Unit-4', 'NNP'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Diffie-Hellman', 'NNP'), ('Key', 'NNP'), ('Exchange', 'NNP'), ('–', 'NNP'), ('Cont…', 'NNP'), ('User', 'NNP'), ('A', 'NNP'), ('Key', 'NNP'), ('Generation', 'NNP'), ('Private', 'NNP'), (',', ','), ('Public', 'NNP'), ('User', 'NNP'), ('B', 'NNP'), ('Key', 'NNP'), ('Generation', 'NNP'), ('Private', 'NNP'), (',', ','), ('Public', 'NNP'), ('Secret', 'NNP'), ('Key', 'NNP'), ('User', 'NNP'), ('A', 'NNP'), (':', ':'), ('Secret', 'JJ'), ('Key', 'NNP'), ('User', 'NNP'), ('B', 'NNP'), (':', ':'), ('Unit-4', 'JJ'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Diffie-Hellman', 'NNP'), ('Key', 'NNP'), ('Exchange', 'NNP'), ('Example', 'NNP'), ('Alice', 'NNP'), ('bob', 'NN'), ('agrees', 'VBZ'), ('prime', 'JJ'), ('number', 'NN'), ('primitive', 'JJ'), ('root', 'NN'), ('Alice', 'NNP'), ('selects', 'VBZ'), ('private', 'JJ'), ('integer', 'NN'), ('Alice', 'NNP'), ('computes', 'VBZ'), ('=', 'NNP'), ('>', 'NNP'), ('Bob', 'NNP'), ('selects', 'VBZ'), ('private', 'JJ'), ('integer', 'NN'), ('Bob', 'NNP'), ('computes', 'VBZ'), ('=', 'NNP'), ('>', 'NNP'), ('Alice', 'NNP'), ('sends', 'VBZ'), ('Bob', 'NNP'), ('Bob', 'NNP'), ('sends', 'VBZ'), ('Alice', 'NNP'), ('Alice', 'NNP'), ('computes', 'VBZ'), ('key', 'JJ'), ('=', 'NNP'), ('>', 'NNP'), ('Bob', 'NNP'), ('computes', 'VBZ'), ('key', 'JJ'), ('=', 'NNP'), ('>', 'NNP'), ('Unit-4', 'NNP'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Diffie-Hellman', 'NNP'), ('Key', 'NNP'), ('Exchange', 'NNP'), ('Illustration', 'NNP'), ('Unit-4', 'NNP'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Man', 'NNP'), ('middle', 'VBZ'), ('attack', 'RP'), ('Suppose', 'NNP'), ('Alice', 'NNP'), ('Bob', 'NNP'), ('wish', 'JJ'), ('exchange', 'NN'), ('keys', 'NNS'), (',', ','), ('Darth', 'NNP'), ('adversary', 'NN'), ('.', '.')]

 (S
  User/IN
  (NP A/NNP selects/NNS)
  (NP
    random/JJ
    integer/JJ
    calculates/NNS
    Unit-4/NNP
    Asymmertic/NNP
    Ciphers/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP
    ›/NNP
    Diffie-Hellman/NNP
    Key/NNP
    Exchange/NNP
    –/NNP
    Cont…/NNP
    Global/NNP
    Public/NNP
    Elements/NNP)
  (NP prime/JJ number/NN </NNP)
  (NP
    primitive/JJ
    root/NN
    User/NNP
    A/NNP
    Key/NNP
    Generation/NNP
    Select/NNP)
  (NP
    private/JJ
    Calculate/NNP
    public/NN
    User/NNP
    B/NNP
    Key/NNP
    Generation/NNP
    Select/NNP)
  (NP private/JJ Calculate/NNP)
  (NP
    public/JJ
    Unit-4/NNP
    Asymmertic/NNP
    Ciphers/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP
    ›/NNP
    Diffie-Hellman/NNP
    Key/NNP
    Exchange/NNP
    –/NNP
    Cont…/NNP
    User/NNP
    A/NNP
    Key/NNP
    Generation/NNP
    Select/NNP)
  (NP
    private/JJ
    Calculate/NNP
    public/NN
    User/NNP
    B/NNP
    Key/NNP
    Generation/NNP
    Select/NNP)
  (NP private/JJ Calculate/NNP)
  (NP
    public/JJ
    Calculation/NNP
    Secret/NNP
    Key/NNP
    User/NNP
    A/NNP
    Calculation/NNP
    Secret/NNP
    Key/NNP
    User/NNP)
  b/VBD
  (NP
    Unit-4/NNP
    Asymmertic/NNP
    Ciphers/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP
    ›/NNP
    Diffie-Hellman/NNP
    Key/NNP
    Exchange/NNP
    –/NNP
    Cont…/NNP
    User/NNP
    A/NNP
    Key/NNP
    Generation/NNP
    Private/NNP)
  ,/,
  (NP Public/NNP User/NNP B/NNP Key/NNP Generation/NNP Private/NNP)
  ,/,
  (NP Public/NNP Secret/NNP Key/NNP User/NNP A/NNP)
  :/:
  (NP Secret/JJ Key/NNP User/NNP B/NNP)
  :/:
  (NP
    Unit-4/JJ
    Asymmertic/NNP
    Ciphers/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP
    ›/NNP
    Diffie-Hellman/NNP
    Key/NNP
    Exchange/NNP
    Example/NNP
    Alice/NNP
    bob/NN)
  agrees/VBZ
  (NP prime/JJ number/NN)
  (NP primitive/JJ root/NN Alice/NNP)
  selects/VBZ
  (NP private/JJ integer/NN Alice/NNP)
  computes/VBZ
  (NP =/NNP >/NNP Bob/NNP)
  selects/VBZ
  (NP private/JJ integer/NN Bob/NNP)
  computes/VBZ
  (NP =/NNP >/NNP Alice/NNP)
  sends/VBZ
  (NP Bob/NNP Bob/NNP)
  sends/VBZ
  (NP Alice/NNP Alice/NNP)
  computes/VBZ
  (NP key/JJ =/NNP >/NNP Bob/NNP)
  computes/VBZ
  (NP
    key/JJ
    =/NNP
    >/NNP
    Unit-4/NNP
    Asymmertic/NNP
    Ciphers/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP
    ›/NNP
    Diffie-Hellman/NNP
    Key/NNP
    Exchange/NNP
    Illustration/NNP
    Unit-4/NNP
    Asymmertic/NNP
    Ciphers/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NNP Man/NNP)
  middle/VBZ
  attack/RP
  (NP Suppose/NNP Alice/NNP Bob/NNP)
  (NP wish/JJ exchange/NN keys/NNS)
  ,/,
  (NP Darth/NNP adversary/NN)
  ./.) 


>> Noun Phrases are: 
 ['A selects', 'random integer calculates Unit-4 Asymmertic Ciphers Darshan Institute Engineering', 'Technology ‹', '› Diffie-Hellman Key Exchange – Cont… Global Public Elements', 'prime number <', 'primitive root User A Key Generation Select', 'private Calculate public User B Key Generation Select', 'private Calculate', 'public Unit-4 Asymmertic Ciphers Darshan Institute Engineering', 'Technology ‹', '› Diffie-Hellman Key Exchange – Cont… User A Key Generation Select', 'private Calculate public User B Key Generation Select', 'private Calculate', 'public Calculation Secret Key User A Calculation Secret Key User', 'Unit-4 Asymmertic Ciphers Darshan Institute Engineering', 'Technology ‹', '› Diffie-Hellman Key Exchange – Cont… User A Key Generation Private', 'Public User B Key Generation Private', 'Public Secret Key User A', 'Secret Key User B', 'Unit-4 Asymmertic Ciphers Darshan Institute Engineering', 'Technology ‹', '› Diffie-Hellman Key Exchange Example Alice bob', 'prime number', 'primitive root Alice', 'private integer Alice', '= > Bob', 'private integer Bob', '= > Alice', 'Bob Bob', 'Alice Alice', 'key = > Bob', 'key = > Unit-4 Asymmertic Ciphers Darshan Institute Engineering', 'Technology ‹', '› Diffie-Hellman Key Exchange Illustration Unit-4 Asymmertic Ciphers Darshan Institute Engineering', 'Technology ‹', '› Man', 'Suppose Alice Bob', 'wish exchange keys', 'Darth adversary']

>> Named Entities are: 
 [('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'User A Key'), ('ORGANIZATION', 'Calculate'), ('PERSON', 'User B Key'), ('ORGANIZATION', 'Calculate'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('ORGANIZATION', 'Calculate'), ('PERSON', 'User B Key'), ('ORGANIZATION', 'Calculate'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Public User'), ('PERSON', 'Public Secret Key User'), ('ORGANIZATION', 'Secret Key User'), ('ORGANIZATION', 'Asymmertic Ciphers Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Bob'), ('PERSON', 'Bob'), ('PERSON', 'Bob Bob'), ('PERSON', 'Alice Alice'), ('PERSON', 'Bob'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Suppose Alice Bob'), ('GPE', 'Darth')] 

>> Stemming using Porter Stemmer: 
 [('User', 'user'), ('A', 'a'), ('selects', 'select'), ('random', 'random'), ('integer', 'integ'), ('calculates', 'calcul'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Diffie-Hellman', 'diffie-hellman'), ('Key', 'key'), ('Exchange', 'exchang'), ('–', '–'), ('Cont…', 'cont…'), ('Global', 'global'), ('Public', 'public'), ('Elements', 'element'), ('prime', 'prime'), ('number', 'number'), ('<', '<'), ('primitive', 'primit'), ('root', 'root'), ('User', 'user'), ('A', 'a'), ('Key', 'key'), ('Generation', 'gener'), ('Select', 'select'), ('private', 'privat'), ('Calculate', 'calcul'), ('public', 'public'), ('User', 'user'), ('B', 'b'), ('Key', 'key'), ('Generation', 'gener'), ('Select', 'select'), ('private', 'privat'), ('Calculate', 'calcul'), ('public', 'public'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Diffie-Hellman', 'diffie-hellman'), ('Key', 'key'), ('Exchange', 'exchang'), ('–', '–'), ('Cont…', 'cont…'), ('User', 'user'), ('A', 'a'), ('Key', 'key'), ('Generation', 'gener'), ('Select', 'select'), ('private', 'privat'), ('Calculate', 'calcul'), ('public', 'public'), ('User', 'user'), ('B', 'b'), ('Key', 'key'), ('Generation', 'gener'), ('Select', 'select'), ('private', 'privat'), ('Calculate', 'calcul'), ('public', 'public'), ('Calculation', 'calcul'), ('Secret', 'secret'), ('Key', 'key'), ('User', 'user'), ('A', 'a'), ('Calculation', 'calcul'), ('Secret', 'secret'), ('Key', 'key'), ('User', 'user'), ('b', 'b'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Diffie-Hellman', 'diffie-hellman'), ('Key', 'key'), ('Exchange', 'exchang'), ('–', '–'), ('Cont…', 'cont…'), ('User', 'user'), ('A', 'a'), ('Key', 'key'), ('Generation', 'gener'), ('Private', 'privat'), (',', ','), ('Public', 'public'), ('User', 'user'), ('B', 'b'), ('Key', 'key'), ('Generation', 'gener'), ('Private', 'privat'), (',', ','), ('Public', 'public'), ('Secret', 'secret'), ('Key', 'key'), ('User', 'user'), ('A', 'a'), (':', ':'), ('Secret', 'secret'), ('Key', 'key'), ('User', 'user'), ('B', 'b'), (':', ':'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Diffie-Hellman', 'diffie-hellman'), ('Key', 'key'), ('Exchange', 'exchang'), ('Example', 'exampl'), ('Alice', 'alic'), ('bob', 'bob'), ('agrees', 'agre'), ('prime', 'prime'), ('number', 'number'), ('primitive', 'primit'), ('root', 'root'), ('Alice', 'alic'), ('selects', 'select'), ('private', 'privat'), ('integer', 'integ'), ('Alice', 'alic'), ('computes', 'comput'), ('=', '='), ('>', '>'), ('Bob', 'bob'), ('selects', 'select'), ('private', 'privat'), ('integer', 'integ'), ('Bob', 'bob'), ('computes', 'comput'), ('=', '='), ('>', '>'), ('Alice', 'alic'), ('sends', 'send'), ('Bob', 'bob'), ('Bob', 'bob'), ('sends', 'send'), ('Alice', 'alic'), ('Alice', 'alic'), ('computes', 'comput'), ('key', 'key'), ('=', '='), ('>', '>'), ('Bob', 'bob'), ('computes', 'comput'), ('key', 'key'), ('=', '='), ('>', '>'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Diffie-Hellman', 'diffie-hellman'), ('Key', 'key'), ('Exchange', 'exchang'), ('Illustration', 'illustr'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Man', 'man'), ('middle', 'middl'), ('attack', 'attack'), ('Suppose', 'suppos'), ('Alice', 'alic'), ('Bob', 'bob'), ('wish', 'wish'), ('exchange', 'exchang'), ('keys', 'key'), (',', ','), ('Darth', 'darth'), ('adversary', 'adversari'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('User', 'user'), ('A', 'a'), ('selects', 'select'), ('random', 'random'), ('integer', 'integ'), ('calculates', 'calcul'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Diffie-Hellman', 'diffie-hellman'), ('Key', 'key'), ('Exchange', 'exchang'), ('–', '–'), ('Cont…', 'cont…'), ('Global', 'global'), ('Public', 'public'), ('Elements', 'element'), ('prime', 'prime'), ('number', 'number'), ('<', '<'), ('primitive', 'primit'), ('root', 'root'), ('User', 'user'), ('A', 'a'), ('Key', 'key'), ('Generation', 'generat'), ('Select', 'select'), ('private', 'privat'), ('Calculate', 'calcul'), ('public', 'public'), ('User', 'user'), ('B', 'b'), ('Key', 'key'), ('Generation', 'generat'), ('Select', 'select'), ('private', 'privat'), ('Calculate', 'calcul'), ('public', 'public'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Diffie-Hellman', 'diffie-hellman'), ('Key', 'key'), ('Exchange', 'exchang'), ('–', '–'), ('Cont…', 'cont…'), ('User', 'user'), ('A', 'a'), ('Key', 'key'), ('Generation', 'generat'), ('Select', 'select'), ('private', 'privat'), ('Calculate', 'calcul'), ('public', 'public'), ('User', 'user'), ('B', 'b'), ('Key', 'key'), ('Generation', 'generat'), ('Select', 'select'), ('private', 'privat'), ('Calculate', 'calcul'), ('public', 'public'), ('Calculation', 'calcul'), ('Secret', 'secret'), ('Key', 'key'), ('User', 'user'), ('A', 'a'), ('Calculation', 'calcul'), ('Secret', 'secret'), ('Key', 'key'), ('User', 'user'), ('b', 'b'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Diffie-Hellman', 'diffie-hellman'), ('Key', 'key'), ('Exchange', 'exchang'), ('–', '–'), ('Cont…', 'cont…'), ('User', 'user'), ('A', 'a'), ('Key', 'key'), ('Generation', 'generat'), ('Private', 'privat'), (',', ','), ('Public', 'public'), ('User', 'user'), ('B', 'b'), ('Key', 'key'), ('Generation', 'generat'), ('Private', 'privat'), (',', ','), ('Public', 'public'), ('Secret', 'secret'), ('Key', 'key'), ('User', 'user'), ('A', 'a'), (':', ':'), ('Secret', 'secret'), ('Key', 'key'), ('User', 'user'), ('B', 'b'), (':', ':'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Diffie-Hellman', 'diffie-hellman'), ('Key', 'key'), ('Exchange', 'exchang'), ('Example', 'exampl'), ('Alice', 'alic'), ('bob', 'bob'), ('agrees', 'agre'), ('prime', 'prime'), ('number', 'number'), ('primitive', 'primit'), ('root', 'root'), ('Alice', 'alic'), ('selects', 'select'), ('private', 'privat'), ('integer', 'integ'), ('Alice', 'alic'), ('computes', 'comput'), ('=', '='), ('>', '>'), ('Bob', 'bob'), ('selects', 'select'), ('private', 'privat'), ('integer', 'integ'), ('Bob', 'bob'), ('computes', 'comput'), ('=', '='), ('>', '>'), ('Alice', 'alic'), ('sends', 'send'), ('Bob', 'bob'), ('Bob', 'bob'), ('sends', 'send'), ('Alice', 'alic'), ('Alice', 'alic'), ('computes', 'comput'), ('key', 'key'), ('=', '='), ('>', '>'), ('Bob', 'bob'), ('computes', 'comput'), ('key', 'key'), ('=', '='), ('>', '>'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Diffie-Hellman', 'diffie-hellman'), ('Key', 'key'), ('Exchange', 'exchang'), ('Illustration', 'illustr'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Man', 'man'), ('middle', 'middl'), ('attack', 'attack'), ('Suppose', 'suppos'), ('Alice', 'alic'), ('Bob', 'bob'), ('wish', 'wish'), ('exchange', 'exchang'), ('keys', 'key'), (',', ','), ('Darth', 'darth'), ('adversary', 'adversari'), ('.', '.')]

>> Lemmatization: 
 [('User', 'User'), ('A', 'A'), ('selects', 'selects'), ('random', 'random'), ('integer', 'integer'), ('calculates', 'calculates'), ('Unit-4', 'Unit-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Diffie-Hellman', 'Diffie-Hellman'), ('Key', 'Key'), ('Exchange', 'Exchange'), ('–', '–'), ('Cont…', 'Cont…'), ('Global', 'Global'), ('Public', 'Public'), ('Elements', 'Elements'), ('prime', 'prime'), ('number', 'number'), ('<', '<'), ('primitive', 'primitive'), ('root', 'root'), ('User', 'User'), ('A', 'A'), ('Key', 'Key'), ('Generation', 'Generation'), ('Select', 'Select'), ('private', 'private'), ('Calculate', 'Calculate'), ('public', 'public'), ('User', 'User'), ('B', 'B'), ('Key', 'Key'), ('Generation', 'Generation'), ('Select', 'Select'), ('private', 'private'), ('Calculate', 'Calculate'), ('public', 'public'), ('Unit-4', 'Unit-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Diffie-Hellman', 'Diffie-Hellman'), ('Key', 'Key'), ('Exchange', 'Exchange'), ('–', '–'), ('Cont…', 'Cont…'), ('User', 'User'), ('A', 'A'), ('Key', 'Key'), ('Generation', 'Generation'), ('Select', 'Select'), ('private', 'private'), ('Calculate', 'Calculate'), ('public', 'public'), ('User', 'User'), ('B', 'B'), ('Key', 'Key'), ('Generation', 'Generation'), ('Select', 'Select'), ('private', 'private'), ('Calculate', 'Calculate'), ('public', 'public'), ('Calculation', 'Calculation'), ('Secret', 'Secret'), ('Key', 'Key'), ('User', 'User'), ('A', 'A'), ('Calculation', 'Calculation'), ('Secret', 'Secret'), ('Key', 'Key'), ('User', 'User'), ('b', 'b'), ('Unit-4', 'Unit-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Diffie-Hellman', 'Diffie-Hellman'), ('Key', 'Key'), ('Exchange', 'Exchange'), ('–', '–'), ('Cont…', 'Cont…'), ('User', 'User'), ('A', 'A'), ('Key', 'Key'), ('Generation', 'Generation'), ('Private', 'Private'), (',', ','), ('Public', 'Public'), ('User', 'User'), ('B', 'B'), ('Key', 'Key'), ('Generation', 'Generation'), ('Private', 'Private'), (',', ','), ('Public', 'Public'), ('Secret', 'Secret'), ('Key', 'Key'), ('User', 'User'), ('A', 'A'), (':', ':'), ('Secret', 'Secret'), ('Key', 'Key'), ('User', 'User'), ('B', 'B'), (':', ':'), ('Unit-4', 'Unit-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Diffie-Hellman', 'Diffie-Hellman'), ('Key', 'Key'), ('Exchange', 'Exchange'), ('Example', 'Example'), ('Alice', 'Alice'), ('bob', 'bob'), ('agrees', 'agrees'), ('prime', 'prime'), ('number', 'number'), ('primitive', 'primitive'), ('root', 'root'), ('Alice', 'Alice'), ('selects', 'selects'), ('private', 'private'), ('integer', 'integer'), ('Alice', 'Alice'), ('computes', 'computes'), ('=', '='), ('>', '>'), ('Bob', 'Bob'), ('selects', 'selects'), ('private', 'private'), ('integer', 'integer'), ('Bob', 'Bob'), ('computes', 'computes'), ('=', '='), ('>', '>'), ('Alice', 'Alice'), ('sends', 'sends'), ('Bob', 'Bob'), ('Bob', 'Bob'), ('sends', 'sends'), ('Alice', 'Alice'), ('Alice', 'Alice'), ('computes', 'computes'), ('key', 'key'), ('=', '='), ('>', '>'), ('Bob', 'Bob'), ('computes', 'computes'), ('key', 'key'), ('=', '='), ('>', '>'), ('Unit-4', 'Unit-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Diffie-Hellman', 'Diffie-Hellman'), ('Key', 'Key'), ('Exchange', 'Exchange'), ('Illustration', 'Illustration'), ('Unit-4', 'Unit-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Man', 'Man'), ('middle', 'middle'), ('attack', 'attack'), ('Suppose', 'Suppose'), ('Alice', 'Alice'), ('Bob', 'Bob'), ('wish', 'wish'), ('exchange', 'exchange'), ('keys', 'key'), (',', ','), ('Darth', 'Darth'), ('adversary', 'adversary'), ('.', '.')]



============================ Sentence 31 =============================

Darth prepares for the attack by generating two random private keys XD1 and XD2 and then computes corresponding public keys YD1 and YD2. 


>> Tokens are: 
 ['Darth', 'prepares', 'attack', 'generating', 'two', 'random', 'private', 'keys', 'XD1', 'XD2', 'computes', 'corresponding', 'public', 'keys', 'YD1', 'YD2', '.']

>> Bigrams are: 
 [('Darth', 'prepares'), ('prepares', 'attack'), ('attack', 'generating'), ('generating', 'two'), ('two', 'random'), ('random', 'private'), ('private', 'keys'), ('keys', 'XD1'), ('XD1', 'XD2'), ('XD2', 'computes'), ('computes', 'corresponding'), ('corresponding', 'public'), ('public', 'keys'), ('keys', 'YD1'), ('YD1', 'YD2'), ('YD2', '.')]

>> Trigrams are: 
 [('Darth', 'prepares', 'attack'), ('prepares', 'attack', 'generating'), ('attack', 'generating', 'two'), ('generating', 'two', 'random'), ('two', 'random', 'private'), ('random', 'private', 'keys'), ('private', 'keys', 'XD1'), ('keys', 'XD1', 'XD2'), ('XD1', 'XD2', 'computes'), ('XD2', 'computes', 'corresponding'), ('computes', 'corresponding', 'public'), ('corresponding', 'public', 'keys'), ('public', 'keys', 'YD1'), ('keys', 'YD1', 'YD2'), ('YD1', 'YD2', '.')]

>> POS Tags are: 
 [('Darth', 'NNP'), ('prepares', 'VBZ'), ('attack', 'RP'), ('generating', 'VBG'), ('two', 'CD'), ('random', 'JJ'), ('private', 'JJ'), ('keys', 'NNS'), ('XD1', 'VBP'), ('XD2', 'NNP'), ('computes', 'NNS'), ('corresponding', 'VBG'), ('public', 'JJ'), ('keys', 'NNS'), ('YD1', 'NNP'), ('YD2', 'NNP'), ('.', '.')]

 (S
  (NP Darth/NNP)
  prepares/VBZ
  attack/RP
  generating/VBG
  two/CD
  (NP random/JJ private/JJ keys/NNS)
  XD1/VBP
  (NP XD2/NNP computes/NNS)
  corresponding/VBG
  (NP public/JJ keys/NNS YD1/NNP YD2/NNP)
  ./.) 


>> Noun Phrases are: 
 ['Darth', 'random private keys', 'XD2 computes', 'public keys YD1 YD2']

>> Named Entities are: 
 [('GPE', 'Darth'), ('ORGANIZATION', 'XD2'), ('ORGANIZATION', 'YD1')] 

>> Stemming using Porter Stemmer: 
 [('Darth', 'darth'), ('prepares', 'prepar'), ('attack', 'attack'), ('generating', 'gener'), ('two', 'two'), ('random', 'random'), ('private', 'privat'), ('keys', 'key'), ('XD1', 'xd1'), ('XD2', 'xd2'), ('computes', 'comput'), ('corresponding', 'correspond'), ('public', 'public'), ('keys', 'key'), ('YD1', 'yd1'), ('YD2', 'yd2'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Darth', 'darth'), ('prepares', 'prepar'), ('attack', 'attack'), ('generating', 'generat'), ('two', 'two'), ('random', 'random'), ('private', 'privat'), ('keys', 'key'), ('XD1', 'xd1'), ('XD2', 'xd2'), ('computes', 'comput'), ('corresponding', 'correspond'), ('public', 'public'), ('keys', 'key'), ('YD1', 'yd1'), ('YD2', 'yd2'), ('.', '.')]

>> Lemmatization: 
 [('Darth', 'Darth'), ('prepares', 'prepares'), ('attack', 'attack'), ('generating', 'generating'), ('two', 'two'), ('random', 'random'), ('private', 'private'), ('keys', 'key'), ('XD1', 'XD1'), ('XD2', 'XD2'), ('computes', 'computes'), ('corresponding', 'corresponding'), ('public', 'public'), ('keys', 'key'), ('YD1', 'YD1'), ('YD2', 'YD2'), ('.', '.')]



============================ Sentence 32 =============================

Alice transmits YA to Bob. 


>> Tokens are: 
 ['Alice', 'transmits', 'YA', 'Bob', '.']

>> Bigrams are: 
 [('Alice', 'transmits'), ('transmits', 'YA'), ('YA', 'Bob'), ('Bob', '.')]

>> Trigrams are: 
 [('Alice', 'transmits', 'YA'), ('transmits', 'YA', 'Bob'), ('YA', 'Bob', '.')]

>> POS Tags are: 
 [('Alice', 'NNP'), ('transmits', 'NNS'), ('YA', 'NNP'), ('Bob', 'NNP'), ('.', '.')]

 (S (NP Alice/NNP transmits/NNS YA/NNP Bob/NNP) ./.) 


>> Noun Phrases are: 
 ['Alice transmits YA Bob']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Alice', 'alic'), ('transmits', 'transmit'), ('YA', 'ya'), ('Bob', 'bob'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Alice', 'alic'), ('transmits', 'transmit'), ('YA', 'ya'), ('Bob', 'bob'), ('.', '.')]

>> Lemmatization: 
 [('Alice', 'Alice'), ('transmits', 'transmits'), ('YA', 'YA'), ('Bob', 'Bob'), ('.', '.')]



============================ Sentence 33 =============================

Darth intercepts YA and transmits YD1 to Bob. 


>> Tokens are: 
 ['Darth', 'intercepts', 'YA', 'transmits', 'YD1', 'Bob', '.']

>> Bigrams are: 
 [('Darth', 'intercepts'), ('intercepts', 'YA'), ('YA', 'transmits'), ('transmits', 'YD1'), ('YD1', 'Bob'), ('Bob', '.')]

>> Trigrams are: 
 [('Darth', 'intercepts', 'YA'), ('intercepts', 'YA', 'transmits'), ('YA', 'transmits', 'YD1'), ('transmits', 'YD1', 'Bob'), ('YD1', 'Bob', '.')]

>> POS Tags are: 
 [('Darth', 'NNP'), ('intercepts', 'NNS'), ('YA', 'NNP'), ('transmits', 'NNS'), ('YD1', 'NNP'), ('Bob', 'NNP'), ('.', '.')]

 (S
  (NP Darth/NNP intercepts/NNS YA/NNP transmits/NNS YD1/NNP Bob/NNP)
  ./.) 


>> Noun Phrases are: 
 ['Darth intercepts YA transmits YD1 Bob']

>> Named Entities are: 
 [('GPE', 'Darth'), ('ORGANIZATION', 'YD1 Bob')] 

>> Stemming using Porter Stemmer: 
 [('Darth', 'darth'), ('intercepts', 'intercept'), ('YA', 'ya'), ('transmits', 'transmit'), ('YD1', 'yd1'), ('Bob', 'bob'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Darth', 'darth'), ('intercepts', 'intercept'), ('YA', 'ya'), ('transmits', 'transmit'), ('YD1', 'yd1'), ('Bob', 'bob'), ('.', '.')]

>> Lemmatization: 
 [('Darth', 'Darth'), ('intercepts', 'intercept'), ('YA', 'YA'), ('transmits', 'transmits'), ('YD1', 'YD1'), ('Bob', 'Bob'), ('.', '.')]



============================ Sentence 34 =============================

Darth also calculates K2=(YA)XD2 mod q. 


>> Tokens are: 
 ['Darth', 'also', 'calculates', 'K2=', '(', 'YA', ')', 'XD2', 'mod', 'q', '.']

>> Bigrams are: 
 [('Darth', 'also'), ('also', 'calculates'), ('calculates', 'K2='), ('K2=', '('), ('(', 'YA'), ('YA', ')'), (')', 'XD2'), ('XD2', 'mod'), ('mod', 'q'), ('q', '.')]

>> Trigrams are: 
 [('Darth', 'also', 'calculates'), ('also', 'calculates', 'K2='), ('calculates', 'K2=', '('), ('K2=', '(', 'YA'), ('(', 'YA', ')'), ('YA', ')', 'XD2'), (')', 'XD2', 'mod'), ('XD2', 'mod', 'q'), ('mod', 'q', '.')]

>> POS Tags are: 
 [('Darth', 'NNP'), ('also', 'RB'), ('calculates', 'VBZ'), ('K2=', 'NNP'), ('(', '('), ('YA', 'NNP'), (')', ')'), ('XD2', 'NNP'), ('mod', 'NN'), ('q', 'NN'), ('.', '.')]

 (S
  (NP Darth/NNP)
  also/RB
  calculates/VBZ
  (NP K2=/NNP)
  (/(
  (NP YA/NNP)
  )/)
  (NP XD2/NNP mod/NN q/NN)
  ./.) 


>> Noun Phrases are: 
 ['Darth', 'K2=', 'YA', 'XD2 mod q']

>> Named Entities are: 
 [('PERSON', 'Darth'), ('ORGANIZATION', 'XD2')] 

>> Stemming using Porter Stemmer: 
 [('Darth', 'darth'), ('also', 'also'), ('calculates', 'calcul'), ('K2=', 'k2='), ('(', '('), ('YA', 'ya'), (')', ')'), ('XD2', 'xd2'), ('mod', 'mod'), ('q', 'q'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Darth', 'darth'), ('also', 'also'), ('calculates', 'calcul'), ('K2=', 'k2='), ('(', '('), ('YA', 'ya'), (')', ')'), ('XD2', 'xd2'), ('mod', 'mod'), ('q', 'q'), ('.', '.')]

>> Lemmatization: 
 [('Darth', 'Darth'), ('also', 'also'), ('calculates', 'calculates'), ('K2=', 'K2='), ('(', '('), ('YA', 'YA'), (')', ')'), ('XD2', 'XD2'), ('mod', 'mod'), ('q', 'q'), ('.', '.')]



============================ Sentence 35 =============================

Bob receives YD1 and calculates K1 =  (YD1)XB mod q. 


>> Tokens are: 
 ['Bob', 'receives', 'YD1', 'calculates', 'K1', '=', '(', 'YD1', ')', 'XB', 'mod', 'q', '.']

>> Bigrams are: 
 [('Bob', 'receives'), ('receives', 'YD1'), ('YD1', 'calculates'), ('calculates', 'K1'), ('K1', '='), ('=', '('), ('(', 'YD1'), ('YD1', ')'), (')', 'XB'), ('XB', 'mod'), ('mod', 'q'), ('q', '.')]

>> Trigrams are: 
 [('Bob', 'receives', 'YD1'), ('receives', 'YD1', 'calculates'), ('YD1', 'calculates', 'K1'), ('calculates', 'K1', '='), ('K1', '=', '('), ('=', '(', 'YD1'), ('(', 'YD1', ')'), ('YD1', ')', 'XB'), (')', 'XB', 'mod'), ('XB', 'mod', 'q'), ('mod', 'q', '.')]

>> POS Tags are: 
 [('Bob', 'NNP'), ('receives', 'VBZ'), ('YD1', 'NNP'), ('calculates', 'NNS'), ('K1', 'NNP'), ('=', 'NNP'), ('(', '('), ('YD1', 'NNP'), (')', ')'), ('XB', 'NNP'), ('mod', 'NN'), ('q', 'NN'), ('.', '.')]

 (S
  (NP Bob/NNP)
  receives/VBZ
  (NP YD1/NNP calculates/NNS K1/NNP =/NNP)
  (/(
  (NP YD1/NNP)
  )/)
  (NP XB/NNP mod/NN q/NN)
  ./.) 


>> Noun Phrases are: 
 ['Bob', 'YD1 calculates K1 =', 'YD1', 'XB mod q']

>> Named Entities are: 
 [('PERSON', 'Bob'), ('ORGANIZATION', 'YD1'), ('ORGANIZATION', 'YD1')] 

>> Stemming using Porter Stemmer: 
 [('Bob', 'bob'), ('receives', 'receiv'), ('YD1', 'yd1'), ('calculates', 'calcul'), ('K1', 'k1'), ('=', '='), ('(', '('), ('YD1', 'yd1'), (')', ')'), ('XB', 'xb'), ('mod', 'mod'), ('q', 'q'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Bob', 'bob'), ('receives', 'receiv'), ('YD1', 'yd1'), ('calculates', 'calcul'), ('K1', 'k1'), ('=', '='), ('(', '('), ('YD1', 'yd1'), (')', ')'), ('XB', 'xb'), ('mod', 'mod'), ('q', 'q'), ('.', '.')]

>> Lemmatization: 
 [('Bob', 'Bob'), ('receives', 'receives'), ('YD1', 'YD1'), ('calculates', 'calculates'), ('K1', 'K1'), ('=', '='), ('(', '('), ('YD1', 'YD1'), (')', ')'), ('XB', 'XB'), ('mod', 'mod'), ('q', 'q'), ('.', '.')]



============================ Sentence 36 =============================

Bob transmits YB to Alice. 


>> Tokens are: 
 ['Bob', 'transmits', 'YB', 'Alice', '.']

>> Bigrams are: 
 [('Bob', 'transmits'), ('transmits', 'YB'), ('YB', 'Alice'), ('Alice', '.')]

>> Trigrams are: 
 [('Bob', 'transmits', 'YB'), ('transmits', 'YB', 'Alice'), ('YB', 'Alice', '.')]

>> POS Tags are: 
 [('Bob', 'NNP'), ('transmits', 'VBZ'), ('YB', 'NNP'), ('Alice', 'NNP'), ('.', '.')]

 (S (NP Bob/NNP) transmits/VBZ (NP YB/NNP Alice/NNP) ./.) 


>> Noun Phrases are: 
 ['Bob', 'YB Alice']

>> Named Entities are: 
 [('PERSON', 'Bob'), ('ORGANIZATION', 'YB Alice')] 

>> Stemming using Porter Stemmer: 
 [('Bob', 'bob'), ('transmits', 'transmit'), ('YB', 'yb'), ('Alice', 'alic'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Bob', 'bob'), ('transmits', 'transmit'), ('YB', 'yb'), ('Alice', 'alic'), ('.', '.')]

>> Lemmatization: 
 [('Bob', 'Bob'), ('transmits', 'transmits'), ('YB', 'YB'), ('Alice', 'Alice'), ('.', '.')]



============================ Sentence 37 =============================

Darth intercepts YB and transmits YD2 to Alice. 


>> Tokens are: 
 ['Darth', 'intercepts', 'YB', 'transmits', 'YD2', 'Alice', '.']

>> Bigrams are: 
 [('Darth', 'intercepts'), ('intercepts', 'YB'), ('YB', 'transmits'), ('transmits', 'YD2'), ('YD2', 'Alice'), ('Alice', '.')]

>> Trigrams are: 
 [('Darth', 'intercepts', 'YB'), ('intercepts', 'YB', 'transmits'), ('YB', 'transmits', 'YD2'), ('transmits', 'YD2', 'Alice'), ('YD2', 'Alice', '.')]

>> POS Tags are: 
 [('Darth', 'NNP'), ('intercepts', 'NNS'), ('YB', 'NNP'), ('transmits', 'NNS'), ('YD2', 'NNP'), ('Alice', 'NNP'), ('.', '.')]

 (S
  (NP
    Darth/NNP
    intercepts/NNS
    YB/NNP
    transmits/NNS
    YD2/NNP
    Alice/NNP)
  ./.) 


>> Noun Phrases are: 
 ['Darth intercepts YB transmits YD2 Alice']

>> Named Entities are: 
 [('GPE', 'Darth'), ('ORGANIZATION', 'YD2 Alice')] 

>> Stemming using Porter Stemmer: 
 [('Darth', 'darth'), ('intercepts', 'intercept'), ('YB', 'yb'), ('transmits', 'transmit'), ('YD2', 'yd2'), ('Alice', 'alic'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Darth', 'darth'), ('intercepts', 'intercept'), ('YB', 'yb'), ('transmits', 'transmit'), ('YD2', 'yd2'), ('Alice', 'alic'), ('.', '.')]

>> Lemmatization: 
 [('Darth', 'Darth'), ('intercepts', 'intercept'), ('YB', 'YB'), ('transmits', 'transmits'), ('YD2', 'YD2'), ('Alice', 'Alice'), ('.', '.')]



============================ Sentence 38 =============================

Darth calculates K1=(YB)XD1 mod q. Alice receives YD2 and calculates K2 = (YD2)XA mod q.   Unit-4 Asymmertic Ciphers                                                       Darshan Institute of Engineering & Technology   ‹#› 


>> Tokens are: 
 ['Darth', 'calculates', 'K1=', '(', 'YB', ')', 'XD1', 'mod', 'q.', 'Alice', 'receives', 'YD2', 'calculates', 'K2', '=', '(', 'YD2', ')', 'XA', 'mod', 'q.', 'Unit-4', 'Asymmertic', 'Ciphers', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', '‹', '#', '›']

>> Bigrams are: 
 [('Darth', 'calculates'), ('calculates', 'K1='), ('K1=', '('), ('(', 'YB'), ('YB', ')'), (')', 'XD1'), ('XD1', 'mod'), ('mod', 'q.'), ('q.', 'Alice'), ('Alice', 'receives'), ('receives', 'YD2'), ('YD2', 'calculates'), ('calculates', 'K2'), ('K2', '='), ('=', '('), ('(', 'YD2'), ('YD2', ')'), (')', 'XA'), ('XA', 'mod'), ('mod', 'q.'), ('q.', 'Unit-4'), ('Unit-4', 'Asymmertic'), ('Asymmertic', 'Ciphers'), ('Ciphers', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', '‹'), ('‹', '#'), ('#', '›')]

>> Trigrams are: 
 [('Darth', 'calculates', 'K1='), ('calculates', 'K1=', '('), ('K1=', '(', 'YB'), ('(', 'YB', ')'), ('YB', ')', 'XD1'), (')', 'XD1', 'mod'), ('XD1', 'mod', 'q.'), ('mod', 'q.', 'Alice'), ('q.', 'Alice', 'receives'), ('Alice', 'receives', 'YD2'), ('receives', 'YD2', 'calculates'), ('YD2', 'calculates', 'K2'), ('calculates', 'K2', '='), ('K2', '=', '('), ('=', '(', 'YD2'), ('(', 'YD2', ')'), ('YD2', ')', 'XA'), (')', 'XA', 'mod'), ('XA', 'mod', 'q.'), ('mod', 'q.', 'Unit-4'), ('q.', 'Unit-4', 'Asymmertic'), ('Unit-4', 'Asymmertic', 'Ciphers'), ('Asymmertic', 'Ciphers', 'Darshan'), ('Ciphers', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', '‹'), ('Technology', '‹', '#'), ('‹', '#', '›')]

>> POS Tags are: 
 [('Darth', 'NNP'), ('calculates', 'VBZ'), ('K1=', 'NNP'), ('(', '('), ('YB', 'NNP'), (')', ')'), ('XD1', 'NNP'), ('mod', 'NN'), ('q.', 'NN'), ('Alice', 'NNP'), ('receives', 'VBZ'), ('YD2', 'NNP'), ('calculates', 'NNS'), ('K2', 'NNP'), ('=', 'NNP'), ('(', '('), ('YD2', 'NNP'), (')', ')'), ('XA', 'NNP'), ('mod', '$'), ('q.', 'JJ'), ('Unit-4', 'NNP'), ('Asymmertic', 'NNP'), ('Ciphers', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NN')]

 (S
  (NP Darth/NNP)
  calculates/VBZ
  (NP K1=/NNP)
  (/(
  (NP YB/NNP)
  )/)
  (NP XD1/NNP mod/NN q./NN Alice/NNP)
  receives/VBZ
  (NP YD2/NNP calculates/NNS K2/NNP =/NNP)
  (/(
  (NP YD2/NNP)
  )/)
  (NP XA/NNP)
  mod/$
  (NP
    q./JJ
    Unit-4/NNP
    Asymmertic/NNP
    Ciphers/NNP
    Darshan/NNP
    Institute/NNP
    Engineering/NNP)
  &/CC
  (NP Technology/NNP ‹/NNP)
  #/#
  (NP ›/NN)) 


>> Noun Phrases are: 
 ['Darth', 'K1=', 'YB', 'XD1 mod q. Alice', 'YD2 calculates K2 =', 'YD2', 'XA', 'q. Unit-4 Asymmertic Ciphers Darshan Institute Engineering', 'Technology ‹', '›']

>> Named Entities are: 
 [('GPE', 'Darth'), ('ORGANIZATION', 'XD1'), ('ORGANIZATION', 'YD2'), ('ORGANIZATION', 'YD2'), ('PERSON', 'Darshan Institute'), ('ORGANIZATION', 'Technology')] 

>> Stemming using Porter Stemmer: 
 [('Darth', 'darth'), ('calculates', 'calcul'), ('K1=', 'k1='), ('(', '('), ('YB', 'yb'), (')', ')'), ('XD1', 'xd1'), ('mod', 'mod'), ('q.', 'q.'), ('Alice', 'alic'), ('receives', 'receiv'), ('YD2', 'yd2'), ('calculates', 'calcul'), ('K2', 'k2'), ('=', '='), ('(', '('), ('YD2', 'yd2'), (')', ')'), ('XA', 'xa'), ('mod', 'mod'), ('q.', 'q.'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›')]

>> Stemming using Snowball Stemmer: 
 [('Darth', 'darth'), ('calculates', 'calcul'), ('K1=', 'k1='), ('(', '('), ('YB', 'yb'), (')', ')'), ('XD1', 'xd1'), ('mod', 'mod'), ('q.', 'q.'), ('Alice', 'alic'), ('receives', 'receiv'), ('YD2', 'yd2'), ('calculates', 'calcul'), ('K2', 'k2'), ('=', '='), ('(', '('), ('YD2', 'yd2'), (')', ')'), ('XA', 'xa'), ('mod', 'mod'), ('q.', 'q.'), ('Unit-4', 'unit-4'), ('Asymmertic', 'asymmert'), ('Ciphers', 'cipher'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), ('‹', '‹'), ('#', '#'), ('›', '›')]

>> Lemmatization: 
 [('Darth', 'Darth'), ('calculates', 'calculates'), ('K1=', 'K1='), ('(', '('), ('YB', 'YB'), (')', ')'), ('XD1', 'XD1'), ('mod', 'mod'), ('q.', 'q.'), ('Alice', 'Alice'), ('receives', 'receives'), ('YD2', 'YD2'), ('calculates', 'calculates'), ('K2', 'K2'), ('=', '='), ('(', '('), ('YD2', 'YD2'), (')', ')'), ('XA', 'XA'), ('mod', 'mod'), ('q.', 'q.'), ('Unit-4', 'Unit-4'), ('Asymmertic', 'Asymmertic'), ('Ciphers', 'Ciphers'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), ('‹', '‹'), ('#', '#'), ('›', '›')]

