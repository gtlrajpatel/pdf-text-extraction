				 *** Text Processing using NLTK *** 


============================ Sentence 1 =============================

PowerPoint Presentation  arjun.bala@darshan.ac.in 9624822202 Computer Engineering Department Prof. Arjun V. Bala Python for Data Science (PDS) (3150713)  Unit-02  Data Science  & Python  Darshan Institute of Engineering & Technology, Rajkot     Looping Outline  Core competencies of a data scientist Creating the Data Science Pipeline Why Python? 


>> Tokens are: 
 ['PowerPoint', 'Presentation', 'arjun.bala', '@', 'darshan.ac.in', '9624822202', 'Computer', 'Engineering', 'Department', 'Prof.', 'Arjun', 'V.', 'Bala', 'Python', 'Data', 'Science', '(', 'PDS', ')', '(', '3150713', ')', 'Unit-02', 'Data', 'Science', '&', 'Python', 'Darshan', 'Institute', 'Engineering', '&', 'Technology', ',', 'Rajkot', '\uf050', 'Looping', 'Outline', 'Core', 'competencies', 'data', 'scientist', 'Creating', 'Data', 'Science', 'Pipeline', 'Why', 'Python', '?']

>> Bigrams are: 
 [('PowerPoint', 'Presentation'), ('Presentation', 'arjun.bala'), ('arjun.bala', '@'), ('@', 'darshan.ac.in'), ('darshan.ac.in', '9624822202'), ('9624822202', 'Computer'), ('Computer', 'Engineering'), ('Engineering', 'Department'), ('Department', 'Prof.'), ('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', 'Python'), ('Python', 'Data'), ('Data', 'Science'), ('Science', '('), ('(', 'PDS'), ('PDS', ')'), (')', '('), ('(', '3150713'), ('3150713', ')'), (')', 'Unit-02'), ('Unit-02', 'Data'), ('Data', 'Science'), ('Science', '&'), ('&', 'Python'), ('Python', 'Darshan'), ('Darshan', 'Institute'), ('Institute', 'Engineering'), ('Engineering', '&'), ('&', 'Technology'), ('Technology', ','), (',', 'Rajkot'), ('Rajkot', '\uf050'), ('\uf050', 'Looping'), ('Looping', 'Outline'), ('Outline', 'Core'), ('Core', 'competencies'), ('competencies', 'data'), ('data', 'scientist'), ('scientist', 'Creating'), ('Creating', 'Data'), ('Data', 'Science'), ('Science', 'Pipeline'), ('Pipeline', 'Why'), ('Why', 'Python'), ('Python', '?')]

>> Trigrams are: 
 [('PowerPoint', 'Presentation', 'arjun.bala'), ('Presentation', 'arjun.bala', '@'), ('arjun.bala', '@', 'darshan.ac.in'), ('@', 'darshan.ac.in', '9624822202'), ('darshan.ac.in', '9624822202', 'Computer'), ('9624822202', 'Computer', 'Engineering'), ('Computer', 'Engineering', 'Department'), ('Engineering', 'Department', 'Prof.'), ('Department', 'Prof.', 'Arjun'), ('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', 'Python'), ('Bala', 'Python', 'Data'), ('Python', 'Data', 'Science'), ('Data', 'Science', '('), ('Science', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '('), (')', '(', '3150713'), ('(', '3150713', ')'), ('3150713', ')', 'Unit-02'), (')', 'Unit-02', 'Data'), ('Unit-02', 'Data', 'Science'), ('Data', 'Science', '&'), ('Science', '&', 'Python'), ('&', 'Python', 'Darshan'), ('Python', 'Darshan', 'Institute'), ('Darshan', 'Institute', 'Engineering'), ('Institute', 'Engineering', '&'), ('Engineering', '&', 'Technology'), ('&', 'Technology', ','), ('Technology', ',', 'Rajkot'), (',', 'Rajkot', '\uf050'), ('Rajkot', '\uf050', 'Looping'), ('\uf050', 'Looping', 'Outline'), ('Looping', 'Outline', 'Core'), ('Outline', 'Core', 'competencies'), ('Core', 'competencies', 'data'), ('competencies', 'data', 'scientist'), ('data', 'scientist', 'Creating'), ('scientist', 'Creating', 'Data'), ('Creating', 'Data', 'Science'), ('Data', 'Science', 'Pipeline'), ('Science', 'Pipeline', 'Why'), ('Pipeline', 'Why', 'Python'), ('Why', 'Python', '?')]

>> POS Tags are: 
 [('PowerPoint', 'NNP'), ('Presentation', 'NNP'), ('arjun.bala', 'VBZ'), ('@', 'NNP'), ('darshan.ac.in', 'NN'), ('9624822202', 'CD'), ('Computer', 'NNP'), ('Engineering', 'NNP'), ('Department', 'NNP'), ('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('Python', 'NNP'), ('Data', 'NNP'), ('Science', 'NNP'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('(', '('), ('3150713', 'CD'), (')', ')'), ('Unit-02', 'NNP'), ('Data', 'NNP'), ('Science', 'NNP'), ('&', 'CC'), ('Python', 'NNP'), ('Darshan', 'NNP'), ('Institute', 'NNP'), ('Engineering', 'NNP'), ('&', 'CC'), ('Technology', 'NNP'), (',', ','), ('Rajkot', 'NNP'), ('\uf050', 'NNP'), ('Looping', 'NNP'), ('Outline', 'NNP'), ('Core', 'NNP'), ('competencies', 'NNS'), ('data', 'NNS'), ('scientist', 'NN'), ('Creating', 'NNP'), ('Data', 'NNP'), ('Science', 'NNP'), ('Pipeline', 'NNP'), ('Why', 'WRB'), ('Python', 'NNP'), ('?', '.')]

 (S
  (NP PowerPoint/NNP Presentation/NNP)
  arjun.bala/VBZ
  (NP @/NNP darshan.ac.in/NN)
  9624822202/CD
  (NP
    Computer/NNP
    Engineering/NNP
    Department/NNP
    Prof./NNP
    Arjun/NNP
    V./NNP
    Bala/NNP
    Python/NNP
    Data/NNP
    Science/NNP)
  (/(
  (NP PDS/NNP)
  )/)
  (/(
  3150713/CD
  )/)
  (NP Unit-02/NNP Data/NNP Science/NNP)
  &/CC
  (NP Python/NNP Darshan/NNP Institute/NNP Engineering/NNP)
  &/CC
  (NP Technology/NNP)
  ,/,
  (NP
    Rajkot/NNP
    /NNP
    Looping/NNP
    Outline/NNP
    Core/NNP
    competencies/NNS
    data/NNS
    scientist/NN
    Creating/NNP
    Data/NNP
    Science/NNP
    Pipeline/NNP)
  Why/WRB
  (NP Python/NNP)
  ?/.) 


>> Noun Phrases are: 
 ['PowerPoint Presentation', '@ darshan.ac.in', 'Computer Engineering Department Prof. Arjun V. Bala Python Data Science', 'PDS', 'Unit-02 Data Science', 'Python Darshan Institute Engineering', 'Technology', 'Rajkot \uf050 Looping Outline Core competencies data scientist Creating Data Science Pipeline', 'Python']

>> Named Entities are: 
 [('ORGANIZATION', 'PowerPoint'), ('ORGANIZATION', 'Computer Engineering Department'), ('PERSON', 'Bala Python Data Science'), ('ORGANIZATION', 'PDS'), ('PERSON', 'Python Darshan Institute'), ('ORGANIZATION', 'Technology'), ('PERSON', 'Rajkot'), ('PERSON', 'Python')] 

>> Stemming using Porter Stemmer: 
 [('PowerPoint', 'powerpoint'), ('Presentation', 'present'), ('arjun.bala', 'arjun.bala'), ('@', '@'), ('darshan.ac.in', 'darshan.ac.in'), ('9624822202', '9624822202'), ('Computer', 'comput'), ('Engineering', 'engin'), ('Department', 'depart'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('Python', 'python'), ('Data', 'data'), ('Science', 'scienc'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('(', '('), ('3150713', '3150713'), (')', ')'), ('Unit-02', 'unit-02'), ('Data', 'data'), ('Science', 'scienc'), ('&', '&'), ('Python', 'python'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), (',', ','), ('Rajkot', 'rajkot'), ('\uf050', '\uf050'), ('Looping', 'loop'), ('Outline', 'outlin'), ('Core', 'core'), ('competencies', 'compet'), ('data', 'data'), ('scientist', 'scientist'), ('Creating', 'creat'), ('Data', 'data'), ('Science', 'scienc'), ('Pipeline', 'pipelin'), ('Why', 'whi'), ('Python', 'python'), ('?', '?')]

>> Stemming using Snowball Stemmer: 
 [('PowerPoint', 'powerpoint'), ('Presentation', 'present'), ('arjun.bala', 'arjun.bala'), ('@', '@'), ('darshan.ac.in', 'darshan.ac.in'), ('9624822202', '9624822202'), ('Computer', 'comput'), ('Engineering', 'engin'), ('Department', 'depart'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('Python', 'python'), ('Data', 'data'), ('Science', 'scienc'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('(', '('), ('3150713', '3150713'), (')', ')'), ('Unit-02', 'unit-02'), ('Data', 'data'), ('Science', 'scienc'), ('&', '&'), ('Python', 'python'), ('Darshan', 'darshan'), ('Institute', 'institut'), ('Engineering', 'engin'), ('&', '&'), ('Technology', 'technolog'), (',', ','), ('Rajkot', 'rajkot'), ('\uf050', '\uf050'), ('Looping', 'loop'), ('Outline', 'outlin'), ('Core', 'core'), ('competencies', 'compet'), ('data', 'data'), ('scientist', 'scientist'), ('Creating', 'creat'), ('Data', 'data'), ('Science', 'scienc'), ('Pipeline', 'pipelin'), ('Why', 'whi'), ('Python', 'python'), ('?', '?')]

>> Lemmatization: 
 [('PowerPoint', 'PowerPoint'), ('Presentation', 'Presentation'), ('arjun.bala', 'arjun.bala'), ('@', '@'), ('darshan.ac.in', 'darshan.ac.in'), ('9624822202', '9624822202'), ('Computer', 'Computer'), ('Engineering', 'Engineering'), ('Department', 'Department'), ('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('Python', 'Python'), ('Data', 'Data'), ('Science', 'Science'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('(', '('), ('3150713', '3150713'), (')', ')'), ('Unit-02', 'Unit-02'), ('Data', 'Data'), ('Science', 'Science'), ('&', '&'), ('Python', 'Python'), ('Darshan', 'Darshan'), ('Institute', 'Institute'), ('Engineering', 'Engineering'), ('&', '&'), ('Technology', 'Technology'), (',', ','), ('Rajkot', 'Rajkot'), ('\uf050', '\uf050'), ('Looping', 'Looping'), ('Outline', 'Outline'), ('Core', 'Core'), ('competencies', 'competency'), ('data', 'data'), ('scientist', 'scientist'), ('Creating', 'Creating'), ('Data', 'Data'), ('Science', 'Science'), ('Pipeline', 'Pipeline'), ('Why', 'Why'), ('Python', 'Python'), ('?', '?')]



============================ Sentence 2 =============================

Understanding Python's Role in Data Science Considering Speed of Execution Using the Python Ecosystem for Data Science Performing fundamental scientific computing using NumPy Performing data analysis using pandas Accessing scientific tools using SciPy Implementing machine learning using Scikit-learn Going for deep learning with Keras and TensorFlow Plotting the data using matplotlib Creating graphs with NetworkX Parsing HTML documents using Beautiful Soup     Core competencies of a data scientist The Data Scientist requires knowledge of vast range of skills to perform required tasks. 


>> Tokens are: 
 ['Understanding', 'Python', "'s", 'Role', 'Data', 'Science', 'Considering', 'Speed', 'Execution', 'Using', 'Python', 'Ecosystem', 'Data', 'Science', 'Performing', 'fundamental', 'scientific', 'computing', 'using', 'NumPy', 'Performing', 'data', 'analysis', 'using', 'pandas', 'Accessing', 'scientific', 'tools', 'using', 'SciPy', 'Implementing', 'machine', 'learning', 'using', 'Scikit-learn', 'Going', 'deep', 'learning', 'Keras', 'TensorFlow', 'Plotting', 'data', 'using', 'matplotlib', 'Creating', 'graphs', 'NetworkX', 'Parsing', 'HTML', 'documents', 'using', 'Beautiful', 'Soup', 'Core', 'competencies', 'data', 'scientist', 'The', 'Data', 'Scientist', 'requires', 'knowledge', 'vast', 'range', 'skills', 'perform', 'required', 'tasks', '.']

>> Bigrams are: 
 [('Understanding', 'Python'), ('Python', "'s"), ("'s", 'Role'), ('Role', 'Data'), ('Data', 'Science'), ('Science', 'Considering'), ('Considering', 'Speed'), ('Speed', 'Execution'), ('Execution', 'Using'), ('Using', 'Python'), ('Python', 'Ecosystem'), ('Ecosystem', 'Data'), ('Data', 'Science'), ('Science', 'Performing'), ('Performing', 'fundamental'), ('fundamental', 'scientific'), ('scientific', 'computing'), ('computing', 'using'), ('using', 'NumPy'), ('NumPy', 'Performing'), ('Performing', 'data'), ('data', 'analysis'), ('analysis', 'using'), ('using', 'pandas'), ('pandas', 'Accessing'), ('Accessing', 'scientific'), ('scientific', 'tools'), ('tools', 'using'), ('using', 'SciPy'), ('SciPy', 'Implementing'), ('Implementing', 'machine'), ('machine', 'learning'), ('learning', 'using'), ('using', 'Scikit-learn'), ('Scikit-learn', 'Going'), ('Going', 'deep'), ('deep', 'learning'), ('learning', 'Keras'), ('Keras', 'TensorFlow'), ('TensorFlow', 'Plotting'), ('Plotting', 'data'), ('data', 'using'), ('using', 'matplotlib'), ('matplotlib', 'Creating'), ('Creating', 'graphs'), ('graphs', 'NetworkX'), ('NetworkX', 'Parsing'), ('Parsing', 'HTML'), ('HTML', 'documents'), ('documents', 'using'), ('using', 'Beautiful'), ('Beautiful', 'Soup'), ('Soup', 'Core'), ('Core', 'competencies'), ('competencies', 'data'), ('data', 'scientist'), ('scientist', 'The'), ('The', 'Data'), ('Data', 'Scientist'), ('Scientist', 'requires'), ('requires', 'knowledge'), ('knowledge', 'vast'), ('vast', 'range'), ('range', 'skills'), ('skills', 'perform'), ('perform', 'required'), ('required', 'tasks'), ('tasks', '.')]

>> Trigrams are: 
 [('Understanding', 'Python', "'s"), ('Python', "'s", 'Role'), ("'s", 'Role', 'Data'), ('Role', 'Data', 'Science'), ('Data', 'Science', 'Considering'), ('Science', 'Considering', 'Speed'), ('Considering', 'Speed', 'Execution'), ('Speed', 'Execution', 'Using'), ('Execution', 'Using', 'Python'), ('Using', 'Python', 'Ecosystem'), ('Python', 'Ecosystem', 'Data'), ('Ecosystem', 'Data', 'Science'), ('Data', 'Science', 'Performing'), ('Science', 'Performing', 'fundamental'), ('Performing', 'fundamental', 'scientific'), ('fundamental', 'scientific', 'computing'), ('scientific', 'computing', 'using'), ('computing', 'using', 'NumPy'), ('using', 'NumPy', 'Performing'), ('NumPy', 'Performing', 'data'), ('Performing', 'data', 'analysis'), ('data', 'analysis', 'using'), ('analysis', 'using', 'pandas'), ('using', 'pandas', 'Accessing'), ('pandas', 'Accessing', 'scientific'), ('Accessing', 'scientific', 'tools'), ('scientific', 'tools', 'using'), ('tools', 'using', 'SciPy'), ('using', 'SciPy', 'Implementing'), ('SciPy', 'Implementing', 'machine'), ('Implementing', 'machine', 'learning'), ('machine', 'learning', 'using'), ('learning', 'using', 'Scikit-learn'), ('using', 'Scikit-learn', 'Going'), ('Scikit-learn', 'Going', 'deep'), ('Going', 'deep', 'learning'), ('deep', 'learning', 'Keras'), ('learning', 'Keras', 'TensorFlow'), ('Keras', 'TensorFlow', 'Plotting'), ('TensorFlow', 'Plotting', 'data'), ('Plotting', 'data', 'using'), ('data', 'using', 'matplotlib'), ('using', 'matplotlib', 'Creating'), ('matplotlib', 'Creating', 'graphs'), ('Creating', 'graphs', 'NetworkX'), ('graphs', 'NetworkX', 'Parsing'), ('NetworkX', 'Parsing', 'HTML'), ('Parsing', 'HTML', 'documents'), ('HTML', 'documents', 'using'), ('documents', 'using', 'Beautiful'), ('using', 'Beautiful', 'Soup'), ('Beautiful', 'Soup', 'Core'), ('Soup', 'Core', 'competencies'), ('Core', 'competencies', 'data'), ('competencies', 'data', 'scientist'), ('data', 'scientist', 'The'), ('scientist', 'The', 'Data'), ('The', 'Data', 'Scientist'), ('Data', 'Scientist', 'requires'), ('Scientist', 'requires', 'knowledge'), ('requires', 'knowledge', 'vast'), ('knowledge', 'vast', 'range'), ('vast', 'range', 'skills'), ('range', 'skills', 'perform'), ('skills', 'perform', 'required'), ('perform', 'required', 'tasks'), ('required', 'tasks', '.')]

>> POS Tags are: 
 [('Understanding', 'VBG'), ('Python', 'NNP'), ("'s", 'POS'), ('Role', 'NNP'), ('Data', 'NNP'), ('Science', 'NNP'), ('Considering', 'NNP'), ('Speed', 'NNP'), ('Execution', 'NNP'), ('Using', 'NNP'), ('Python', 'NNP'), ('Ecosystem', 'NNP'), ('Data', 'NNP'), ('Science', 'NNP'), ('Performing', 'NNP'), ('fundamental', 'JJ'), ('scientific', 'JJ'), ('computing', 'VBG'), ('using', 'VBG'), ('NumPy', 'NNP'), ('Performing', 'NNP'), ('data', 'NN'), ('analysis', 'NN'), ('using', 'VBG'), ('pandas', 'JJ'), ('Accessing', 'NNP'), ('scientific', 'JJ'), ('tools', 'NNS'), ('using', 'VBG'), ('SciPy', 'NNP'), ('Implementing', 'NNP'), ('machine', 'NN'), ('learning', 'VBG'), ('using', 'VBG'), ('Scikit-learn', 'NNP'), ('Going', 'NNP'), ('deep', 'JJ'), ('learning', 'NN'), ('Keras', 'NNP'), ('TensorFlow', 'NNP'), ('Plotting', 'NNP'), ('data', 'NNS'), ('using', 'VBG'), ('matplotlib', 'NN'), ('Creating', 'NNP'), ('graphs', 'NN'), ('NetworkX', 'NNP'), ('Parsing', 'NNP'), ('HTML', 'NNP'), ('documents', 'NNS'), ('using', 'VBG'), ('Beautiful', 'NNP'), ('Soup', 'NNP'), ('Core', 'NNP'), ('competencies', 'NNS'), ('data', 'NNS'), ('scientist', 'VBP'), ('The', 'DT'), ('Data', 'NNP'), ('Scientist', 'NNP'), ('requires', 'VBZ'), ('knowledge', 'VB'), ('vast', 'JJ'), ('range', 'NN'), ('skills', 'NNS'), ('perform', 'VBP'), ('required', 'VBN'), ('tasks', 'NNS'), ('.', '.')]

 (S
  Understanding/VBG
  (NP Python/NNP)
  's/POS
  (NP
    Role/NNP
    Data/NNP
    Science/NNP
    Considering/NNP
    Speed/NNP
    Execution/NNP
    Using/NNP
    Python/NNP
    Ecosystem/NNP
    Data/NNP
    Science/NNP
    Performing/NNP)
  fundamental/JJ
  scientific/JJ
  computing/VBG
  using/VBG
  (NP NumPy/NNP Performing/NNP data/NN analysis/NN)
  using/VBG
  (NP pandas/JJ Accessing/NNP)
  (NP scientific/JJ tools/NNS)
  using/VBG
  (NP SciPy/NNP Implementing/NNP machine/NN)
  learning/VBG
  using/VBG
  (NP Scikit-learn/NNP Going/NNP)
  (NP
    deep/JJ
    learning/NN
    Keras/NNP
    TensorFlow/NNP
    Plotting/NNP
    data/NNS)
  using/VBG
  (NP
    matplotlib/NN
    Creating/NNP
    graphs/NN
    NetworkX/NNP
    Parsing/NNP
    HTML/NNP
    documents/NNS)
  using/VBG
  (NP Beautiful/NNP Soup/NNP Core/NNP competencies/NNS data/NNS)
  scientist/VBP
  (NP The/DT Data/NNP Scientist/NNP)
  requires/VBZ
  knowledge/VB
  (NP vast/JJ range/NN skills/NNS)
  perform/VBP
  required/VBN
  (NP tasks/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Python', 'Role Data Science Considering Speed Execution Using Python Ecosystem Data Science Performing', 'NumPy Performing data analysis', 'pandas Accessing', 'scientific tools', 'SciPy Implementing machine', 'Scikit-learn Going', 'deep learning Keras TensorFlow Plotting data', 'matplotlib Creating graphs NetworkX Parsing HTML documents', 'Beautiful Soup Core competencies data', 'The Data Scientist', 'vast range skills', 'tasks']

>> Named Entities are: 
 [('PERSON', 'Python'), ('ORGANIZATION', 'Role Data Science'), ('PERSON', 'Python Ecosystem Data Science'), ('ORGANIZATION', 'NumPy Performing'), ('ORGANIZATION', 'SciPy'), ('PERSON', 'Keras TensorFlow Plotting'), ('ORGANIZATION', 'NetworkX Parsing'), ('PERSON', 'Beautiful Soup Core'), ('ORGANIZATION', 'Data Scientist')] 

>> Stemming using Porter Stemmer: 
 [('Understanding', 'understand'), ('Python', 'python'), ("'s", "'s"), ('Role', 'role'), ('Data', 'data'), ('Science', 'scienc'), ('Considering', 'consid'), ('Speed', 'speed'), ('Execution', 'execut'), ('Using', 'use'), ('Python', 'python'), ('Ecosystem', 'ecosystem'), ('Data', 'data'), ('Science', 'scienc'), ('Performing', 'perform'), ('fundamental', 'fundament'), ('scientific', 'scientif'), ('computing', 'comput'), ('using', 'use'), ('NumPy', 'numpi'), ('Performing', 'perform'), ('data', 'data'), ('analysis', 'analysi'), ('using', 'use'), ('pandas', 'panda'), ('Accessing', 'access'), ('scientific', 'scientif'), ('tools', 'tool'), ('using', 'use'), ('SciPy', 'scipi'), ('Implementing', 'implement'), ('machine', 'machin'), ('learning', 'learn'), ('using', 'use'), ('Scikit-learn', 'scikit-learn'), ('Going', 'go'), ('deep', 'deep'), ('learning', 'learn'), ('Keras', 'kera'), ('TensorFlow', 'tensorflow'), ('Plotting', 'plot'), ('data', 'data'), ('using', 'use'), ('matplotlib', 'matplotlib'), ('Creating', 'creat'), ('graphs', 'graph'), ('NetworkX', 'networkx'), ('Parsing', 'pars'), ('HTML', 'html'), ('documents', 'document'), ('using', 'use'), ('Beautiful', 'beauti'), ('Soup', 'soup'), ('Core', 'core'), ('competencies', 'compet'), ('data', 'data'), ('scientist', 'scientist'), ('The', 'the'), ('Data', 'data'), ('Scientist', 'scientist'), ('requires', 'requir'), ('knowledge', 'knowledg'), ('vast', 'vast'), ('range', 'rang'), ('skills', 'skill'), ('perform', 'perform'), ('required', 'requir'), ('tasks', 'task'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Understanding', 'understand'), ('Python', 'python'), ("'s", "'s"), ('Role', 'role'), ('Data', 'data'), ('Science', 'scienc'), ('Considering', 'consid'), ('Speed', 'speed'), ('Execution', 'execut'), ('Using', 'use'), ('Python', 'python'), ('Ecosystem', 'ecosystem'), ('Data', 'data'), ('Science', 'scienc'), ('Performing', 'perform'), ('fundamental', 'fundament'), ('scientific', 'scientif'), ('computing', 'comput'), ('using', 'use'), ('NumPy', 'numpi'), ('Performing', 'perform'), ('data', 'data'), ('analysis', 'analysi'), ('using', 'use'), ('pandas', 'panda'), ('Accessing', 'access'), ('scientific', 'scientif'), ('tools', 'tool'), ('using', 'use'), ('SciPy', 'scipi'), ('Implementing', 'implement'), ('machine', 'machin'), ('learning', 'learn'), ('using', 'use'), ('Scikit-learn', 'scikit-learn'), ('Going', 'go'), ('deep', 'deep'), ('learning', 'learn'), ('Keras', 'kera'), ('TensorFlow', 'tensorflow'), ('Plotting', 'plot'), ('data', 'data'), ('using', 'use'), ('matplotlib', 'matplotlib'), ('Creating', 'creat'), ('graphs', 'graph'), ('NetworkX', 'networkx'), ('Parsing', 'pars'), ('HTML', 'html'), ('documents', 'document'), ('using', 'use'), ('Beautiful', 'beauti'), ('Soup', 'soup'), ('Core', 'core'), ('competencies', 'compet'), ('data', 'data'), ('scientist', 'scientist'), ('The', 'the'), ('Data', 'data'), ('Scientist', 'scientist'), ('requires', 'requir'), ('knowledge', 'knowledg'), ('vast', 'vast'), ('range', 'rang'), ('skills', 'skill'), ('perform', 'perform'), ('required', 'requir'), ('tasks', 'task'), ('.', '.')]

>> Lemmatization: 
 [('Understanding', 'Understanding'), ('Python', 'Python'), ("'s", "'s"), ('Role', 'Role'), ('Data', 'Data'), ('Science', 'Science'), ('Considering', 'Considering'), ('Speed', 'Speed'), ('Execution', 'Execution'), ('Using', 'Using'), ('Python', 'Python'), ('Ecosystem', 'Ecosystem'), ('Data', 'Data'), ('Science', 'Science'), ('Performing', 'Performing'), ('fundamental', 'fundamental'), ('scientific', 'scientific'), ('computing', 'computing'), ('using', 'using'), ('NumPy', 'NumPy'), ('Performing', 'Performing'), ('data', 'data'), ('analysis', 'analysis'), ('using', 'using'), ('pandas', 'panda'), ('Accessing', 'Accessing'), ('scientific', 'scientific'), ('tools', 'tool'), ('using', 'using'), ('SciPy', 'SciPy'), ('Implementing', 'Implementing'), ('machine', 'machine'), ('learning', 'learning'), ('using', 'using'), ('Scikit-learn', 'Scikit-learn'), ('Going', 'Going'), ('deep', 'deep'), ('learning', 'learning'), ('Keras', 'Keras'), ('TensorFlow', 'TensorFlow'), ('Plotting', 'Plotting'), ('data', 'data'), ('using', 'using'), ('matplotlib', 'matplotlib'), ('Creating', 'Creating'), ('graphs', 'graph'), ('NetworkX', 'NetworkX'), ('Parsing', 'Parsing'), ('HTML', 'HTML'), ('documents', 'document'), ('using', 'using'), ('Beautiful', 'Beautiful'), ('Soup', 'Soup'), ('Core', 'Core'), ('competencies', 'competency'), ('data', 'data'), ('scientist', 'scientist'), ('The', 'The'), ('Data', 'Data'), ('Scientist', 'Scientist'), ('requires', 'requires'), ('knowledge', 'knowledge'), ('vast', 'vast'), ('range', 'range'), ('skills', 'skill'), ('perform', 'perform'), ('required', 'required'), ('tasks', 'task'), ('.', '.')]



============================ Sentence 3 =============================

Most of the times data scientists work in a team to provide the best results,  for example someone who is good at gathering data might team up with an analyst and some gifted in presenting information. 


>> Tokens are: 
 ['Most', 'times', 'data', 'scientists', 'work', 'team', 'provide', 'best', 'results', ',', 'example', 'someone', 'good', 'gathering', 'data', 'might', 'team', 'analyst', 'gifted', 'presenting', 'information', '.']

>> Bigrams are: 
 [('Most', 'times'), ('times', 'data'), ('data', 'scientists'), ('scientists', 'work'), ('work', 'team'), ('team', 'provide'), ('provide', 'best'), ('best', 'results'), ('results', ','), (',', 'example'), ('example', 'someone'), ('someone', 'good'), ('good', 'gathering'), ('gathering', 'data'), ('data', 'might'), ('might', 'team'), ('team', 'analyst'), ('analyst', 'gifted'), ('gifted', 'presenting'), ('presenting', 'information'), ('information', '.')]

>> Trigrams are: 
 [('Most', 'times', 'data'), ('times', 'data', 'scientists'), ('data', 'scientists', 'work'), ('scientists', 'work', 'team'), ('work', 'team', 'provide'), ('team', 'provide', 'best'), ('provide', 'best', 'results'), ('best', 'results', ','), ('results', ',', 'example'), (',', 'example', 'someone'), ('example', 'someone', 'good'), ('someone', 'good', 'gathering'), ('good', 'gathering', 'data'), ('gathering', 'data', 'might'), ('data', 'might', 'team'), ('might', 'team', 'analyst'), ('team', 'analyst', 'gifted'), ('analyst', 'gifted', 'presenting'), ('gifted', 'presenting', 'information'), ('presenting', 'information', '.')]

>> POS Tags are: 
 [('Most', 'JJS'), ('times', 'NNS'), ('data', 'VBP'), ('scientists', 'NNS'), ('work', 'VBP'), ('team', 'RB'), ('provide', 'RB'), ('best', 'JJS'), ('results', 'NNS'), (',', ','), ('example', 'NN'), ('someone', 'NN'), ('good', 'JJ'), ('gathering', 'NN'), ('data', 'NNS'), ('might', 'MD'), ('team', 'VB'), ('analyst', 'NN'), ('gifted', 'VBD'), ('presenting', 'VBG'), ('information', 'NN'), ('.', '.')]

 (S
  Most/JJS
  (NP times/NNS)
  data/VBP
  (NP scientists/NNS)
  work/VBP
  team/RB
  provide/RB
  best/JJS
  (NP results/NNS)
  ,/,
  (NP example/NN someone/NN)
  (NP good/JJ gathering/NN data/NNS)
  might/MD
  team/VB
  (NP analyst/NN)
  gifted/VBD
  presenting/VBG
  (NP information/NN)
  ./.) 


>> Noun Phrases are: 
 ['times', 'scientists', 'results', 'example someone', 'good gathering data', 'analyst', 'information']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Most', 'most'), ('times', 'time'), ('data', 'data'), ('scientists', 'scientist'), ('work', 'work'), ('team', 'team'), ('provide', 'provid'), ('best', 'best'), ('results', 'result'), (',', ','), ('example', 'exampl'), ('someone', 'someon'), ('good', 'good'), ('gathering', 'gather'), ('data', 'data'), ('might', 'might'), ('team', 'team'), ('analyst', 'analyst'), ('gifted', 'gift'), ('presenting', 'present'), ('information', 'inform'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Most', 'most'), ('times', 'time'), ('data', 'data'), ('scientists', 'scientist'), ('work', 'work'), ('team', 'team'), ('provide', 'provid'), ('best', 'best'), ('results', 'result'), (',', ','), ('example', 'exampl'), ('someone', 'someon'), ('good', 'good'), ('gathering', 'gather'), ('data', 'data'), ('might', 'might'), ('team', 'team'), ('analyst', 'analyst'), ('gifted', 'gift'), ('presenting', 'present'), ('information', 'inform'), ('.', '.')]

>> Lemmatization: 
 [('Most', 'Most'), ('times', 'time'), ('data', 'data'), ('scientists', 'scientist'), ('work', 'work'), ('team', 'team'), ('provide', 'provide'), ('best', 'best'), ('results', 'result'), (',', ','), ('example', 'example'), ('someone', 'someone'), ('good', 'good'), ('gathering', 'gathering'), ('data', 'data'), ('might', 'might'), ('team', 'team'), ('analyst', 'analyst'), ('gifted', 'gifted'), ('presenting', 'presenting'), ('information', 'information'), ('.', '.')]



============================ Sentence 4 =============================

It would be hard to find a single person with all the required skills. 


>> Tokens are: 
 ['It', 'would', 'hard', 'find', 'single', 'person', 'required', 'skills', '.']

>> Bigrams are: 
 [('It', 'would'), ('would', 'hard'), ('hard', 'find'), ('find', 'single'), ('single', 'person'), ('person', 'required'), ('required', 'skills'), ('skills', '.')]

>> Trigrams are: 
 [('It', 'would', 'hard'), ('would', 'hard', 'find'), ('hard', 'find', 'single'), ('find', 'single', 'person'), ('single', 'person', 'required'), ('person', 'required', 'skills'), ('required', 'skills', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('would', 'MD'), ('hard', 'VB'), ('find', 'VB'), ('single', 'JJ'), ('person', 'NN'), ('required', 'VBN'), ('skills', 'NNS'), ('.', '.')]

 (S
  It/PRP
  would/MD
  hard/VB
  find/VB
  (NP single/JJ person/NN)
  required/VBN
  (NP skills/NNS)
  ./.) 


>> Noun Phrases are: 
 ['single person', 'skills']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('would', 'would'), ('hard', 'hard'), ('find', 'find'), ('single', 'singl'), ('person', 'person'), ('required', 'requir'), ('skills', 'skill'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('would', 'would'), ('hard', 'hard'), ('find', 'find'), ('single', 'singl'), ('person', 'person'), ('required', 'requir'), ('skills', 'skill'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('would', 'would'), ('hard', 'hard'), ('find', 'find'), ('single', 'single'), ('person', 'person'), ('required', 'required'), ('skills', 'skill'), ('.', '.')]



============================ Sentence 5 =============================

Below are the areas in which a data scientist could find opportunity Data Capture : Managing data source (i.e.- database, exel, pdf, text etc…) Converting the unstructured data to structured data. 


>> Tokens are: 
 ['Below', 'areas', 'data', 'scientist', 'could', 'find', 'opportunity', 'Data', 'Capture', ':', 'Managing', 'data', 'source', '(', 'i.e.-', 'database', ',', 'exel', ',', 'pdf', ',', 'text', 'etc…', ')', 'Converting', 'unstructured', 'data', 'structured', 'data', '.']

>> Bigrams are: 
 [('Below', 'areas'), ('areas', 'data'), ('data', 'scientist'), ('scientist', 'could'), ('could', 'find'), ('find', 'opportunity'), ('opportunity', 'Data'), ('Data', 'Capture'), ('Capture', ':'), (':', 'Managing'), ('Managing', 'data'), ('data', 'source'), ('source', '('), ('(', 'i.e.-'), ('i.e.-', 'database'), ('database', ','), (',', 'exel'), ('exel', ','), (',', 'pdf'), ('pdf', ','), (',', 'text'), ('text', 'etc…'), ('etc…', ')'), (')', 'Converting'), ('Converting', 'unstructured'), ('unstructured', 'data'), ('data', 'structured'), ('structured', 'data'), ('data', '.')]

>> Trigrams are: 
 [('Below', 'areas', 'data'), ('areas', 'data', 'scientist'), ('data', 'scientist', 'could'), ('scientist', 'could', 'find'), ('could', 'find', 'opportunity'), ('find', 'opportunity', 'Data'), ('opportunity', 'Data', 'Capture'), ('Data', 'Capture', ':'), ('Capture', ':', 'Managing'), (':', 'Managing', 'data'), ('Managing', 'data', 'source'), ('data', 'source', '('), ('source', '(', 'i.e.-'), ('(', 'i.e.-', 'database'), ('i.e.-', 'database', ','), ('database', ',', 'exel'), (',', 'exel', ','), ('exel', ',', 'pdf'), (',', 'pdf', ','), ('pdf', ',', 'text'), (',', 'text', 'etc…'), ('text', 'etc…', ')'), ('etc…', ')', 'Converting'), (')', 'Converting', 'unstructured'), ('Converting', 'unstructured', 'data'), ('unstructured', 'data', 'structured'), ('data', 'structured', 'data'), ('structured', 'data', '.')]

>> POS Tags are: 
 [('Below', 'IN'), ('areas', 'NNS'), ('data', 'NNS'), ('scientist', 'NN'), ('could', 'MD'), ('find', 'VB'), ('opportunity', 'NN'), ('Data', 'NNP'), ('Capture', 'NN'), (':', ':'), ('Managing', 'NNP'), ('data', 'NNS'), ('source', 'NN'), ('(', '('), ('i.e.-', 'JJ'), ('database', 'NN'), (',', ','), ('exel', 'NN'), (',', ','), ('pdf', 'NN'), (',', ','), ('text', 'JJ'), ('etc…', 'NN'), (')', ')'), ('Converting', 'VBG'), ('unstructured', 'JJ'), ('data', 'NNS'), ('structured', 'VBN'), ('data', 'NNS'), ('.', '.')]

 (S
  Below/IN
  (NP areas/NNS data/NNS scientist/NN)
  could/MD
  find/VB
  (NP opportunity/NN Data/NNP Capture/NN)
  :/:
  (NP Managing/NNP data/NNS source/NN)
  (/(
  (NP i.e.-/JJ database/NN)
  ,/,
  (NP exel/NN)
  ,/,
  (NP pdf/NN)
  ,/,
  (NP text/JJ etc…/NN)
  )/)
  Converting/VBG
  (NP unstructured/JJ data/NNS)
  structured/VBN
  (NP data/NNS)
  ./.) 


>> Noun Phrases are: 
 ['areas data scientist', 'opportunity Data Capture', 'Managing data source', 'i.e.- database', 'exel', 'pdf', 'text etc…', 'unstructured data', 'data']

>> Named Entities are: 
 [('PERSON', 'Data')] 

>> Stemming using Porter Stemmer: 
 [('Below', 'below'), ('areas', 'area'), ('data', 'data'), ('scientist', 'scientist'), ('could', 'could'), ('find', 'find'), ('opportunity', 'opportun'), ('Data', 'data'), ('Capture', 'captur'), (':', ':'), ('Managing', 'manag'), ('data', 'data'), ('source', 'sourc'), ('(', '('), ('i.e.-', 'i.e.-'), ('database', 'databas'), (',', ','), ('exel', 'exel'), (',', ','), ('pdf', 'pdf'), (',', ','), ('text', 'text'), ('etc…', 'etc…'), (')', ')'), ('Converting', 'convert'), ('unstructured', 'unstructur'), ('data', 'data'), ('structured', 'structur'), ('data', 'data'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Below', 'below'), ('areas', 'area'), ('data', 'data'), ('scientist', 'scientist'), ('could', 'could'), ('find', 'find'), ('opportunity', 'opportun'), ('Data', 'data'), ('Capture', 'captur'), (':', ':'), ('Managing', 'manag'), ('data', 'data'), ('source', 'sourc'), ('(', '('), ('i.e.-', 'i.e.-'), ('database', 'databas'), (',', ','), ('exel', 'exel'), (',', ','), ('pdf', 'pdf'), (',', ','), ('text', 'text'), ('etc…', 'etc…'), (')', ')'), ('Converting', 'convert'), ('unstructured', 'unstructur'), ('data', 'data'), ('structured', 'structur'), ('data', 'data'), ('.', '.')]

>> Lemmatization: 
 [('Below', 'Below'), ('areas', 'area'), ('data', 'data'), ('scientist', 'scientist'), ('could', 'could'), ('find', 'find'), ('opportunity', 'opportunity'), ('Data', 'Data'), ('Capture', 'Capture'), (':', ':'), ('Managing', 'Managing'), ('data', 'data'), ('source', 'source'), ('(', '('), ('i.e.-', 'i.e.-'), ('database', 'database'), (',', ','), ('exel', 'exel'), (',', ','), ('pdf', 'pdf'), (',', ','), ('text', 'text'), ('etc…', 'etc…'), (')', ')'), ('Converting', 'Converting'), ('unstructured', 'unstructured'), ('data', 'data'), ('structured', 'structured'), ('data', 'data'), ('.', '.')]



============================ Sentence 6 =============================

Analysis : Knowledge of basic statistical tools. 


>> Tokens are: 
 ['Analysis', ':', 'Knowledge', 'basic', 'statistical', 'tools', '.']

>> Bigrams are: 
 [('Analysis', ':'), (':', 'Knowledge'), ('Knowledge', 'basic'), ('basic', 'statistical'), ('statistical', 'tools'), ('tools', '.')]

>> Trigrams are: 
 [('Analysis', ':', 'Knowledge'), (':', 'Knowledge', 'basic'), ('Knowledge', 'basic', 'statistical'), ('basic', 'statistical', 'tools'), ('statistical', 'tools', '.')]

>> POS Tags are: 
 [('Analysis', 'NN'), (':', ':'), ('Knowledge', 'NNP'), ('basic', 'JJ'), ('statistical', 'JJ'), ('tools', 'NNS'), ('.', '.')]

 (S
  (NP Analysis/NN)
  :/:
  (NP Knowledge/NNP)
  (NP basic/JJ statistical/JJ tools/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Analysis', 'Knowledge', 'basic statistical tools']

>> Named Entities are: 
 [('GPE', 'Analysis')] 

>> Stemming using Porter Stemmer: 
 [('Analysis', 'analysi'), (':', ':'), ('Knowledge', 'knowledg'), ('basic', 'basic'), ('statistical', 'statist'), ('tools', 'tool'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Analysis', 'analysi'), (':', ':'), ('Knowledge', 'knowledg'), ('basic', 'basic'), ('statistical', 'statist'), ('tools', 'tool'), ('.', '.')]

>> Lemmatization: 
 [('Analysis', 'Analysis'), (':', ':'), ('Knowledge', 'Knowledge'), ('basic', 'basic'), ('statistical', 'statistical'), ('tools', 'tool'), ('.', '.')]



============================ Sentence 7 =============================

Use of specialized math tricks and algorithms. 


>> Tokens are: 
 ['Use', 'specialized', 'math', 'tricks', 'algorithms', '.']

>> Bigrams are: 
 [('Use', 'specialized'), ('specialized', 'math'), ('math', 'tricks'), ('tricks', 'algorithms'), ('algorithms', '.')]

>> Trigrams are: 
 [('Use', 'specialized', 'math'), ('specialized', 'math', 'tricks'), ('math', 'tricks', 'algorithms'), ('tricks', 'algorithms', '.')]

>> POS Tags are: 
 [('Use', 'NNP'), ('specialized', 'VBD'), ('math', 'NN'), ('tricks', 'NNS'), ('algorithms', 'VBP'), ('.', '.')]

 (S
  (NP Use/NNP)
  specialized/VBD
  (NP math/NN tricks/NNS)
  algorithms/VBP
  ./.) 


>> Noun Phrases are: 
 ['Use', 'math tricks']

>> Named Entities are: 
 [('PERSON', 'Use')] 

>> Stemming using Porter Stemmer: 
 [('Use', 'use'), ('specialized', 'special'), ('math', 'math'), ('tricks', 'trick'), ('algorithms', 'algorithm'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Use', 'use'), ('specialized', 'special'), ('math', 'math'), ('tricks', 'trick'), ('algorithms', 'algorithm'), ('.', '.')]

>> Lemmatization: 
 [('Use', 'Use'), ('specialized', 'specialized'), ('math', 'math'), ('tricks', 'trick'), ('algorithms', 'algorithm'), ('.', '.')]



============================ Sentence 8 =============================

Presentations : Provide graphical presentations of the pattern. 


>> Tokens are: 
 ['Presentations', ':', 'Provide', 'graphical', 'presentations', 'pattern', '.']

>> Bigrams are: 
 [('Presentations', ':'), (':', 'Provide'), ('Provide', 'graphical'), ('graphical', 'presentations'), ('presentations', 'pattern'), ('pattern', '.')]

>> Trigrams are: 
 [('Presentations', ':', 'Provide'), (':', 'Provide', 'graphical'), ('Provide', 'graphical', 'presentations'), ('graphical', 'presentations', 'pattern'), ('presentations', 'pattern', '.')]

>> POS Tags are: 
 [('Presentations', 'NNS'), (':', ':'), ('Provide', 'NNP'), ('graphical', 'JJ'), ('presentations', 'NNS'), ('pattern', 'NN'), ('.', '.')]

 (S
  (NP Presentations/NNS)
  :/:
  (NP Provide/NNP)
  (NP graphical/JJ presentations/NNS pattern/NN)
  ./.) 


>> Noun Phrases are: 
 ['Presentations', 'Provide', 'graphical presentations pattern']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Presentations', 'present'), (':', ':'), ('Provide', 'provid'), ('graphical', 'graphic'), ('presentations', 'present'), ('pattern', 'pattern'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Presentations', 'present'), (':', ':'), ('Provide', 'provid'), ('graphical', 'graphic'), ('presentations', 'present'), ('pattern', 'pattern'), ('.', '.')]

>> Lemmatization: 
 [('Presentations', 'Presentations'), (':', ':'), ('Provide', 'Provide'), ('graphical', 'graphical'), ('presentations', 'presentation'), ('pattern', 'pattern'), ('.', '.')]



============================ Sentence 9 =============================

Represent the results of the data analysis to the end users. 


>> Tokens are: 
 ['Represent', 'results', 'data', 'analysis', 'end', 'users', '.']

>> Bigrams are: 
 [('Represent', 'results'), ('results', 'data'), ('data', 'analysis'), ('analysis', 'end'), ('end', 'users'), ('users', '.')]

>> Trigrams are: 
 [('Represent', 'results', 'data'), ('results', 'data', 'analysis'), ('data', 'analysis', 'end'), ('analysis', 'end', 'users'), ('end', 'users', '.')]

>> POS Tags are: 
 [('Represent', 'JJ'), ('results', 'NNS'), ('data', 'NNS'), ('analysis', 'NN'), ('end', 'NN'), ('users', 'NNS'), ('.', '.')]

 (S
  (NP Represent/JJ results/NNS data/NNS analysis/NN end/NN users/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Represent results data analysis end users']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Represent', 'repres'), ('results', 'result'), ('data', 'data'), ('analysis', 'analysi'), ('end', 'end'), ('users', 'user'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Represent', 'repres'), ('results', 'result'), ('data', 'data'), ('analysis', 'analysi'), ('end', 'end'), ('users', 'user'), ('.', '.')]

>> Lemmatization: 
 [('Represent', 'Represent'), ('results', 'result'), ('data', 'data'), ('analysis', 'analysis'), ('end', 'end'), ('users', 'user'), ('.', '.')]



============================ Sentence 10 =============================

Prof. Arjun V. Bala #3150713 (PDS)      Unit 02 – Data Science and Python ‹#›  Creating the Data Science Pipeline Data science pipeline requires the data scientist to follow particular steps in the preparation, analysis and presentation of the data. 


>> Tokens are: 
 ['Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '02', '–', 'Data', 'Science', 'Python', '‹', '#', '›', 'Creating', 'Data', 'Science', 'Pipeline', 'Data', 'science', 'pipeline', 'requires', 'data', 'scientist', 'follow', 'particular', 'steps', 'preparation', ',', 'analysis', 'presentation', 'data', '.']

>> Bigrams are: 
 [('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '02'), ('02', '–'), ('–', 'Data'), ('Data', 'Science'), ('Science', 'Python'), ('Python', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Creating'), ('Creating', 'Data'), ('Data', 'Science'), ('Science', 'Pipeline'), ('Pipeline', 'Data'), ('Data', 'science'), ('science', 'pipeline'), ('pipeline', 'requires'), ('requires', 'data'), ('data', 'scientist'), ('scientist', 'follow'), ('follow', 'particular'), ('particular', 'steps'), ('steps', 'preparation'), ('preparation', ','), (',', 'analysis'), ('analysis', 'presentation'), ('presentation', 'data'), ('data', '.')]

>> Trigrams are: 
 [('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '02'), ('Unit', '02', '–'), ('02', '–', 'Data'), ('–', 'Data', 'Science'), ('Data', 'Science', 'Python'), ('Science', 'Python', '‹'), ('Python', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Creating'), ('›', 'Creating', 'Data'), ('Creating', 'Data', 'Science'), ('Data', 'Science', 'Pipeline'), ('Science', 'Pipeline', 'Data'), ('Pipeline', 'Data', 'science'), ('Data', 'science', 'pipeline'), ('science', 'pipeline', 'requires'), ('pipeline', 'requires', 'data'), ('requires', 'data', 'scientist'), ('data', 'scientist', 'follow'), ('scientist', 'follow', 'particular'), ('follow', 'particular', 'steps'), ('particular', 'steps', 'preparation'), ('steps', 'preparation', ','), ('preparation', ',', 'analysis'), (',', 'analysis', 'presentation'), ('analysis', 'presentation', 'data'), ('presentation', 'data', '.')]

>> POS Tags are: 
 [('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('02', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Science', 'NNP'), ('Python', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Creating', 'NNP'), ('Data', 'NNP'), ('Science', 'NNP'), ('Pipeline', 'NNP'), ('Data', 'NNP'), ('science', 'NN'), ('pipeline', 'NN'), ('requires', 'VBZ'), ('data', 'NNS'), ('scientist', 'NN'), ('follow', 'VBP'), ('particular', 'JJ'), ('steps', 'NNS'), ('preparation', 'NN'), (',', ','), ('analysis', 'NN'), ('presentation', 'NN'), ('data', 'NNS'), ('.', '.')]

 (S
  (NP Prof./NNP Arjun/NNP V./NNP Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  02/CD
  (NP –/NNP Data/NNP Science/NNP Python/NNP ‹/NNP)
  #/#
  (NP
    ›/NNP
    Creating/NNP
    Data/NNP
    Science/NNP
    Pipeline/NNP
    Data/NNP
    science/NN
    pipeline/NN)
  requires/VBZ
  (NP data/NNS scientist/NN)
  follow/VBP
  (NP particular/JJ steps/NNS preparation/NN)
  ,/,
  (NP analysis/NN presentation/NN data/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Science Python ‹', '› Creating Data Science Pipeline Data science pipeline', 'data scientist', 'particular steps preparation', 'analysis presentation data']

>> Named Entities are: 
 [('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Python')] 

>> Stemming using Porter Stemmer: 
 [('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('02', '02'), ('–', '–'), ('Data', 'data'), ('Science', 'scienc'), ('Python', 'python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Creating', 'creat'), ('Data', 'data'), ('Science', 'scienc'), ('Pipeline', 'pipelin'), ('Data', 'data'), ('science', 'scienc'), ('pipeline', 'pipelin'), ('requires', 'requir'), ('data', 'data'), ('scientist', 'scientist'), ('follow', 'follow'), ('particular', 'particular'), ('steps', 'step'), ('preparation', 'prepar'), (',', ','), ('analysis', 'analysi'), ('presentation', 'present'), ('data', 'data'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('02', '02'), ('–', '–'), ('Data', 'data'), ('Science', 'scienc'), ('Python', 'python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Creating', 'creat'), ('Data', 'data'), ('Science', 'scienc'), ('Pipeline', 'pipelin'), ('Data', 'data'), ('science', 'scienc'), ('pipeline', 'pipelin'), ('requires', 'requir'), ('data', 'data'), ('scientist', 'scientist'), ('follow', 'follow'), ('particular', 'particular'), ('steps', 'step'), ('preparation', 'prepar'), (',', ','), ('analysis', 'analysi'), ('presentation', 'present'), ('data', 'data'), ('.', '.')]

>> Lemmatization: 
 [('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('02', '02'), ('–', '–'), ('Data', 'Data'), ('Science', 'Science'), ('Python', 'Python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Creating', 'Creating'), ('Data', 'Data'), ('Science', 'Science'), ('Pipeline', 'Pipeline'), ('Data', 'Data'), ('science', 'science'), ('pipeline', 'pipeline'), ('requires', 'requires'), ('data', 'data'), ('scientist', 'scientist'), ('follow', 'follow'), ('particular', 'particular'), ('steps', 'step'), ('preparation', 'preparation'), (',', ','), ('analysis', 'analysis'), ('presentation', 'presentation'), ('data', 'data'), ('.', '.')]



============================ Sentence 11 =============================

General steps in the pipeline are Preparing the data The data we access from various sources may not come directly in the structured format. 


>> Tokens are: 
 ['General', 'steps', 'pipeline', 'Preparing', 'data', 'The', 'data', 'access', 'various', 'sources', 'may', 'come', 'directly', 'structured', 'format', '.']

>> Bigrams are: 
 [('General', 'steps'), ('steps', 'pipeline'), ('pipeline', 'Preparing'), ('Preparing', 'data'), ('data', 'The'), ('The', 'data'), ('data', 'access'), ('access', 'various'), ('various', 'sources'), ('sources', 'may'), ('may', 'come'), ('come', 'directly'), ('directly', 'structured'), ('structured', 'format'), ('format', '.')]

>> Trigrams are: 
 [('General', 'steps', 'pipeline'), ('steps', 'pipeline', 'Preparing'), ('pipeline', 'Preparing', 'data'), ('Preparing', 'data', 'The'), ('data', 'The', 'data'), ('The', 'data', 'access'), ('data', 'access', 'various'), ('access', 'various', 'sources'), ('various', 'sources', 'may'), ('sources', 'may', 'come'), ('may', 'come', 'directly'), ('come', 'directly', 'structured'), ('directly', 'structured', 'format'), ('structured', 'format', '.')]

>> POS Tags are: 
 [('General', 'JJ'), ('steps', 'NNS'), ('pipeline', 'NN'), ('Preparing', 'NNP'), ('data', 'VBZ'), ('The', 'DT'), ('data', 'NN'), ('access', 'NN'), ('various', 'JJ'), ('sources', 'NNS'), ('may', 'MD'), ('come', 'VB'), ('directly', 'RB'), ('structured', 'VBN'), ('format', 'NN'), ('.', '.')]

 (S
  (NP General/JJ steps/NNS pipeline/NN Preparing/NNP)
  data/VBZ
  (NP The/DT data/NN access/NN)
  (NP various/JJ sources/NNS)
  may/MD
  come/VB
  directly/RB
  structured/VBN
  (NP format/NN)
  ./.) 


>> Noun Phrases are: 
 ['General steps pipeline Preparing', 'The data access', 'various sources', 'format']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('General', 'gener'), ('steps', 'step'), ('pipeline', 'pipelin'), ('Preparing', 'prepar'), ('data', 'data'), ('The', 'the'), ('data', 'data'), ('access', 'access'), ('various', 'variou'), ('sources', 'sourc'), ('may', 'may'), ('come', 'come'), ('directly', 'directli'), ('structured', 'structur'), ('format', 'format'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('General', 'general'), ('steps', 'step'), ('pipeline', 'pipelin'), ('Preparing', 'prepar'), ('data', 'data'), ('The', 'the'), ('data', 'data'), ('access', 'access'), ('various', 'various'), ('sources', 'sourc'), ('may', 'may'), ('come', 'come'), ('directly', 'direct'), ('structured', 'structur'), ('format', 'format'), ('.', '.')]

>> Lemmatization: 
 [('General', 'General'), ('steps', 'step'), ('pipeline', 'pipeline'), ('Preparing', 'Preparing'), ('data', 'data'), ('The', 'The'), ('data', 'data'), ('access', 'access'), ('various', 'various'), ('sources', 'source'), ('may', 'may'), ('come', 'come'), ('directly', 'directly'), ('structured', 'structured'), ('format', 'format'), ('.', '.')]



============================ Sentence 12 =============================

We need to transform the data in the structured format. 


>> Tokens are: 
 ['We', 'need', 'transform', 'data', 'structured', 'format', '.']

>> Bigrams are: 
 [('We', 'need'), ('need', 'transform'), ('transform', 'data'), ('data', 'structured'), ('structured', 'format'), ('format', '.')]

>> Trigrams are: 
 [('We', 'need', 'transform'), ('need', 'transform', 'data'), ('transform', 'data', 'structured'), ('data', 'structured', 'format'), ('structured', 'format', '.')]

>> POS Tags are: 
 [('We', 'PRP'), ('need', 'VBP'), ('transform', 'VB'), ('data', 'NNS'), ('structured', 'VBN'), ('format', 'NN'), ('.', '.')]

 (S
  We/PRP
  need/VBP
  transform/VB
  (NP data/NNS)
  structured/VBN
  (NP format/NN)
  ./.) 


>> Noun Phrases are: 
 ['data', 'format']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('We', 'we'), ('need', 'need'), ('transform', 'transform'), ('data', 'data'), ('structured', 'structur'), ('format', 'format'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('We', 'we'), ('need', 'need'), ('transform', 'transform'), ('data', 'data'), ('structured', 'structur'), ('format', 'format'), ('.', '.')]

>> Lemmatization: 
 [('We', 'We'), ('need', 'need'), ('transform', 'transform'), ('data', 'data'), ('structured', 'structured'), ('format', 'format'), ('.', '.')]



============================ Sentence 13 =============================

Transformation may require changing data types, order in which data appears and even the creation of missing data Performing data analysis Results of the data analysis should be provable and consistent. 


>> Tokens are: 
 ['Transformation', 'may', 'require', 'changing', 'data', 'types', ',', 'order', 'data', 'appears', 'even', 'creation', 'missing', 'data', 'Performing', 'data', 'analysis', 'Results', 'data', 'analysis', 'provable', 'consistent', '.']

>> Bigrams are: 
 [('Transformation', 'may'), ('may', 'require'), ('require', 'changing'), ('changing', 'data'), ('data', 'types'), ('types', ','), (',', 'order'), ('order', 'data'), ('data', 'appears'), ('appears', 'even'), ('even', 'creation'), ('creation', 'missing'), ('missing', 'data'), ('data', 'Performing'), ('Performing', 'data'), ('data', 'analysis'), ('analysis', 'Results'), ('Results', 'data'), ('data', 'analysis'), ('analysis', 'provable'), ('provable', 'consistent'), ('consistent', '.')]

>> Trigrams are: 
 [('Transformation', 'may', 'require'), ('may', 'require', 'changing'), ('require', 'changing', 'data'), ('changing', 'data', 'types'), ('data', 'types', ','), ('types', ',', 'order'), (',', 'order', 'data'), ('order', 'data', 'appears'), ('data', 'appears', 'even'), ('appears', 'even', 'creation'), ('even', 'creation', 'missing'), ('creation', 'missing', 'data'), ('missing', 'data', 'Performing'), ('data', 'Performing', 'data'), ('Performing', 'data', 'analysis'), ('data', 'analysis', 'Results'), ('analysis', 'Results', 'data'), ('Results', 'data', 'analysis'), ('data', 'analysis', 'provable'), ('analysis', 'provable', 'consistent'), ('provable', 'consistent', '.')]

>> POS Tags are: 
 [('Transformation', 'NN'), ('may', 'MD'), ('require', 'VB'), ('changing', 'VBG'), ('data', 'NNS'), ('types', 'NNS'), (',', ','), ('order', 'NN'), ('data', 'NNS'), ('appears', 'VBZ'), ('even', 'RB'), ('creation', 'NN'), ('missing', 'VBG'), ('data', 'NNS'), ('Performing', 'NNP'), ('data', 'NNS'), ('analysis', 'NN'), ('Results', 'NNP'), ('data', 'NNS'), ('analysis', 'NN'), ('provable', 'JJ'), ('consistent', 'NN'), ('.', '.')]

 (S
  (NP Transformation/NN)
  may/MD
  require/VB
  changing/VBG
  (NP data/NNS types/NNS)
  ,/,
  (NP order/NN data/NNS)
  appears/VBZ
  even/RB
  (NP creation/NN)
  missing/VBG
  (NP
    data/NNS
    Performing/NNP
    data/NNS
    analysis/NN
    Results/NNP
    data/NNS
    analysis/NN)
  (NP provable/JJ consistent/NN)
  ./.) 


>> Noun Phrases are: 
 ['Transformation', 'data types', 'order data', 'creation', 'data Performing data analysis Results data analysis', 'provable consistent']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Transformation', 'transform'), ('may', 'may'), ('require', 'requir'), ('changing', 'chang'), ('data', 'data'), ('types', 'type'), (',', ','), ('order', 'order'), ('data', 'data'), ('appears', 'appear'), ('even', 'even'), ('creation', 'creation'), ('missing', 'miss'), ('data', 'data'), ('Performing', 'perform'), ('data', 'data'), ('analysis', 'analysi'), ('Results', 'result'), ('data', 'data'), ('analysis', 'analysi'), ('provable', 'provabl'), ('consistent', 'consist'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Transformation', 'transform'), ('may', 'may'), ('require', 'requir'), ('changing', 'chang'), ('data', 'data'), ('types', 'type'), (',', ','), ('order', 'order'), ('data', 'data'), ('appears', 'appear'), ('even', 'even'), ('creation', 'creation'), ('missing', 'miss'), ('data', 'data'), ('Performing', 'perform'), ('data', 'data'), ('analysis', 'analysi'), ('Results', 'result'), ('data', 'data'), ('analysis', 'analysi'), ('provable', 'provabl'), ('consistent', 'consist'), ('.', '.')]

>> Lemmatization: 
 [('Transformation', 'Transformation'), ('may', 'may'), ('require', 'require'), ('changing', 'changing'), ('data', 'data'), ('types', 'type'), (',', ','), ('order', 'order'), ('data', 'data'), ('appears', 'appears'), ('even', 'even'), ('creation', 'creation'), ('missing', 'missing'), ('data', 'data'), ('Performing', 'Performing'), ('data', 'data'), ('analysis', 'analysis'), ('Results', 'Results'), ('data', 'data'), ('analysis', 'analysis'), ('provable', 'provable'), ('consistent', 'consistent'), ('.', '.')]



============================ Sentence 14 =============================

Some time single approach may not provide the desired output, we need to use multiple algorithms to get the result. 


>> Tokens are: 
 ['Some', 'time', 'single', 'approach', 'may', 'provide', 'desired', 'output', ',', 'need', 'use', 'multiple', 'algorithms', 'get', 'result', '.']

>> Bigrams are: 
 [('Some', 'time'), ('time', 'single'), ('single', 'approach'), ('approach', 'may'), ('may', 'provide'), ('provide', 'desired'), ('desired', 'output'), ('output', ','), (',', 'need'), ('need', 'use'), ('use', 'multiple'), ('multiple', 'algorithms'), ('algorithms', 'get'), ('get', 'result'), ('result', '.')]

>> Trigrams are: 
 [('Some', 'time', 'single'), ('time', 'single', 'approach'), ('single', 'approach', 'may'), ('approach', 'may', 'provide'), ('may', 'provide', 'desired'), ('provide', 'desired', 'output'), ('desired', 'output', ','), ('output', ',', 'need'), (',', 'need', 'use'), ('need', 'use', 'multiple'), ('use', 'multiple', 'algorithms'), ('multiple', 'algorithms', 'get'), ('algorithms', 'get', 'result'), ('get', 'result', '.')]

>> POS Tags are: 
 [('Some', 'DT'), ('time', 'NN'), ('single', 'JJ'), ('approach', 'NN'), ('may', 'MD'), ('provide', 'VB'), ('desired', 'VBD'), ('output', 'NN'), (',', ','), ('need', 'VBP'), ('use', 'VBP'), ('multiple', 'JJ'), ('algorithms', 'NN'), ('get', 'NN'), ('result', 'NN'), ('.', '.')]

 (S
  (NP Some/DT time/NN)
  (NP single/JJ approach/NN)
  may/MD
  provide/VB
  desired/VBD
  (NP output/NN)
  ,/,
  need/VBP
  use/VBP
  (NP multiple/JJ algorithms/NN get/NN result/NN)
  ./.) 


>> Noun Phrases are: 
 ['Some time', 'single approach', 'output', 'multiple algorithms get result']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Some', 'some'), ('time', 'time'), ('single', 'singl'), ('approach', 'approach'), ('may', 'may'), ('provide', 'provid'), ('desired', 'desir'), ('output', 'output'), (',', ','), ('need', 'need'), ('use', 'use'), ('multiple', 'multipl'), ('algorithms', 'algorithm'), ('get', 'get'), ('result', 'result'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Some', 'some'), ('time', 'time'), ('single', 'singl'), ('approach', 'approach'), ('may', 'may'), ('provide', 'provid'), ('desired', 'desir'), ('output', 'output'), (',', ','), ('need', 'need'), ('use', 'use'), ('multiple', 'multipl'), ('algorithms', 'algorithm'), ('get', 'get'), ('result', 'result'), ('.', '.')]

>> Lemmatization: 
 [('Some', 'Some'), ('time', 'time'), ('single', 'single'), ('approach', 'approach'), ('may', 'may'), ('provide', 'provide'), ('desired', 'desired'), ('output', 'output'), (',', ','), ('need', 'need'), ('use', 'use'), ('multiple', 'multiple'), ('algorithms', 'algorithm'), ('get', 'get'), ('result', 'result'), ('.', '.')]



============================ Sentence 15 =============================

The use of trial and error is part of the data science art. 


>> Tokens are: 
 ['The', 'use', 'trial', 'error', 'part', 'data', 'science', 'art', '.']

>> Bigrams are: 
 [('The', 'use'), ('use', 'trial'), ('trial', 'error'), ('error', 'part'), ('part', 'data'), ('data', 'science'), ('science', 'art'), ('art', '.')]

>> Trigrams are: 
 [('The', 'use', 'trial'), ('use', 'trial', 'error'), ('trial', 'error', 'part'), ('error', 'part', 'data'), ('part', 'data', 'science'), ('data', 'science', 'art'), ('science', 'art', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('use', 'NN'), ('trial', 'NN'), ('error', 'NN'), ('part', 'NN'), ('data', 'NNS'), ('science', 'NN'), ('art', 'NN'), ('.', '.')]

 (S
  (NP
    The/DT
    use/NN
    trial/NN
    error/NN
    part/NN
    data/NNS
    science/NN
    art/NN)
  ./.) 


>> Noun Phrases are: 
 ['The use trial error part data science art']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('use', 'use'), ('trial', 'trial'), ('error', 'error'), ('part', 'part'), ('data', 'data'), ('science', 'scienc'), ('art', 'art'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('use', 'use'), ('trial', 'trial'), ('error', 'error'), ('part', 'part'), ('data', 'data'), ('science', 'scienc'), ('art', 'art'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('use', 'use'), ('trial', 'trial'), ('error', 'error'), ('part', 'part'), ('data', 'data'), ('science', 'science'), ('art', 'art'), ('.', '.')]



============================ Sentence 16 =============================

Learning from data As we iterate through various statistical analysis methods and apply algorithms to detect patterns, we begin learning from the data. 


>> Tokens are: 
 ['Learning', 'data', 'As', 'iterate', 'various', 'statistical', 'analysis', 'methods', 'apply', 'algorithms', 'detect', 'patterns', ',', 'begin', 'learning', 'data', '.']

>> Bigrams are: 
 [('Learning', 'data'), ('data', 'As'), ('As', 'iterate'), ('iterate', 'various'), ('various', 'statistical'), ('statistical', 'analysis'), ('analysis', 'methods'), ('methods', 'apply'), ('apply', 'algorithms'), ('algorithms', 'detect'), ('detect', 'patterns'), ('patterns', ','), (',', 'begin'), ('begin', 'learning'), ('learning', 'data'), ('data', '.')]

>> Trigrams are: 
 [('Learning', 'data', 'As'), ('data', 'As', 'iterate'), ('As', 'iterate', 'various'), ('iterate', 'various', 'statistical'), ('various', 'statistical', 'analysis'), ('statistical', 'analysis', 'methods'), ('analysis', 'methods', 'apply'), ('methods', 'apply', 'algorithms'), ('apply', 'algorithms', 'detect'), ('algorithms', 'detect', 'patterns'), ('detect', 'patterns', ','), ('patterns', ',', 'begin'), (',', 'begin', 'learning'), ('begin', 'learning', 'data'), ('learning', 'data', '.')]

>> POS Tags are: 
 [('Learning', 'VBG'), ('data', 'NNS'), ('As', 'IN'), ('iterate', 'NN'), ('various', 'JJ'), ('statistical', 'JJ'), ('analysis', 'NN'), ('methods', 'NNS'), ('apply', 'VBP'), ('algorithms', 'JJ'), ('detect', 'NN'), ('patterns', 'NNS'), (',', ','), ('begin', 'VBP'), ('learning', 'VBG'), ('data', 'NNS'), ('.', '.')]

 (S
  Learning/VBG
  (NP data/NNS)
  As/IN
  (NP iterate/NN)
  (NP various/JJ statistical/JJ analysis/NN methods/NNS)
  apply/VBP
  (NP algorithms/JJ detect/NN patterns/NNS)
  ,/,
  begin/VBP
  learning/VBG
  (NP data/NNS)
  ./.) 


>> Noun Phrases are: 
 ['data', 'iterate', 'various statistical analysis methods', 'algorithms detect patterns', 'data']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Learning', 'learn'), ('data', 'data'), ('As', 'as'), ('iterate', 'iter'), ('various', 'variou'), ('statistical', 'statist'), ('analysis', 'analysi'), ('methods', 'method'), ('apply', 'appli'), ('algorithms', 'algorithm'), ('detect', 'detect'), ('patterns', 'pattern'), (',', ','), ('begin', 'begin'), ('learning', 'learn'), ('data', 'data'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Learning', 'learn'), ('data', 'data'), ('As', 'as'), ('iterate', 'iter'), ('various', 'various'), ('statistical', 'statist'), ('analysis', 'analysi'), ('methods', 'method'), ('apply', 'appli'), ('algorithms', 'algorithm'), ('detect', 'detect'), ('patterns', 'pattern'), (',', ','), ('begin', 'begin'), ('learning', 'learn'), ('data', 'data'), ('.', '.')]

>> Lemmatization: 
 [('Learning', 'Learning'), ('data', 'data'), ('As', 'As'), ('iterate', 'iterate'), ('various', 'various'), ('statistical', 'statistical'), ('analysis', 'analysis'), ('methods', 'method'), ('apply', 'apply'), ('algorithms', 'algorithm'), ('detect', 'detect'), ('patterns', 'pattern'), (',', ','), ('begin', 'begin'), ('learning', 'learning'), ('data', 'data'), ('.', '.')]



============================ Sentence 17 =============================

The data might not tell the story that you originally thought it would. 


>> Tokens are: 
 ['The', 'data', 'might', 'tell', 'story', 'originally', 'thought', 'would', '.']

>> Bigrams are: 
 [('The', 'data'), ('data', 'might'), ('might', 'tell'), ('tell', 'story'), ('story', 'originally'), ('originally', 'thought'), ('thought', 'would'), ('would', '.')]

>> Trigrams are: 
 [('The', 'data', 'might'), ('data', 'might', 'tell'), ('might', 'tell', 'story'), ('tell', 'story', 'originally'), ('story', 'originally', 'thought'), ('originally', 'thought', 'would'), ('thought', 'would', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('data', 'NN'), ('might', 'MD'), ('tell', 'VB'), ('story', 'NN'), ('originally', 'RB'), ('thought', 'VBN'), ('would', 'MD'), ('.', '.')]

 (S
  (NP The/DT data/NN)
  might/MD
  tell/VB
  (NP story/NN)
  originally/RB
  thought/VBN
  would/MD
  ./.) 


>> Noun Phrases are: 
 ['The data', 'story']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('data', 'data'), ('might', 'might'), ('tell', 'tell'), ('story', 'stori'), ('originally', 'origin'), ('thought', 'thought'), ('would', 'would'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('data', 'data'), ('might', 'might'), ('tell', 'tell'), ('story', 'stori'), ('originally', 'origin'), ('thought', 'thought'), ('would', 'would'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('data', 'data'), ('might', 'might'), ('tell', 'tell'), ('story', 'story'), ('originally', 'originally'), ('thought', 'thought'), ('would', 'would'), ('.', '.')]



============================ Sentence 18 =============================

Visualizing Obtaining insights    Prof. Arjun V. Bala #3150713 (PDS)      Unit 02 – Data Science and Python ‹#›  Why Python? 


>> Tokens are: 
 ['Visualizing', 'Obtaining', 'insights', 'Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '02', '–', 'Data', 'Science', 'Python', '‹', '#', '›', 'Why', 'Python', '?']

>> Bigrams are: 
 [('Visualizing', 'Obtaining'), ('Obtaining', 'insights'), ('insights', 'Prof.'), ('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '02'), ('02', '–'), ('–', 'Data'), ('Data', 'Science'), ('Science', 'Python'), ('Python', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Why'), ('Why', 'Python'), ('Python', '?')]

>> Trigrams are: 
 [('Visualizing', 'Obtaining', 'insights'), ('Obtaining', 'insights', 'Prof.'), ('insights', 'Prof.', 'Arjun'), ('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '02'), ('Unit', '02', '–'), ('02', '–', 'Data'), ('–', 'Data', 'Science'), ('Data', 'Science', 'Python'), ('Science', 'Python', '‹'), ('Python', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Why'), ('›', 'Why', 'Python'), ('Why', 'Python', '?')]

>> POS Tags are: 
 [('Visualizing', 'VBG'), ('Obtaining', 'VBG'), ('insights', 'NNS'), ('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('02', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Science', 'NNP'), ('Python', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Why', 'WRB'), ('Python', 'NNP'), ('?', '.')]

 (S
  Visualizing/VBG
  Obtaining/VBG
  (NP insights/NNS Prof./NNP Arjun/NNP V./NNP Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  02/CD
  (NP –/NNP Data/NNP Science/NNP Python/NNP ‹/NNP)
  #/#
  (NP ›/NNP)
  Why/WRB
  (NP Python/NNP)
  ?/.) 


>> Noun Phrases are: 
 ['insights Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Science Python ‹', '›', 'Python']

>> Named Entities are: 
 [('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Python'), ('PERSON', 'Python')] 

>> Stemming using Porter Stemmer: 
 [('Visualizing', 'visual'), ('Obtaining', 'obtain'), ('insights', 'insight'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('02', '02'), ('–', '–'), ('Data', 'data'), ('Science', 'scienc'), ('Python', 'python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Why', 'whi'), ('Python', 'python'), ('?', '?')]

>> Stemming using Snowball Stemmer: 
 [('Visualizing', 'visual'), ('Obtaining', 'obtain'), ('insights', 'insight'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('02', '02'), ('–', '–'), ('Data', 'data'), ('Science', 'scienc'), ('Python', 'python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Why', 'whi'), ('Python', 'python'), ('?', '?')]

>> Lemmatization: 
 [('Visualizing', 'Visualizing'), ('Obtaining', 'Obtaining'), ('insights', 'insight'), ('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('02', '02'), ('–', '–'), ('Data', 'Data'), ('Science', 'Science'), ('Python', 'Python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Why', 'Why'), ('Python', 'Python'), ('?', '?')]



============================ Sentence 19 =============================

Python is the vision of a single person, Guido van Rossum, Guido started the language in December 1989 as a replacement for the ABC language. 


>> Tokens are: 
 ['Python', 'vision', 'single', 'person', ',', 'Guido', 'van', 'Rossum', ',', 'Guido', 'started', 'language', 'December', '1989', 'replacement', 'ABC', 'language', '.']

>> Bigrams are: 
 [('Python', 'vision'), ('vision', 'single'), ('single', 'person'), ('person', ','), (',', 'Guido'), ('Guido', 'van'), ('van', 'Rossum'), ('Rossum', ','), (',', 'Guido'), ('Guido', 'started'), ('started', 'language'), ('language', 'December'), ('December', '1989'), ('1989', 'replacement'), ('replacement', 'ABC'), ('ABC', 'language'), ('language', '.')]

>> Trigrams are: 
 [('Python', 'vision', 'single'), ('vision', 'single', 'person'), ('single', 'person', ','), ('person', ',', 'Guido'), (',', 'Guido', 'van'), ('Guido', 'van', 'Rossum'), ('van', 'Rossum', ','), ('Rossum', ',', 'Guido'), (',', 'Guido', 'started'), ('Guido', 'started', 'language'), ('started', 'language', 'December'), ('language', 'December', '1989'), ('December', '1989', 'replacement'), ('1989', 'replacement', 'ABC'), ('replacement', 'ABC', 'language'), ('ABC', 'language', '.')]

>> POS Tags are: 
 [('Python', 'NNP'), ('vision', 'NN'), ('single', 'JJ'), ('person', 'NN'), (',', ','), ('Guido', 'NNP'), ('van', 'NN'), ('Rossum', 'NNP'), (',', ','), ('Guido', 'NNP'), ('started', 'VBD'), ('language', 'NN'), ('December', 'NNP'), ('1989', 'CD'), ('replacement', 'NN'), ('ABC', 'NNP'), ('language', 'NN'), ('.', '.')]

 (S
  (NP Python/NNP vision/NN)
  (NP single/JJ person/NN)
  ,/,
  (NP Guido/NNP van/NN Rossum/NNP)
  ,/,
  (NP Guido/NNP)
  started/VBD
  (NP language/NN December/NNP)
  1989/CD
  (NP replacement/NN ABC/NNP language/NN)
  ./.) 


>> Noun Phrases are: 
 ['Python vision', 'single person', 'Guido van Rossum', 'Guido', 'language December', 'replacement ABC language']

>> Named Entities are: 
 [('GPE', 'Python'), ('PERSON', 'Guido'), ('PERSON', 'Rossum'), ('PERSON', 'Guido'), ('ORGANIZATION', 'ABC')] 

>> Stemming using Porter Stemmer: 
 [('Python', 'python'), ('vision', 'vision'), ('single', 'singl'), ('person', 'person'), (',', ','), ('Guido', 'guido'), ('van', 'van'), ('Rossum', 'rossum'), (',', ','), ('Guido', 'guido'), ('started', 'start'), ('language', 'languag'), ('December', 'decemb'), ('1989', '1989'), ('replacement', 'replac'), ('ABC', 'abc'), ('language', 'languag'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Python', 'python'), ('vision', 'vision'), ('single', 'singl'), ('person', 'person'), (',', ','), ('Guido', 'guido'), ('van', 'van'), ('Rossum', 'rossum'), (',', ','), ('Guido', 'guido'), ('started', 'start'), ('language', 'languag'), ('December', 'decemb'), ('1989', '1989'), ('replacement', 'replac'), ('ABC', 'abc'), ('language', 'languag'), ('.', '.')]

>> Lemmatization: 
 [('Python', 'Python'), ('vision', 'vision'), ('single', 'single'), ('person', 'person'), (',', ','), ('Guido', 'Guido'), ('van', 'van'), ('Rossum', 'Rossum'), (',', ','), ('Guido', 'Guido'), ('started', 'started'), ('language', 'language'), ('December', 'December'), ('1989', '1989'), ('replacement', 'replacement'), ('ABC', 'ABC'), ('language', 'language'), ('.', '.')]



============================ Sentence 20 =============================

However, it far exceeds the ability to create applications of all types, and in contrast to ABC, boasts four programming styles (programming paradigms) Functional :  Treats every statements as a mathematical equation and avoids any form of state or mutable data The main advantage of this approach is having no side effects to consider. 


>> Tokens are: 
 ['However', ',', 'far', 'exceeds', 'ability', 'create', 'applications', 'types', ',', 'contrast', 'ABC', ',', 'boasts', 'four', 'programming', 'styles', '(', 'programming', 'paradigms', ')', 'Functional', ':', 'Treats', 'every', 'statements', 'mathematical', 'equation', 'avoids', 'form', 'state', 'mutable', 'data', 'The', 'main', 'advantage', 'approach', 'side', 'effects', 'consider', '.']

>> Bigrams are: 
 [('However', ','), (',', 'far'), ('far', 'exceeds'), ('exceeds', 'ability'), ('ability', 'create'), ('create', 'applications'), ('applications', 'types'), ('types', ','), (',', 'contrast'), ('contrast', 'ABC'), ('ABC', ','), (',', 'boasts'), ('boasts', 'four'), ('four', 'programming'), ('programming', 'styles'), ('styles', '('), ('(', 'programming'), ('programming', 'paradigms'), ('paradigms', ')'), (')', 'Functional'), ('Functional', ':'), (':', 'Treats'), ('Treats', 'every'), ('every', 'statements'), ('statements', 'mathematical'), ('mathematical', 'equation'), ('equation', 'avoids'), ('avoids', 'form'), ('form', 'state'), ('state', 'mutable'), ('mutable', 'data'), ('data', 'The'), ('The', 'main'), ('main', 'advantage'), ('advantage', 'approach'), ('approach', 'side'), ('side', 'effects'), ('effects', 'consider'), ('consider', '.')]

>> Trigrams are: 
 [('However', ',', 'far'), (',', 'far', 'exceeds'), ('far', 'exceeds', 'ability'), ('exceeds', 'ability', 'create'), ('ability', 'create', 'applications'), ('create', 'applications', 'types'), ('applications', 'types', ','), ('types', ',', 'contrast'), (',', 'contrast', 'ABC'), ('contrast', 'ABC', ','), ('ABC', ',', 'boasts'), (',', 'boasts', 'four'), ('boasts', 'four', 'programming'), ('four', 'programming', 'styles'), ('programming', 'styles', '('), ('styles', '(', 'programming'), ('(', 'programming', 'paradigms'), ('programming', 'paradigms', ')'), ('paradigms', ')', 'Functional'), (')', 'Functional', ':'), ('Functional', ':', 'Treats'), (':', 'Treats', 'every'), ('Treats', 'every', 'statements'), ('every', 'statements', 'mathematical'), ('statements', 'mathematical', 'equation'), ('mathematical', 'equation', 'avoids'), ('equation', 'avoids', 'form'), ('avoids', 'form', 'state'), ('form', 'state', 'mutable'), ('state', 'mutable', 'data'), ('mutable', 'data', 'The'), ('data', 'The', 'main'), ('The', 'main', 'advantage'), ('main', 'advantage', 'approach'), ('advantage', 'approach', 'side'), ('approach', 'side', 'effects'), ('side', 'effects', 'consider'), ('effects', 'consider', '.')]

>> POS Tags are: 
 [('However', 'RB'), (',', ','), ('far', 'RB'), ('exceeds', 'VBZ'), ('ability', 'NN'), ('create', 'NN'), ('applications', 'NNS'), ('types', 'NNS'), (',', ','), ('contrast', 'NN'), ('ABC', 'NNP'), (',', ','), ('boasts', 'VBZ'), ('four', 'CD'), ('programming', 'NN'), ('styles', 'NNS'), ('(', '('), ('programming', 'VBG'), ('paradigms', 'NN'), (')', ')'), ('Functional', 'NN'), (':', ':'), ('Treats', 'NNS'), ('every', 'DT'), ('statements', 'NNS'), ('mathematical', 'JJ'), ('equation', 'NN'), ('avoids', 'NNS'), ('form', 'VBP'), ('state', 'NN'), ('mutable', 'JJ'), ('data', 'NNS'), ('The', 'DT'), ('main', 'JJ'), ('advantage', 'NN'), ('approach', 'NN'), ('side', 'NN'), ('effects', 'NNS'), ('consider', 'VBP'), ('.', '.')]

 (S
  However/RB
  ,/,
  far/RB
  exceeds/VBZ
  (NP ability/NN create/NN applications/NNS types/NNS)
  ,/,
  (NP contrast/NN ABC/NNP)
  ,/,
  boasts/VBZ
  four/CD
  (NP programming/NN styles/NNS)
  (/(
  programming/VBG
  (NP paradigms/NN)
  )/)
  (NP Functional/NN)
  :/:
  (NP Treats/NNS)
  (NP every/DT statements/NNS)
  (NP mathematical/JJ equation/NN avoids/NNS)
  form/VBP
  (NP state/NN)
  (NP mutable/JJ data/NNS)
  (NP The/DT main/JJ advantage/NN approach/NN side/NN effects/NNS)
  consider/VBP
  ./.) 


>> Noun Phrases are: 
 ['ability create applications types', 'contrast ABC', 'programming styles', 'paradigms', 'Functional', 'Treats', 'every statements', 'mathematical equation avoids', 'state', 'mutable data', 'The main advantage approach side effects']

>> Named Entities are: 
 [('ORGANIZATION', 'ABC')] 

>> Stemming using Porter Stemmer: 
 [('However', 'howev'), (',', ','), ('far', 'far'), ('exceeds', 'exce'), ('ability', 'abil'), ('create', 'creat'), ('applications', 'applic'), ('types', 'type'), (',', ','), ('contrast', 'contrast'), ('ABC', 'abc'), (',', ','), ('boasts', 'boast'), ('four', 'four'), ('programming', 'program'), ('styles', 'style'), ('(', '('), ('programming', 'program'), ('paradigms', 'paradigm'), (')', ')'), ('Functional', 'function'), (':', ':'), ('Treats', 'treat'), ('every', 'everi'), ('statements', 'statement'), ('mathematical', 'mathemat'), ('equation', 'equat'), ('avoids', 'avoid'), ('form', 'form'), ('state', 'state'), ('mutable', 'mutabl'), ('data', 'data'), ('The', 'the'), ('main', 'main'), ('advantage', 'advantag'), ('approach', 'approach'), ('side', 'side'), ('effects', 'effect'), ('consider', 'consid'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('However', 'howev'), (',', ','), ('far', 'far'), ('exceeds', 'exceed'), ('ability', 'abil'), ('create', 'creat'), ('applications', 'applic'), ('types', 'type'), (',', ','), ('contrast', 'contrast'), ('ABC', 'abc'), (',', ','), ('boasts', 'boast'), ('four', 'four'), ('programming', 'program'), ('styles', 'style'), ('(', '('), ('programming', 'program'), ('paradigms', 'paradigm'), (')', ')'), ('Functional', 'function'), (':', ':'), ('Treats', 'treat'), ('every', 'everi'), ('statements', 'statement'), ('mathematical', 'mathemat'), ('equation', 'equat'), ('avoids', 'avoid'), ('form', 'form'), ('state', 'state'), ('mutable', 'mutabl'), ('data', 'data'), ('The', 'the'), ('main', 'main'), ('advantage', 'advantag'), ('approach', 'approach'), ('side', 'side'), ('effects', 'effect'), ('consider', 'consid'), ('.', '.')]

>> Lemmatization: 
 [('However', 'However'), (',', ','), ('far', 'far'), ('exceeds', 'exceeds'), ('ability', 'ability'), ('create', 'create'), ('applications', 'application'), ('types', 'type'), (',', ','), ('contrast', 'contrast'), ('ABC', 'ABC'), (',', ','), ('boasts', 'boast'), ('four', 'four'), ('programming', 'programming'), ('styles', 'style'), ('(', '('), ('programming', 'programming'), ('paradigms', 'paradigm'), (')', ')'), ('Functional', 'Functional'), (':', ':'), ('Treats', 'Treats'), ('every', 'every'), ('statements', 'statement'), ('mathematical', 'mathematical'), ('equation', 'equation'), ('avoids', 'avoids'), ('form', 'form'), ('state', 'state'), ('mutable', 'mutable'), ('data', 'data'), ('The', 'The'), ('main', 'main'), ('advantage', 'advantage'), ('approach', 'approach'), ('side', 'side'), ('effects', 'effect'), ('consider', 'consider'), ('.', '.')]



============================ Sentence 21 =============================

This coding style lends itself better than the others to parallel processing because there is no state to consider. 


>> Tokens are: 
 ['This', 'coding', 'style', 'lends', 'better', 'others', 'parallel', 'processing', 'state', 'consider', '.']

>> Bigrams are: 
 [('This', 'coding'), ('coding', 'style'), ('style', 'lends'), ('lends', 'better'), ('better', 'others'), ('others', 'parallel'), ('parallel', 'processing'), ('processing', 'state'), ('state', 'consider'), ('consider', '.')]

>> Trigrams are: 
 [('This', 'coding', 'style'), ('coding', 'style', 'lends'), ('style', 'lends', 'better'), ('lends', 'better', 'others'), ('better', 'others', 'parallel'), ('others', 'parallel', 'processing'), ('parallel', 'processing', 'state'), ('processing', 'state', 'consider'), ('state', 'consider', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('coding', 'NN'), ('style', 'NN'), ('lends', 'VBZ'), ('better', 'JJR'), ('others', 'NNS'), ('parallel', 'VBP'), ('processing', 'VBG'), ('state', 'NN'), ('consider', 'NN'), ('.', '.')]

 (S
  (NP This/DT coding/NN style/NN)
  lends/VBZ
  better/JJR
  (NP others/NNS)
  parallel/VBP
  processing/VBG
  (NP state/NN consider/NN)
  ./.) 


>> Noun Phrases are: 
 ['This coding style', 'others', 'state consider']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('coding', 'code'), ('style', 'style'), ('lends', 'lend'), ('better', 'better'), ('others', 'other'), ('parallel', 'parallel'), ('processing', 'process'), ('state', 'state'), ('consider', 'consid'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('coding', 'code'), ('style', 'style'), ('lends', 'lend'), ('better', 'better'), ('others', 'other'), ('parallel', 'parallel'), ('processing', 'process'), ('state', 'state'), ('consider', 'consid'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('coding', 'coding'), ('style', 'style'), ('lends', 'lends'), ('better', 'better'), ('others', 'others'), ('parallel', 'parallel'), ('processing', 'processing'), ('state', 'state'), ('consider', 'consider'), ('.', '.')]



============================ Sentence 22 =============================

Many developers prefer this coding style for recursion and for lambda calculus. 


>> Tokens are: 
 ['Many', 'developers', 'prefer', 'coding', 'style', 'recursion', 'lambda', 'calculus', '.']

>> Bigrams are: 
 [('Many', 'developers'), ('developers', 'prefer'), ('prefer', 'coding'), ('coding', 'style'), ('style', 'recursion'), ('recursion', 'lambda'), ('lambda', 'calculus'), ('calculus', '.')]

>> Trigrams are: 
 [('Many', 'developers', 'prefer'), ('developers', 'prefer', 'coding'), ('prefer', 'coding', 'style'), ('coding', 'style', 'recursion'), ('style', 'recursion', 'lambda'), ('recursion', 'lambda', 'calculus'), ('lambda', 'calculus', '.')]

>> POS Tags are: 
 [('Many', 'JJ'), ('developers', 'NNS'), ('prefer', 'VBP'), ('coding', 'VBG'), ('style', 'NN'), ('recursion', 'NN'), ('lambda', 'NN'), ('calculus', 'NN'), ('.', '.')]

 (S
  (NP Many/JJ developers/NNS)
  prefer/VBP
  coding/VBG
  (NP style/NN recursion/NN lambda/NN calculus/NN)
  ./.) 


>> Noun Phrases are: 
 ['Many developers', 'style recursion lambda calculus']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Many', 'mani'), ('developers', 'develop'), ('prefer', 'prefer'), ('coding', 'code'), ('style', 'style'), ('recursion', 'recurs'), ('lambda', 'lambda'), ('calculus', 'calculu'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Many', 'mani'), ('developers', 'develop'), ('prefer', 'prefer'), ('coding', 'code'), ('style', 'style'), ('recursion', 'recurs'), ('lambda', 'lambda'), ('calculus', 'calculus'), ('.', '.')]

>> Lemmatization: 
 [('Many', 'Many'), ('developers', 'developer'), ('prefer', 'prefer'), ('coding', 'coding'), ('style', 'style'), ('recursion', 'recursion'), ('lambda', 'lambda'), ('calculus', 'calculus'), ('.', '.')]



============================ Sentence 23 =============================

Imperative : Performs computations as a direct change to program state. 


>> Tokens are: 
 ['Imperative', ':', 'Performs', 'computations', 'direct', 'change', 'program', 'state', '.']

>> Bigrams are: 
 [('Imperative', ':'), (':', 'Performs'), ('Performs', 'computations'), ('computations', 'direct'), ('direct', 'change'), ('change', 'program'), ('program', 'state'), ('state', '.')]

>> Trigrams are: 
 [('Imperative', ':', 'Performs'), (':', 'Performs', 'computations'), ('Performs', 'computations', 'direct'), ('computations', 'direct', 'change'), ('direct', 'change', 'program'), ('change', 'program', 'state'), ('program', 'state', '.')]

>> POS Tags are: 
 [('Imperative', 'JJ'), (':', ':'), ('Performs', 'NNS'), ('computations', 'NNS'), ('direct', 'JJ'), ('change', 'NN'), ('program', 'NN'), ('state', 'NN'), ('.', '.')]

 (S
  Imperative/JJ
  :/:
  (NP Performs/NNS computations/NNS)
  (NP direct/JJ change/NN program/NN state/NN)
  ./.) 


>> Noun Phrases are: 
 ['Performs computations', 'direct change program state']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Imperative', 'imper'), (':', ':'), ('Performs', 'perform'), ('computations', 'comput'), ('direct', 'direct'), ('change', 'chang'), ('program', 'program'), ('state', 'state'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Imperative', 'imper'), (':', ':'), ('Performs', 'perform'), ('computations', 'comput'), ('direct', 'direct'), ('change', 'chang'), ('program', 'program'), ('state', 'state'), ('.', '.')]

>> Lemmatization: 
 [('Imperative', 'Imperative'), (':', ':'), ('Performs', 'Performs'), ('computations', 'computation'), ('direct', 'direct'), ('change', 'change'), ('program', 'program'), ('state', 'state'), ('.', '.')]



============================ Sentence 24 =============================

This style is especially useful when manipulating data structures and produces elegant but simple code. 


>> Tokens are: 
 ['This', 'style', 'especially', 'useful', 'manipulating', 'data', 'structures', 'produces', 'elegant', 'simple', 'code', '.']

>> Bigrams are: 
 [('This', 'style'), ('style', 'especially'), ('especially', 'useful'), ('useful', 'manipulating'), ('manipulating', 'data'), ('data', 'structures'), ('structures', 'produces'), ('produces', 'elegant'), ('elegant', 'simple'), ('simple', 'code'), ('code', '.')]

>> Trigrams are: 
 [('This', 'style', 'especially'), ('style', 'especially', 'useful'), ('especially', 'useful', 'manipulating'), ('useful', 'manipulating', 'data'), ('manipulating', 'data', 'structures'), ('data', 'structures', 'produces'), ('structures', 'produces', 'elegant'), ('produces', 'elegant', 'simple'), ('elegant', 'simple', 'code'), ('simple', 'code', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('style', 'NN'), ('especially', 'RB'), ('useful', 'JJ'), ('manipulating', 'VBG'), ('data', 'NNS'), ('structures', 'NNS'), ('produces', 'VBZ'), ('elegant', 'JJ'), ('simple', 'JJ'), ('code', 'NN'), ('.', '.')]

 (S
  (NP This/DT style/NN)
  especially/RB
  useful/JJ
  manipulating/VBG
  (NP data/NNS structures/NNS)
  produces/VBZ
  (NP elegant/JJ simple/JJ code/NN)
  ./.) 


>> Noun Phrases are: 
 ['This style', 'data structures', 'elegant simple code']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('style', 'style'), ('especially', 'especi'), ('useful', 'use'), ('manipulating', 'manipul'), ('data', 'data'), ('structures', 'structur'), ('produces', 'produc'), ('elegant', 'eleg'), ('simple', 'simpl'), ('code', 'code'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('style', 'style'), ('especially', 'especi'), ('useful', 'use'), ('manipulating', 'manipul'), ('data', 'data'), ('structures', 'structur'), ('produces', 'produc'), ('elegant', 'eleg'), ('simple', 'simpl'), ('code', 'code'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('style', 'style'), ('especially', 'especially'), ('useful', 'useful'), ('manipulating', 'manipulating'), ('data', 'data'), ('structures', 'structure'), ('produces', 'produce'), ('elegant', 'elegant'), ('simple', 'simple'), ('code', 'code'), ('.', '.')]



============================ Sentence 25 =============================

Object-oriented : Relies on data fields that are treated as objects and manipulated only through prescribed methods. 


>> Tokens are: 
 ['Object-oriented', ':', 'Relies', 'data', 'fields', 'treated', 'objects', 'manipulated', 'prescribed', 'methods', '.']

>> Bigrams are: 
 [('Object-oriented', ':'), (':', 'Relies'), ('Relies', 'data'), ('data', 'fields'), ('fields', 'treated'), ('treated', 'objects'), ('objects', 'manipulated'), ('manipulated', 'prescribed'), ('prescribed', 'methods'), ('methods', '.')]

>> Trigrams are: 
 [('Object-oriented', ':', 'Relies'), (':', 'Relies', 'data'), ('Relies', 'data', 'fields'), ('data', 'fields', 'treated'), ('fields', 'treated', 'objects'), ('treated', 'objects', 'manipulated'), ('objects', 'manipulated', 'prescribed'), ('manipulated', 'prescribed', 'methods'), ('prescribed', 'methods', '.')]

>> POS Tags are: 
 [('Object-oriented', 'JJ'), (':', ':'), ('Relies', 'NNPS'), ('data', 'NNS'), ('fields', 'NNS'), ('treated', 'VBD'), ('objects', 'NNS'), ('manipulated', 'VBN'), ('prescribed', 'JJ'), ('methods', 'NNS'), ('.', '.')]

 (S
  Object-oriented/JJ
  :/:
  Relies/NNPS
  (NP data/NNS fields/NNS)
  treated/VBD
  (NP objects/NNS)
  manipulated/VBN
  (NP prescribed/JJ methods/NNS)
  ./.) 


>> Noun Phrases are: 
 ['data fields', 'objects', 'prescribed methods']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Object-oriented', 'object-ori'), (':', ':'), ('Relies', 'reli'), ('data', 'data'), ('fields', 'field'), ('treated', 'treat'), ('objects', 'object'), ('manipulated', 'manipul'), ('prescribed', 'prescrib'), ('methods', 'method'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Object-oriented', 'object-ori'), (':', ':'), ('Relies', 'reli'), ('data', 'data'), ('fields', 'field'), ('treated', 'treat'), ('objects', 'object'), ('manipulated', 'manipul'), ('prescribed', 'prescrib'), ('methods', 'method'), ('.', '.')]

>> Lemmatization: 
 [('Object-oriented', 'Object-oriented'), (':', ':'), ('Relies', 'Relies'), ('data', 'data'), ('fields', 'field'), ('treated', 'treated'), ('objects', 'object'), ('manipulated', 'manipulated'), ('prescribed', 'prescribed'), ('methods', 'method'), ('.', '.')]



============================ Sentence 26 =============================

Python doesn’t fully support this coding form because it can’t implement features such as data hiding. 


>> Tokens are: 
 ['Python', '’', 'fully', 'support', 'coding', 'form', '’', 'implement', 'features', 'data', 'hiding', '.']

>> Bigrams are: 
 [('Python', '’'), ('’', 'fully'), ('fully', 'support'), ('support', 'coding'), ('coding', 'form'), ('form', '’'), ('’', 'implement'), ('implement', 'features'), ('features', 'data'), ('data', 'hiding'), ('hiding', '.')]

>> Trigrams are: 
 [('Python', '’', 'fully'), ('’', 'fully', 'support'), ('fully', 'support', 'coding'), ('support', 'coding', 'form'), ('coding', 'form', '’'), ('form', '’', 'implement'), ('’', 'implement', 'features'), ('implement', 'features', 'data'), ('features', 'data', 'hiding'), ('data', 'hiding', '.')]

>> POS Tags are: 
 [('Python', 'NNP'), ('’', 'NNP'), ('fully', 'RB'), ('support', 'VB'), ('coding', 'VBG'), ('form', 'NN'), ('’', 'FW'), ('implement', 'NN'), ('features', 'NNS'), ('data', 'VBP'), ('hiding', 'NN'), ('.', '.')]

 (S
  (NP Python/NNP ’/NNP)
  fully/RB
  support/VB
  coding/VBG
  (NP form/NN)
  ’/FW
  (NP implement/NN features/NNS)
  data/VBP
  (NP hiding/NN)
  ./.) 


>> Noun Phrases are: 
 ['Python ’', 'form', 'implement features', 'hiding']

>> Named Entities are: 
 [('PERSON', 'Python')] 

>> Stemming using Porter Stemmer: 
 [('Python', 'python'), ('’', '’'), ('fully', 'fulli'), ('support', 'support'), ('coding', 'code'), ('form', 'form'), ('’', '’'), ('implement', 'implement'), ('features', 'featur'), ('data', 'data'), ('hiding', 'hide'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Python', 'python'), ('’', '’'), ('fully', 'fulli'), ('support', 'support'), ('coding', 'code'), ('form', 'form'), ('’', '’'), ('implement', 'implement'), ('features', 'featur'), ('data', 'data'), ('hiding', 'hide'), ('.', '.')]

>> Lemmatization: 
 [('Python', 'Python'), ('’', '’'), ('fully', 'fully'), ('support', 'support'), ('coding', 'coding'), ('form', 'form'), ('’', '’'), ('implement', 'implement'), ('features', 'feature'), ('data', 'data'), ('hiding', 'hiding'), ('.', '.')]



============================ Sentence 27 =============================

This is useful coding style for complex applications because it supports encapsulation and polymorphism. 


>> Tokens are: 
 ['This', 'useful', 'coding', 'style', 'complex', 'applications', 'supports', 'encapsulation', 'polymorphism', '.']

>> Bigrams are: 
 [('This', 'useful'), ('useful', 'coding'), ('coding', 'style'), ('style', 'complex'), ('complex', 'applications'), ('applications', 'supports'), ('supports', 'encapsulation'), ('encapsulation', 'polymorphism'), ('polymorphism', '.')]

>> Trigrams are: 
 [('This', 'useful', 'coding'), ('useful', 'coding', 'style'), ('coding', 'style', 'complex'), ('style', 'complex', 'applications'), ('complex', 'applications', 'supports'), ('applications', 'supports', 'encapsulation'), ('supports', 'encapsulation', 'polymorphism'), ('encapsulation', 'polymorphism', '.')]

>> POS Tags are: 
 [('This', 'DT'), ('useful', 'JJ'), ('coding', 'NN'), ('style', 'NN'), ('complex', 'JJ'), ('applications', 'NNS'), ('supports', 'VBZ'), ('encapsulation', 'NN'), ('polymorphism', 'NN'), ('.', '.')]

 (S
  (NP This/DT useful/JJ coding/NN style/NN)
  (NP complex/JJ applications/NNS)
  supports/VBZ
  (NP encapsulation/NN polymorphism/NN)
  ./.) 


>> Noun Phrases are: 
 ['This useful coding style', 'complex applications', 'encapsulation polymorphism']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('This', 'thi'), ('useful', 'use'), ('coding', 'code'), ('style', 'style'), ('complex', 'complex'), ('applications', 'applic'), ('supports', 'support'), ('encapsulation', 'encapsul'), ('polymorphism', 'polymorph'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('This', 'this'), ('useful', 'use'), ('coding', 'code'), ('style', 'style'), ('complex', 'complex'), ('applications', 'applic'), ('supports', 'support'), ('encapsulation', 'encapsul'), ('polymorphism', 'polymorph'), ('.', '.')]

>> Lemmatization: 
 [('This', 'This'), ('useful', 'useful'), ('coding', 'coding'), ('style', 'style'), ('complex', 'complex'), ('applications', 'application'), ('supports', 'support'), ('encapsulation', 'encapsulation'), ('polymorphism', 'polymorphism'), ('.', '.')]



============================ Sentence 28 =============================

Procedural :  Treats tasks as step-by-step iterations where common tasks are placed in functions that are called as needed. 


>> Tokens are: 
 ['Procedural', ':', 'Treats', 'tasks', 'step-by-step', 'iterations', 'common', 'tasks', 'placed', 'functions', 'called', 'needed', '.']

>> Bigrams are: 
 [('Procedural', ':'), (':', 'Treats'), ('Treats', 'tasks'), ('tasks', 'step-by-step'), ('step-by-step', 'iterations'), ('iterations', 'common'), ('common', 'tasks'), ('tasks', 'placed'), ('placed', 'functions'), ('functions', 'called'), ('called', 'needed'), ('needed', '.')]

>> Trigrams are: 
 [('Procedural', ':', 'Treats'), (':', 'Treats', 'tasks'), ('Treats', 'tasks', 'step-by-step'), ('tasks', 'step-by-step', 'iterations'), ('step-by-step', 'iterations', 'common'), ('iterations', 'common', 'tasks'), ('common', 'tasks', 'placed'), ('tasks', 'placed', 'functions'), ('placed', 'functions', 'called'), ('functions', 'called', 'needed'), ('called', 'needed', '.')]

>> POS Tags are: 
 [('Procedural', 'JJ'), (':', ':'), ('Treats', 'NNS'), ('tasks', 'VBP'), ('step-by-step', 'JJ'), ('iterations', 'NNS'), ('common', 'JJ'), ('tasks', 'NNS'), ('placed', 'VBN'), ('functions', 'NNS'), ('called', 'VBN'), ('needed', 'VBN'), ('.', '.')]

 (S
  Procedural/JJ
  :/:
  (NP Treats/NNS)
  tasks/VBP
  (NP step-by-step/JJ iterations/NNS)
  (NP common/JJ tasks/NNS)
  placed/VBN
  (NP functions/NNS)
  called/VBN
  needed/VBN
  ./.) 


>> Noun Phrases are: 
 ['Treats', 'step-by-step iterations', 'common tasks', 'functions']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Procedural', 'procedur'), (':', ':'), ('Treats', 'treat'), ('tasks', 'task'), ('step-by-step', 'step-by-step'), ('iterations', 'iter'), ('common', 'common'), ('tasks', 'task'), ('placed', 'place'), ('functions', 'function'), ('called', 'call'), ('needed', 'need'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Procedural', 'procedur'), (':', ':'), ('Treats', 'treat'), ('tasks', 'task'), ('step-by-step', 'step-by-step'), ('iterations', 'iter'), ('common', 'common'), ('tasks', 'task'), ('placed', 'place'), ('functions', 'function'), ('called', 'call'), ('needed', 'need'), ('.', '.')]

>> Lemmatization: 
 [('Procedural', 'Procedural'), (':', ':'), ('Treats', 'Treats'), ('tasks', 'task'), ('step-by-step', 'step-by-step'), ('iterations', 'iteration'), ('common', 'common'), ('tasks', 'task'), ('placed', 'placed'), ('functions', 'function'), ('called', 'called'), ('needed', 'needed'), ('.', '.')]



============================ Sentence 29 =============================

Prof. Arjun V. Bala #3150713 (PDS)      Unit 02 – Data Science and Python ‹#›  Understanding Python's Role in Data Science Python has a unique attribute and is easy to use when it comes to quantitative and analytical computing Data Science Python is widely used and is a favorite tool along being a flexible and open sourced language. 


>> Tokens are: 
 ['Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '02', '–', 'Data', 'Science', 'Python', '‹', '#', '›', 'Understanding', 'Python', "'s", 'Role', 'Data', 'Science', 'Python', 'unique', 'attribute', 'easy', 'use', 'comes', 'quantitative', 'analytical', 'computing', 'Data', 'Science', 'Python', 'widely', 'used', 'favorite', 'tool', 'along', 'flexible', 'open', 'sourced', 'language', '.']

>> Bigrams are: 
 [('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '02'), ('02', '–'), ('–', 'Data'), ('Data', 'Science'), ('Science', 'Python'), ('Python', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Understanding'), ('Understanding', 'Python'), ('Python', "'s"), ("'s", 'Role'), ('Role', 'Data'), ('Data', 'Science'), ('Science', 'Python'), ('Python', 'unique'), ('unique', 'attribute'), ('attribute', 'easy'), ('easy', 'use'), ('use', 'comes'), ('comes', 'quantitative'), ('quantitative', 'analytical'), ('analytical', 'computing'), ('computing', 'Data'), ('Data', 'Science'), ('Science', 'Python'), ('Python', 'widely'), ('widely', 'used'), ('used', 'favorite'), ('favorite', 'tool'), ('tool', 'along'), ('along', 'flexible'), ('flexible', 'open'), ('open', 'sourced'), ('sourced', 'language'), ('language', '.')]

>> Trigrams are: 
 [('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '02'), ('Unit', '02', '–'), ('02', '–', 'Data'), ('–', 'Data', 'Science'), ('Data', 'Science', 'Python'), ('Science', 'Python', '‹'), ('Python', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Understanding'), ('›', 'Understanding', 'Python'), ('Understanding', 'Python', "'s"), ('Python', "'s", 'Role'), ("'s", 'Role', 'Data'), ('Role', 'Data', 'Science'), ('Data', 'Science', 'Python'), ('Science', 'Python', 'unique'), ('Python', 'unique', 'attribute'), ('unique', 'attribute', 'easy'), ('attribute', 'easy', 'use'), ('easy', 'use', 'comes'), ('use', 'comes', 'quantitative'), ('comes', 'quantitative', 'analytical'), ('quantitative', 'analytical', 'computing'), ('analytical', 'computing', 'Data'), ('computing', 'Data', 'Science'), ('Data', 'Science', 'Python'), ('Science', 'Python', 'widely'), ('Python', 'widely', 'used'), ('widely', 'used', 'favorite'), ('used', 'favorite', 'tool'), ('favorite', 'tool', 'along'), ('tool', 'along', 'flexible'), ('along', 'flexible', 'open'), ('flexible', 'open', 'sourced'), ('open', 'sourced', 'language'), ('sourced', 'language', '.')]

>> POS Tags are: 
 [('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('02', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Science', 'NNP'), ('Python', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Understanding', 'NNP'), ('Python', 'NNP'), ("'s", 'POS'), ('Role', 'NNP'), ('Data', 'NNP'), ('Science', 'NNP'), ('Python', 'NNP'), ('unique', 'JJ'), ('attribute', 'NN'), ('easy', 'JJ'), ('use', 'NN'), ('comes', 'VBZ'), ('quantitative', 'JJ'), ('analytical', 'JJ'), ('computing', 'VBG'), ('Data', 'NNP'), ('Science', 'NNP'), ('Python', 'NNP'), ('widely', 'RB'), ('used', 'VBD'), ('favorite', 'JJ'), ('tool', 'NN'), ('along', 'IN'), ('flexible', 'JJ'), ('open', 'JJ'), ('sourced', 'VBN'), ('language', 'NN'), ('.', '.')]

 (S
  (NP Prof./NNP Arjun/NNP V./NNP Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  02/CD
  (NP –/NNP Data/NNP Science/NNP Python/NNP ‹/NNP)
  #/#
  (NP ›/NNP Understanding/NNP Python/NNP)
  's/POS
  (NP Role/NNP Data/NNP Science/NNP Python/NNP)
  (NP unique/JJ attribute/NN)
  (NP easy/JJ use/NN)
  comes/VBZ
  quantitative/JJ
  analytical/JJ
  computing/VBG
  (NP Data/NNP Science/NNP Python/NNP)
  widely/RB
  used/VBD
  (NP favorite/JJ tool/NN)
  along/IN
  flexible/JJ
  open/JJ
  sourced/VBN
  (NP language/NN)
  ./.) 


>> Noun Phrases are: 
 ['Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Science Python ‹', '› Understanding Python', 'Role Data Science Python', 'unique attribute', 'easy use', 'Data Science Python', 'favorite tool', 'language']

>> Named Entities are: 
 [('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Python'), ('PERSON', 'Python'), ('ORGANIZATION', 'Role Data Science Python'), ('PERSON', 'Data Science Python')] 

>> Stemming using Porter Stemmer: 
 [('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('02', '02'), ('–', '–'), ('Data', 'data'), ('Science', 'scienc'), ('Python', 'python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Understanding', 'understand'), ('Python', 'python'), ("'s", "'s"), ('Role', 'role'), ('Data', 'data'), ('Science', 'scienc'), ('Python', 'python'), ('unique', 'uniqu'), ('attribute', 'attribut'), ('easy', 'easi'), ('use', 'use'), ('comes', 'come'), ('quantitative', 'quantit'), ('analytical', 'analyt'), ('computing', 'comput'), ('Data', 'data'), ('Science', 'scienc'), ('Python', 'python'), ('widely', 'wide'), ('used', 'use'), ('favorite', 'favorit'), ('tool', 'tool'), ('along', 'along'), ('flexible', 'flexibl'), ('open', 'open'), ('sourced', 'sourc'), ('language', 'languag'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('02', '02'), ('–', '–'), ('Data', 'data'), ('Science', 'scienc'), ('Python', 'python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Understanding', 'understand'), ('Python', 'python'), ("'s", "'s"), ('Role', 'role'), ('Data', 'data'), ('Science', 'scienc'), ('Python', 'python'), ('unique', 'uniqu'), ('attribute', 'attribut'), ('easy', 'easi'), ('use', 'use'), ('comes', 'come'), ('quantitative', 'quantit'), ('analytical', 'analyt'), ('computing', 'comput'), ('Data', 'data'), ('Science', 'scienc'), ('Python', 'python'), ('widely', 'wide'), ('used', 'use'), ('favorite', 'favorit'), ('tool', 'tool'), ('along', 'along'), ('flexible', 'flexibl'), ('open', 'open'), ('sourced', 'sourc'), ('language', 'languag'), ('.', '.')]

>> Lemmatization: 
 [('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('02', '02'), ('–', '–'), ('Data', 'Data'), ('Science', 'Science'), ('Python', 'Python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Understanding', 'Understanding'), ('Python', 'Python'), ("'s", "'s"), ('Role', 'Role'), ('Data', 'Data'), ('Science', 'Science'), ('Python', 'Python'), ('unique', 'unique'), ('attribute', 'attribute'), ('easy', 'easy'), ('use', 'use'), ('comes', 'come'), ('quantitative', 'quantitative'), ('analytical', 'analytical'), ('computing', 'computing'), ('Data', 'Data'), ('Science', 'Science'), ('Python', 'Python'), ('widely', 'widely'), ('used', 'used'), ('favorite', 'favorite'), ('tool', 'tool'), ('along', 'along'), ('flexible', 'flexible'), ('open', 'open'), ('sourced', 'sourced'), ('language', 'language'), ('.', '.')]



============================ Sentence 30 =============================

Its massive libraries are used for data manipulation and are very easy to learn even for a beginner data analyst. 


>> Tokens are: 
 ['Its', 'massive', 'libraries', 'used', 'data', 'manipulation', 'easy', 'learn', 'even', 'beginner', 'data', 'analyst', '.']

>> Bigrams are: 
 [('Its', 'massive'), ('massive', 'libraries'), ('libraries', 'used'), ('used', 'data'), ('data', 'manipulation'), ('manipulation', 'easy'), ('easy', 'learn'), ('learn', 'even'), ('even', 'beginner'), ('beginner', 'data'), ('data', 'analyst'), ('analyst', '.')]

>> Trigrams are: 
 [('Its', 'massive', 'libraries'), ('massive', 'libraries', 'used'), ('libraries', 'used', 'data'), ('used', 'data', 'manipulation'), ('data', 'manipulation', 'easy'), ('manipulation', 'easy', 'learn'), ('easy', 'learn', 'even'), ('learn', 'even', 'beginner'), ('even', 'beginner', 'data'), ('beginner', 'data', 'analyst'), ('data', 'analyst', '.')]

>> POS Tags are: 
 [('Its', 'PRP$'), ('massive', 'JJ'), ('libraries', 'NNS'), ('used', 'VBN'), ('data', 'NNS'), ('manipulation', 'NN'), ('easy', 'VBP'), ('learn', 'VB'), ('even', 'RB'), ('beginner', 'JJR'), ('data', 'NNS'), ('analyst', 'NN'), ('.', '.')]

 (S
  Its/PRP$
  (NP massive/JJ libraries/NNS)
  used/VBN
  (NP data/NNS manipulation/NN)
  easy/VBP
  learn/VB
  even/RB
  beginner/JJR
  (NP data/NNS analyst/NN)
  ./.) 


>> Noun Phrases are: 
 ['massive libraries', 'data manipulation', 'data analyst']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Its', 'it'), ('massive', 'massiv'), ('libraries', 'librari'), ('used', 'use'), ('data', 'data'), ('manipulation', 'manipul'), ('easy', 'easi'), ('learn', 'learn'), ('even', 'even'), ('beginner', 'beginn'), ('data', 'data'), ('analyst', 'analyst'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Its', 'it'), ('massive', 'massiv'), ('libraries', 'librari'), ('used', 'use'), ('data', 'data'), ('manipulation', 'manipul'), ('easy', 'easi'), ('learn', 'learn'), ('even', 'even'), ('beginner', 'beginn'), ('data', 'data'), ('analyst', 'analyst'), ('.', '.')]

>> Lemmatization: 
 [('Its', 'Its'), ('massive', 'massive'), ('libraries', 'library'), ('used', 'used'), ('data', 'data'), ('manipulation', 'manipulation'), ('easy', 'easy'), ('learn', 'learn'), ('even', 'even'), ('beginner', 'beginner'), ('data', 'data'), ('analyst', 'analyst'), ('.', '.')]



============================ Sentence 31 =============================

Apart from being an independent platform it also easily integrates with any existing infrastructure which can be used to solve the most complex problems. 


>> Tokens are: 
 ['Apart', 'independent', 'platform', 'also', 'easily', 'integrates', 'existing', 'infrastructure', 'used', 'solve', 'complex', 'problems', '.']

>> Bigrams are: 
 [('Apart', 'independent'), ('independent', 'platform'), ('platform', 'also'), ('also', 'easily'), ('easily', 'integrates'), ('integrates', 'existing'), ('existing', 'infrastructure'), ('infrastructure', 'used'), ('used', 'solve'), ('solve', 'complex'), ('complex', 'problems'), ('problems', '.')]

>> Trigrams are: 
 [('Apart', 'independent', 'platform'), ('independent', 'platform', 'also'), ('platform', 'also', 'easily'), ('also', 'easily', 'integrates'), ('easily', 'integrates', 'existing'), ('integrates', 'existing', 'infrastructure'), ('existing', 'infrastructure', 'used'), ('infrastructure', 'used', 'solve'), ('used', 'solve', 'complex'), ('solve', 'complex', 'problems'), ('complex', 'problems', '.')]

>> POS Tags are: 
 [('Apart', 'RB'), ('independent', 'JJ'), ('platform', 'NN'), ('also', 'RB'), ('easily', 'RB'), ('integrates', 'VBZ'), ('existing', 'VBG'), ('infrastructure', 'NN'), ('used', 'VBN'), ('solve', 'NN'), ('complex', 'JJ'), ('problems', 'NNS'), ('.', '.')]

 (S
  Apart/RB
  (NP independent/JJ platform/NN)
  also/RB
  easily/RB
  integrates/VBZ
  existing/VBG
  (NP infrastructure/NN)
  used/VBN
  (NP solve/NN)
  (NP complex/JJ problems/NNS)
  ./.) 


>> Noun Phrases are: 
 ['independent platform', 'infrastructure', 'solve', 'complex problems']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Apart', 'apart'), ('independent', 'independ'), ('platform', 'platform'), ('also', 'also'), ('easily', 'easili'), ('integrates', 'integr'), ('existing', 'exist'), ('infrastructure', 'infrastructur'), ('used', 'use'), ('solve', 'solv'), ('complex', 'complex'), ('problems', 'problem'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Apart', 'apart'), ('independent', 'independ'), ('platform', 'platform'), ('also', 'also'), ('easily', 'easili'), ('integrates', 'integr'), ('existing', 'exist'), ('infrastructure', 'infrastructur'), ('used', 'use'), ('solve', 'solv'), ('complex', 'complex'), ('problems', 'problem'), ('.', '.')]

>> Lemmatization: 
 [('Apart', 'Apart'), ('independent', 'independent'), ('platform', 'platform'), ('also', 'also'), ('easily', 'easily'), ('integrates', 'integrates'), ('existing', 'existing'), ('infrastructure', 'infrastructure'), ('used', 'used'), ('solve', 'solve'), ('complex', 'complex'), ('problems', 'problem'), ('.', '.')]



============================ Sentence 32 =============================

Python is preferred over other data science tools because of following features, Powerful and Easy to use Open Source Choice of Libraries Flexibility Visualization and Graphics Well supported    Prof. Arjun V. Bala #3150713 (PDS)      Unit 02 – Data Science and Python ‹#›  Considering Speed of Execution Analysis takes considerable processing power. 


>> Tokens are: 
 ['Python', 'preferred', 'data', 'science', 'tools', 'following', 'features', ',', 'Powerful', 'Easy', 'use', 'Open', 'Source', 'Choice', 'Libraries', 'Flexibility', 'Visualization', 'Graphics', 'Well', 'supported', 'Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '02', '–', 'Data', 'Science', 'Python', '‹', '#', '›', 'Considering', 'Speed', 'Execution', 'Analysis', 'takes', 'considerable', 'processing', 'power', '.']

>> Bigrams are: 
 [('Python', 'preferred'), ('preferred', 'data'), ('data', 'science'), ('science', 'tools'), ('tools', 'following'), ('following', 'features'), ('features', ','), (',', 'Powerful'), ('Powerful', 'Easy'), ('Easy', 'use'), ('use', 'Open'), ('Open', 'Source'), ('Source', 'Choice'), ('Choice', 'Libraries'), ('Libraries', 'Flexibility'), ('Flexibility', 'Visualization'), ('Visualization', 'Graphics'), ('Graphics', 'Well'), ('Well', 'supported'), ('supported', 'Prof.'), ('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '02'), ('02', '–'), ('–', 'Data'), ('Data', 'Science'), ('Science', 'Python'), ('Python', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Considering'), ('Considering', 'Speed'), ('Speed', 'Execution'), ('Execution', 'Analysis'), ('Analysis', 'takes'), ('takes', 'considerable'), ('considerable', 'processing'), ('processing', 'power'), ('power', '.')]

>> Trigrams are: 
 [('Python', 'preferred', 'data'), ('preferred', 'data', 'science'), ('data', 'science', 'tools'), ('science', 'tools', 'following'), ('tools', 'following', 'features'), ('following', 'features', ','), ('features', ',', 'Powerful'), (',', 'Powerful', 'Easy'), ('Powerful', 'Easy', 'use'), ('Easy', 'use', 'Open'), ('use', 'Open', 'Source'), ('Open', 'Source', 'Choice'), ('Source', 'Choice', 'Libraries'), ('Choice', 'Libraries', 'Flexibility'), ('Libraries', 'Flexibility', 'Visualization'), ('Flexibility', 'Visualization', 'Graphics'), ('Visualization', 'Graphics', 'Well'), ('Graphics', 'Well', 'supported'), ('Well', 'supported', 'Prof.'), ('supported', 'Prof.', 'Arjun'), ('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '02'), ('Unit', '02', '–'), ('02', '–', 'Data'), ('–', 'Data', 'Science'), ('Data', 'Science', 'Python'), ('Science', 'Python', '‹'), ('Python', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Considering'), ('›', 'Considering', 'Speed'), ('Considering', 'Speed', 'Execution'), ('Speed', 'Execution', 'Analysis'), ('Execution', 'Analysis', 'takes'), ('Analysis', 'takes', 'considerable'), ('takes', 'considerable', 'processing'), ('considerable', 'processing', 'power'), ('processing', 'power', '.')]

>> POS Tags are: 
 [('Python', 'NNP'), ('preferred', 'VBD'), ('data', 'NNS'), ('science', 'NN'), ('tools', 'NNS'), ('following', 'VBG'), ('features', 'NNS'), (',', ','), ('Powerful', 'NNP'), ('Easy', 'NNP'), ('use', 'NN'), ('Open', 'NNP'), ('Source', 'NNP'), ('Choice', 'NNP'), ('Libraries', 'NNP'), ('Flexibility', 'NNP'), ('Visualization', 'NNP'), ('Graphics', 'NNP'), ('Well', 'NNP'), ('supported', 'VBD'), ('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('02', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Science', 'NNP'), ('Python', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Considering', 'NNP'), ('Speed', 'NNP'), ('Execution', 'NNP'), ('Analysis', 'NNP'), ('takes', 'VBZ'), ('considerable', 'JJ'), ('processing', 'VBG'), ('power', 'NN'), ('.', '.')]

 (S
  (NP Python/NNP)
  preferred/VBD
  (NP data/NNS science/NN tools/NNS)
  following/VBG
  (NP features/NNS)
  ,/,
  (NP
    Powerful/NNP
    Easy/NNP
    use/NN
    Open/NNP
    Source/NNP
    Choice/NNP
    Libraries/NNP
    Flexibility/NNP
    Visualization/NNP
    Graphics/NNP
    Well/NNP)
  supported/VBD
  (NP Prof./NNP Arjun/NNP V./NNP Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  02/CD
  (NP –/NNP Data/NNP Science/NNP Python/NNP ‹/NNP)
  #/#
  (NP ›/NNP Considering/NNP Speed/NNP Execution/NNP Analysis/NNP)
  takes/VBZ
  considerable/JJ
  processing/VBG
  (NP power/NN)
  ./.) 


>> Noun Phrases are: 
 ['Python', 'data science tools', 'features', 'Powerful Easy use Open Source Choice Libraries Flexibility Visualization Graphics Well', 'Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Science Python ‹', '› Considering Speed Execution Analysis', 'power']

>> Named Entities are: 
 [('PERSON', 'Python'), ('PERSON', 'Powerful Easy'), ('PERSON', 'Open Source Choice Libraries Flexibility'), ('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Python')] 

>> Stemming using Porter Stemmer: 
 [('Python', 'python'), ('preferred', 'prefer'), ('data', 'data'), ('science', 'scienc'), ('tools', 'tool'), ('following', 'follow'), ('features', 'featur'), (',', ','), ('Powerful', 'power'), ('Easy', 'easi'), ('use', 'use'), ('Open', 'open'), ('Source', 'sourc'), ('Choice', 'choic'), ('Libraries', 'librari'), ('Flexibility', 'flexibl'), ('Visualization', 'visual'), ('Graphics', 'graphic'), ('Well', 'well'), ('supported', 'support'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('02', '02'), ('–', '–'), ('Data', 'data'), ('Science', 'scienc'), ('Python', 'python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Considering', 'consid'), ('Speed', 'speed'), ('Execution', 'execut'), ('Analysis', 'analysi'), ('takes', 'take'), ('considerable', 'consider'), ('processing', 'process'), ('power', 'power'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Python', 'python'), ('preferred', 'prefer'), ('data', 'data'), ('science', 'scienc'), ('tools', 'tool'), ('following', 'follow'), ('features', 'featur'), (',', ','), ('Powerful', 'power'), ('Easy', 'easi'), ('use', 'use'), ('Open', 'open'), ('Source', 'sourc'), ('Choice', 'choic'), ('Libraries', 'librari'), ('Flexibility', 'flexibl'), ('Visualization', 'visual'), ('Graphics', 'graphic'), ('Well', 'well'), ('supported', 'support'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('02', '02'), ('–', '–'), ('Data', 'data'), ('Science', 'scienc'), ('Python', 'python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Considering', 'consid'), ('Speed', 'speed'), ('Execution', 'execut'), ('Analysis', 'analysi'), ('takes', 'take'), ('considerable', 'consider'), ('processing', 'process'), ('power', 'power'), ('.', '.')]

>> Lemmatization: 
 [('Python', 'Python'), ('preferred', 'preferred'), ('data', 'data'), ('science', 'science'), ('tools', 'tool'), ('following', 'following'), ('features', 'feature'), (',', ','), ('Powerful', 'Powerful'), ('Easy', 'Easy'), ('use', 'use'), ('Open', 'Open'), ('Source', 'Source'), ('Choice', 'Choice'), ('Libraries', 'Libraries'), ('Flexibility', 'Flexibility'), ('Visualization', 'Visualization'), ('Graphics', 'Graphics'), ('Well', 'Well'), ('supported', 'supported'), ('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('02', '02'), ('–', '–'), ('Data', 'Data'), ('Science', 'Science'), ('Python', 'Python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Considering', 'Considering'), ('Speed', 'Speed'), ('Execution', 'Execution'), ('Analysis', 'Analysis'), ('takes', 'take'), ('considerable', 'considerable'), ('processing', 'processing'), ('power', 'power'), ('.', '.')]



============================ Sentence 33 =============================

The dataset are so large that you can bog down even an incredibly powerful system. 


>> Tokens are: 
 ['The', 'dataset', 'large', 'bog', 'even', 'incredibly', 'powerful', 'system', '.']

>> Bigrams are: 
 [('The', 'dataset'), ('dataset', 'large'), ('large', 'bog'), ('bog', 'even'), ('even', 'incredibly'), ('incredibly', 'powerful'), ('powerful', 'system'), ('system', '.')]

>> Trigrams are: 
 [('The', 'dataset', 'large'), ('dataset', 'large', 'bog'), ('large', 'bog', 'even'), ('bog', 'even', 'incredibly'), ('even', 'incredibly', 'powerful'), ('incredibly', 'powerful', 'system'), ('powerful', 'system', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('dataset', 'NN'), ('large', 'JJ'), ('bog', 'NN'), ('even', 'RB'), ('incredibly', 'RB'), ('powerful', 'JJ'), ('system', 'NN'), ('.', '.')]

 (S
  (NP The/DT dataset/NN)
  (NP large/JJ bog/NN)
  even/RB
  incredibly/RB
  (NP powerful/JJ system/NN)
  ./.) 


>> Noun Phrases are: 
 ['The dataset', 'large bog', 'powerful system']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('dataset', 'dataset'), ('large', 'larg'), ('bog', 'bog'), ('even', 'even'), ('incredibly', 'incred'), ('powerful', 'power'), ('system', 'system'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('dataset', 'dataset'), ('large', 'larg'), ('bog', 'bog'), ('even', 'even'), ('incredibly', 'incred'), ('powerful', 'power'), ('system', 'system'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('dataset', 'dataset'), ('large', 'large'), ('bog', 'bog'), ('even', 'even'), ('incredibly', 'incredibly'), ('powerful', 'powerful'), ('system', 'system'), ('.', '.')]



============================ Sentence 34 =============================

Following factors control the speed of execution for data science application Dataset Size Loading Technique Coding Style Machine capabilities Analysis Algorithm  We will explore all factors in details in following couple of slides. 


>> Tokens are: 
 ['Following', 'factors', 'control', 'speed', 'execution', 'data', 'science', 'application', 'Dataset', 'Size', 'Loading', 'Technique', 'Coding', 'Style', 'Machine', 'capabilities', 'Analysis', 'Algorithm', 'We', 'explore', 'factors', 'details', 'following', 'couple', 'slides', '.']

>> Bigrams are: 
 [('Following', 'factors'), ('factors', 'control'), ('control', 'speed'), ('speed', 'execution'), ('execution', 'data'), ('data', 'science'), ('science', 'application'), ('application', 'Dataset'), ('Dataset', 'Size'), ('Size', 'Loading'), ('Loading', 'Technique'), ('Technique', 'Coding'), ('Coding', 'Style'), ('Style', 'Machine'), ('Machine', 'capabilities'), ('capabilities', 'Analysis'), ('Analysis', 'Algorithm'), ('Algorithm', 'We'), ('We', 'explore'), ('explore', 'factors'), ('factors', 'details'), ('details', 'following'), ('following', 'couple'), ('couple', 'slides'), ('slides', '.')]

>> Trigrams are: 
 [('Following', 'factors', 'control'), ('factors', 'control', 'speed'), ('control', 'speed', 'execution'), ('speed', 'execution', 'data'), ('execution', 'data', 'science'), ('data', 'science', 'application'), ('science', 'application', 'Dataset'), ('application', 'Dataset', 'Size'), ('Dataset', 'Size', 'Loading'), ('Size', 'Loading', 'Technique'), ('Loading', 'Technique', 'Coding'), ('Technique', 'Coding', 'Style'), ('Coding', 'Style', 'Machine'), ('Style', 'Machine', 'capabilities'), ('Machine', 'capabilities', 'Analysis'), ('capabilities', 'Analysis', 'Algorithm'), ('Analysis', 'Algorithm', 'We'), ('Algorithm', 'We', 'explore'), ('We', 'explore', 'factors'), ('explore', 'factors', 'details'), ('factors', 'details', 'following'), ('details', 'following', 'couple'), ('following', 'couple', 'slides'), ('couple', 'slides', '.')]

>> POS Tags are: 
 [('Following', 'VBG'), ('factors', 'NNS'), ('control', 'VBP'), ('speed', 'JJ'), ('execution', 'NN'), ('data', 'NNS'), ('science', 'NN'), ('application', 'NN'), ('Dataset', 'NNP'), ('Size', 'NNP'), ('Loading', 'NNP'), ('Technique', 'NNP'), ('Coding', 'NNP'), ('Style', 'NNP'), ('Machine', 'NNP'), ('capabilities', 'NNS'), ('Analysis', 'NNP'), ('Algorithm', 'NNP'), ('We', 'PRP'), ('explore', 'VBP'), ('factors', 'NNS'), ('details', 'NNS'), ('following', 'VBG'), ('couple', 'NN'), ('slides', 'NNS'), ('.', '.')]

 (S
  Following/VBG
  (NP factors/NNS)
  control/VBP
  (NP
    speed/JJ
    execution/NN
    data/NNS
    science/NN
    application/NN
    Dataset/NNP
    Size/NNP
    Loading/NNP
    Technique/NNP
    Coding/NNP
    Style/NNP
    Machine/NNP
    capabilities/NNS
    Analysis/NNP
    Algorithm/NNP)
  We/PRP
  explore/VBP
  (NP factors/NNS details/NNS)
  following/VBG
  (NP couple/NN slides/NNS)
  ./.) 


>> Noun Phrases are: 
 ['factors', 'speed execution data science application Dataset Size Loading Technique Coding Style Machine capabilities Analysis Algorithm', 'factors details', 'couple slides']

>> Named Entities are: 
 [('PERSON', 'Dataset Size Loading Technique Coding Style Machine'), ('PERSON', 'Analysis Algorithm')] 

>> Stemming using Porter Stemmer: 
 [('Following', 'follow'), ('factors', 'factor'), ('control', 'control'), ('speed', 'speed'), ('execution', 'execut'), ('data', 'data'), ('science', 'scienc'), ('application', 'applic'), ('Dataset', 'dataset'), ('Size', 'size'), ('Loading', 'load'), ('Technique', 'techniqu'), ('Coding', 'code'), ('Style', 'style'), ('Machine', 'machin'), ('capabilities', 'capabl'), ('Analysis', 'analysi'), ('Algorithm', 'algorithm'), ('We', 'we'), ('explore', 'explor'), ('factors', 'factor'), ('details', 'detail'), ('following', 'follow'), ('couple', 'coupl'), ('slides', 'slide'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Following', 'follow'), ('factors', 'factor'), ('control', 'control'), ('speed', 'speed'), ('execution', 'execut'), ('data', 'data'), ('science', 'scienc'), ('application', 'applic'), ('Dataset', 'dataset'), ('Size', 'size'), ('Loading', 'load'), ('Technique', 'techniqu'), ('Coding', 'code'), ('Style', 'style'), ('Machine', 'machin'), ('capabilities', 'capabl'), ('Analysis', 'analysi'), ('Algorithm', 'algorithm'), ('We', 'we'), ('explore', 'explor'), ('factors', 'factor'), ('details', 'detail'), ('following', 'follow'), ('couple', 'coupl'), ('slides', 'slide'), ('.', '.')]

>> Lemmatization: 
 [('Following', 'Following'), ('factors', 'factor'), ('control', 'control'), ('speed', 'speed'), ('execution', 'execution'), ('data', 'data'), ('science', 'science'), ('application', 'application'), ('Dataset', 'Dataset'), ('Size', 'Size'), ('Loading', 'Loading'), ('Technique', 'Technique'), ('Coding', 'Coding'), ('Style', 'Style'), ('Machine', 'Machine'), ('capabilities', 'capability'), ('Analysis', 'Analysis'), ('Algorithm', 'Algorithm'), ('We', 'We'), ('explore', 'explore'), ('factors', 'factor'), ('details', 'detail'), ('following', 'following'), ('couple', 'couple'), ('slides', 'slide'), ('.', '.')]



============================ Sentence 35 =============================

Prof. Arjun V. Bala #3150713 (PDS)      Unit 02 – Data Science and Python ‹#›  Considering Speed of Execution (Cont.) 


>> Tokens are: 
 ['Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '02', '–', 'Data', 'Science', 'Python', '‹', '#', '›', 'Considering', 'Speed', 'Execution', '(', 'Cont', '.', ')']

>> Bigrams are: 
 [('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '02'), ('02', '–'), ('–', 'Data'), ('Data', 'Science'), ('Science', 'Python'), ('Python', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Considering'), ('Considering', 'Speed'), ('Speed', 'Execution'), ('Execution', '('), ('(', 'Cont'), ('Cont', '.'), ('.', ')')]

>> Trigrams are: 
 [('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '02'), ('Unit', '02', '–'), ('02', '–', 'Data'), ('–', 'Data', 'Science'), ('Data', 'Science', 'Python'), ('Science', 'Python', '‹'), ('Python', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Considering'), ('›', 'Considering', 'Speed'), ('Considering', 'Speed', 'Execution'), ('Speed', 'Execution', '('), ('Execution', '(', 'Cont'), ('(', 'Cont', '.'), ('Cont', '.', ')')]

>> POS Tags are: 
 [('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('02', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Science', 'NNP'), ('Python', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Considering', 'NNP'), ('Speed', 'NNP'), ('Execution', 'NNP'), ('(', '('), ('Cont', 'NNP'), ('.', '.'), (')', ')')]

 (S
  (NP Prof./NNP Arjun/NNP V./NNP Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  02/CD
  (NP –/NNP Data/NNP Science/NNP Python/NNP ‹/NNP)
  #/#
  (NP ›/NNP Considering/NNP Speed/NNP Execution/NNP)
  (/(
  (NP Cont/NNP)
  ./.
  )/)) 


>> Noun Phrases are: 
 ['Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Science Python ‹', '› Considering Speed Execution', 'Cont']

>> Named Entities are: 
 [('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Python'), ('ORGANIZATION', 'Cont')] 

>> Stemming using Porter Stemmer: 
 [('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('02', '02'), ('–', '–'), ('Data', 'data'), ('Science', 'scienc'), ('Python', 'python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Considering', 'consid'), ('Speed', 'speed'), ('Execution', 'execut'), ('(', '('), ('Cont', 'cont'), ('.', '.'), (')', ')')]

>> Stemming using Snowball Stemmer: 
 [('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('02', '02'), ('–', '–'), ('Data', 'data'), ('Science', 'scienc'), ('Python', 'python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Considering', 'consid'), ('Speed', 'speed'), ('Execution', 'execut'), ('(', '('), ('Cont', 'cont'), ('.', '.'), (')', ')')]

>> Lemmatization: 
 [('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('02', '02'), ('–', '–'), ('Data', 'Data'), ('Science', 'Science'), ('Python', 'Python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Considering', 'Considering'), ('Speed', 'Speed'), ('Execution', 'Execution'), ('(', '('), ('Cont', 'Cont'), ('.', '.'), (')', ')')]



============================ Sentence 36 =============================

Dataset size :  Data science relies on huge datasets in many cases. 


>> Tokens are: 
 ['Dataset', 'size', ':', 'Data', 'science', 'relies', 'huge', 'datasets', 'many', 'cases', '.']

>> Bigrams are: 
 [('Dataset', 'size'), ('size', ':'), (':', 'Data'), ('Data', 'science'), ('science', 'relies'), ('relies', 'huge'), ('huge', 'datasets'), ('datasets', 'many'), ('many', 'cases'), ('cases', '.')]

>> Trigrams are: 
 [('Dataset', 'size', ':'), ('size', ':', 'Data'), (':', 'Data', 'science'), ('Data', 'science', 'relies'), ('science', 'relies', 'huge'), ('relies', 'huge', 'datasets'), ('huge', 'datasets', 'many'), ('datasets', 'many', 'cases'), ('many', 'cases', '.')]

>> POS Tags are: 
 [('Dataset', 'NNP'), ('size', 'NN'), (':', ':'), ('Data', 'NNP'), ('science', 'NN'), ('relies', 'NNS'), ('huge', 'JJ'), ('datasets', 'NNS'), ('many', 'JJ'), ('cases', 'NNS'), ('.', '.')]

 (S
  (NP Dataset/NNP size/NN)
  :/:
  (NP Data/NNP science/NN relies/NNS)
  (NP huge/JJ datasets/NNS)
  (NP many/JJ cases/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Dataset size', 'Data science relies', 'huge datasets', 'many cases']

>> Named Entities are: 
 [('GPE', 'Dataset')] 

>> Stemming using Porter Stemmer: 
 [('Dataset', 'dataset'), ('size', 'size'), (':', ':'), ('Data', 'data'), ('science', 'scienc'), ('relies', 'reli'), ('huge', 'huge'), ('datasets', 'dataset'), ('many', 'mani'), ('cases', 'case'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Dataset', 'dataset'), ('size', 'size'), (':', ':'), ('Data', 'data'), ('science', 'scienc'), ('relies', 'reli'), ('huge', 'huge'), ('datasets', 'dataset'), ('many', 'mani'), ('cases', 'case'), ('.', '.')]

>> Lemmatization: 
 [('Dataset', 'Dataset'), ('size', 'size'), (':', ':'), ('Data', 'Data'), ('science', 'science'), ('relies', 'relies'), ('huge', 'huge'), ('datasets', 'datasets'), ('many', 'many'), ('cases', 'case'), ('.', '.')]



============================ Sentence 37 =============================

The application type determines the size of dataset in part, but dataset size also relies on the size of the source data. 


>> Tokens are: 
 ['The', 'application', 'type', 'determines', 'size', 'dataset', 'part', ',', 'dataset', 'size', 'also', 'relies', 'size', 'source', 'data', '.']

>> Bigrams are: 
 [('The', 'application'), ('application', 'type'), ('type', 'determines'), ('determines', 'size'), ('size', 'dataset'), ('dataset', 'part'), ('part', ','), (',', 'dataset'), ('dataset', 'size'), ('size', 'also'), ('also', 'relies'), ('relies', 'size'), ('size', 'source'), ('source', 'data'), ('data', '.')]

>> Trigrams are: 
 [('The', 'application', 'type'), ('application', 'type', 'determines'), ('type', 'determines', 'size'), ('determines', 'size', 'dataset'), ('size', 'dataset', 'part'), ('dataset', 'part', ','), ('part', ',', 'dataset'), (',', 'dataset', 'size'), ('dataset', 'size', 'also'), ('size', 'also', 'relies'), ('also', 'relies', 'size'), ('relies', 'size', 'source'), ('size', 'source', 'data'), ('source', 'data', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('application', 'NN'), ('type', 'NN'), ('determines', 'NNS'), ('size', 'NN'), ('dataset', 'IN'), ('part', 'NN'), (',', ','), ('dataset', 'NN'), ('size', 'NN'), ('also', 'RB'), ('relies', 'VBZ'), ('size', 'NN'), ('source', 'NN'), ('data', 'NNS'), ('.', '.')]

 (S
  (NP The/DT application/NN type/NN determines/NNS size/NN)
  dataset/IN
  (NP part/NN)
  ,/,
  (NP dataset/NN size/NN)
  also/RB
  relies/VBZ
  (NP size/NN source/NN data/NNS)
  ./.) 


>> Noun Phrases are: 
 ['The application type determines size', 'part', 'dataset size', 'size source data']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('application', 'applic'), ('type', 'type'), ('determines', 'determin'), ('size', 'size'), ('dataset', 'dataset'), ('part', 'part'), (',', ','), ('dataset', 'dataset'), ('size', 'size'), ('also', 'also'), ('relies', 'reli'), ('size', 'size'), ('source', 'sourc'), ('data', 'data'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('application', 'applic'), ('type', 'type'), ('determines', 'determin'), ('size', 'size'), ('dataset', 'dataset'), ('part', 'part'), (',', ','), ('dataset', 'dataset'), ('size', 'size'), ('also', 'also'), ('relies', 'reli'), ('size', 'size'), ('source', 'sourc'), ('data', 'data'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('application', 'application'), ('type', 'type'), ('determines', 'determines'), ('size', 'size'), ('dataset', 'dataset'), ('part', 'part'), (',', ','), ('dataset', 'dataset'), ('size', 'size'), ('also', 'also'), ('relies', 'relies'), ('size', 'size'), ('source', 'source'), ('data', 'data'), ('.', '.')]



============================ Sentence 38 =============================

Underestimating the effect of dataset size is deadly in data science applications, especially those that need to operate in real time (such as self-driving cars). 


>> Tokens are: 
 ['Underestimating', 'effect', 'dataset', 'size', 'deadly', 'data', 'science', 'applications', ',', 'especially', 'need', 'operate', 'real', 'time', '(', 'self-driving', 'cars', ')', '.']

>> Bigrams are: 
 [('Underestimating', 'effect'), ('effect', 'dataset'), ('dataset', 'size'), ('size', 'deadly'), ('deadly', 'data'), ('data', 'science'), ('science', 'applications'), ('applications', ','), (',', 'especially'), ('especially', 'need'), ('need', 'operate'), ('operate', 'real'), ('real', 'time'), ('time', '('), ('(', 'self-driving'), ('self-driving', 'cars'), ('cars', ')'), (')', '.')]

>> Trigrams are: 
 [('Underestimating', 'effect', 'dataset'), ('effect', 'dataset', 'size'), ('dataset', 'size', 'deadly'), ('size', 'deadly', 'data'), ('deadly', 'data', 'science'), ('data', 'science', 'applications'), ('science', 'applications', ','), ('applications', ',', 'especially'), (',', 'especially', 'need'), ('especially', 'need', 'operate'), ('need', 'operate', 'real'), ('operate', 'real', 'time'), ('real', 'time', '('), ('time', '(', 'self-driving'), ('(', 'self-driving', 'cars'), ('self-driving', 'cars', ')'), ('cars', ')', '.')]

>> POS Tags are: 
 [('Underestimating', 'VBG'), ('effect', 'NN'), ('dataset', 'NN'), ('size', 'NN'), ('deadly', 'RB'), ('data', 'VBD'), ('science', 'NN'), ('applications', 'NNS'), (',', ','), ('especially', 'RB'), ('need', 'VB'), ('operate', 'JJ'), ('real', 'JJ'), ('time', 'NN'), ('(', '('), ('self-driving', 'JJ'), ('cars', 'NNS'), (')', ')'), ('.', '.')]

 (S
  Underestimating/VBG
  (NP effect/NN dataset/NN size/NN)
  deadly/RB
  data/VBD
  (NP science/NN applications/NNS)
  ,/,
  especially/RB
  need/VB
  (NP operate/JJ real/JJ time/NN)
  (/(
  (NP self-driving/JJ cars/NNS)
  )/)
  ./.) 


>> Noun Phrases are: 
 ['effect dataset size', 'science applications', 'operate real time', 'self-driving cars']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Underestimating', 'underestim'), ('effect', 'effect'), ('dataset', 'dataset'), ('size', 'size'), ('deadly', 'deadli'), ('data', 'data'), ('science', 'scienc'), ('applications', 'applic'), (',', ','), ('especially', 'especi'), ('need', 'need'), ('operate', 'oper'), ('real', 'real'), ('time', 'time'), ('(', '('), ('self-driving', 'self-driv'), ('cars', 'car'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Underestimating', 'underestim'), ('effect', 'effect'), ('dataset', 'dataset'), ('size', 'size'), ('deadly', 'dead'), ('data', 'data'), ('science', 'scienc'), ('applications', 'applic'), (',', ','), ('especially', 'especi'), ('need', 'need'), ('operate', 'oper'), ('real', 'real'), ('time', 'time'), ('(', '('), ('self-driving', 'self-driv'), ('cars', 'car'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('Underestimating', 'Underestimating'), ('effect', 'effect'), ('dataset', 'dataset'), ('size', 'size'), ('deadly', 'deadly'), ('data', 'data'), ('science', 'science'), ('applications', 'application'), (',', ','), ('especially', 'especially'), ('need', 'need'), ('operate', 'operate'), ('real', 'real'), ('time', 'time'), ('(', '('), ('self-driving', 'self-driving'), ('cars', 'car'), (')', ')'), ('.', '.')]



============================ Sentence 39 =============================

Loading technique : The method we use to load data for analysis is critical, and we should always use the fastest one even if it means upgrading the hardware to do so. 


>> Tokens are: 
 ['Loading', 'technique', ':', 'The', 'method', 'use', 'load', 'data', 'analysis', 'critical', ',', 'always', 'use', 'fastest', 'one', 'even', 'means', 'upgrading', 'hardware', '.']

>> Bigrams are: 
 [('Loading', 'technique'), ('technique', ':'), (':', 'The'), ('The', 'method'), ('method', 'use'), ('use', 'load'), ('load', 'data'), ('data', 'analysis'), ('analysis', 'critical'), ('critical', ','), (',', 'always'), ('always', 'use'), ('use', 'fastest'), ('fastest', 'one'), ('one', 'even'), ('even', 'means'), ('means', 'upgrading'), ('upgrading', 'hardware'), ('hardware', '.')]

>> Trigrams are: 
 [('Loading', 'technique', ':'), ('technique', ':', 'The'), (':', 'The', 'method'), ('The', 'method', 'use'), ('method', 'use', 'load'), ('use', 'load', 'data'), ('load', 'data', 'analysis'), ('data', 'analysis', 'critical'), ('analysis', 'critical', ','), ('critical', ',', 'always'), (',', 'always', 'use'), ('always', 'use', 'fastest'), ('use', 'fastest', 'one'), ('fastest', 'one', 'even'), ('one', 'even', 'means'), ('even', 'means', 'upgrading'), ('means', 'upgrading', 'hardware'), ('upgrading', 'hardware', '.')]

>> POS Tags are: 
 [('Loading', 'VBG'), ('technique', 'NN'), (':', ':'), ('The', 'DT'), ('method', 'NN'), ('use', 'NN'), ('load', 'NN'), ('data', 'NNS'), ('analysis', 'NN'), ('critical', 'JJ'), (',', ','), ('always', 'RB'), ('use', 'VBP'), ('fastest', 'JJS'), ('one', 'CD'), ('even', 'RB'), ('means', 'VBZ'), ('upgrading', 'JJ'), ('hardware', 'NN'), ('.', '.')]

 (S
  Loading/VBG
  (NP technique/NN)
  :/:
  (NP The/DT method/NN use/NN load/NN data/NNS analysis/NN)
  critical/JJ
  ,/,
  always/RB
  use/VBP
  fastest/JJS
  one/CD
  even/RB
  means/VBZ
  (NP upgrading/JJ hardware/NN)
  ./.) 


>> Noun Phrases are: 
 ['technique', 'The method use load data analysis', 'upgrading hardware']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Loading', 'load'), ('technique', 'techniqu'), (':', ':'), ('The', 'the'), ('method', 'method'), ('use', 'use'), ('load', 'load'), ('data', 'data'), ('analysis', 'analysi'), ('critical', 'critic'), (',', ','), ('always', 'alway'), ('use', 'use'), ('fastest', 'fastest'), ('one', 'one'), ('even', 'even'), ('means', 'mean'), ('upgrading', 'upgrad'), ('hardware', 'hardwar'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Loading', 'load'), ('technique', 'techniqu'), (':', ':'), ('The', 'the'), ('method', 'method'), ('use', 'use'), ('load', 'load'), ('data', 'data'), ('analysis', 'analysi'), ('critical', 'critic'), (',', ','), ('always', 'alway'), ('use', 'use'), ('fastest', 'fastest'), ('one', 'one'), ('even', 'even'), ('means', 'mean'), ('upgrading', 'upgrad'), ('hardware', 'hardwar'), ('.', '.')]

>> Lemmatization: 
 [('Loading', 'Loading'), ('technique', 'technique'), (':', ':'), ('The', 'The'), ('method', 'method'), ('use', 'use'), ('load', 'load'), ('data', 'data'), ('analysis', 'analysis'), ('critical', 'critical'), (',', ','), ('always', 'always'), ('use', 'use'), ('fastest', 'fastest'), ('one', 'one'), ('even', 'even'), ('means', 'mean'), ('upgrading', 'upgrading'), ('hardware', 'hardware'), ('.', '.')]



============================ Sentence 40 =============================

Working with data in memory is always faster than working with data stored on disk. 


>> Tokens are: 
 ['Working', 'data', 'memory', 'always', 'faster', 'working', 'data', 'stored', 'disk', '.']

>> Bigrams are: 
 [('Working', 'data'), ('data', 'memory'), ('memory', 'always'), ('always', 'faster'), ('faster', 'working'), ('working', 'data'), ('data', 'stored'), ('stored', 'disk'), ('disk', '.')]

>> Trigrams are: 
 [('Working', 'data', 'memory'), ('data', 'memory', 'always'), ('memory', 'always', 'faster'), ('always', 'faster', 'working'), ('faster', 'working', 'data'), ('working', 'data', 'stored'), ('data', 'stored', 'disk'), ('stored', 'disk', '.')]

>> POS Tags are: 
 [('Working', 'VBG'), ('data', 'NNS'), ('memory', 'NN'), ('always', 'RB'), ('faster', 'RBR'), ('working', 'VBG'), ('data', 'NNS'), ('stored', 'VBN'), ('disk', 'NN'), ('.', '.')]

 (S
  Working/VBG
  (NP data/NNS memory/NN)
  always/RB
  faster/RBR
  working/VBG
  (NP data/NNS)
  stored/VBN
  (NP disk/NN)
  ./.) 


>> Noun Phrases are: 
 ['data memory', 'data', 'disk']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Working', 'work'), ('data', 'data'), ('memory', 'memori'), ('always', 'alway'), ('faster', 'faster'), ('working', 'work'), ('data', 'data'), ('stored', 'store'), ('disk', 'disk'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Working', 'work'), ('data', 'data'), ('memory', 'memori'), ('always', 'alway'), ('faster', 'faster'), ('working', 'work'), ('data', 'data'), ('stored', 'store'), ('disk', 'disk'), ('.', '.')]

>> Lemmatization: 
 [('Working', 'Working'), ('data', 'data'), ('memory', 'memory'), ('always', 'always'), ('faster', 'faster'), ('working', 'working'), ('data', 'data'), ('stored', 'stored'), ('disk', 'disk'), ('.', '.')]



============================ Sentence 41 =============================

Accessing local data is always faster than accessing it across a network. 


>> Tokens are: 
 ['Accessing', 'local', 'data', 'always', 'faster', 'accessing', 'across', 'network', '.']

>> Bigrams are: 
 [('Accessing', 'local'), ('local', 'data'), ('data', 'always'), ('always', 'faster'), ('faster', 'accessing'), ('accessing', 'across'), ('across', 'network'), ('network', '.')]

>> Trigrams are: 
 [('Accessing', 'local', 'data'), ('local', 'data', 'always'), ('data', 'always', 'faster'), ('always', 'faster', 'accessing'), ('faster', 'accessing', 'across'), ('accessing', 'across', 'network'), ('across', 'network', '.')]

>> POS Tags are: 
 [('Accessing', 'VBG'), ('local', 'JJ'), ('data', 'NNS'), ('always', 'RB'), ('faster', 'RBR'), ('accessing', 'VBG'), ('across', 'IN'), ('network', 'NN'), ('.', '.')]

 (S
  Accessing/VBG
  (NP local/JJ data/NNS)
  always/RB
  faster/RBR
  accessing/VBG
  across/IN
  (NP network/NN)
  ./.) 


>> Noun Phrases are: 
 ['local data', 'network']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Accessing', 'access'), ('local', 'local'), ('data', 'data'), ('always', 'alway'), ('faster', 'faster'), ('accessing', 'access'), ('across', 'across'), ('network', 'network'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Accessing', 'access'), ('local', 'local'), ('data', 'data'), ('always', 'alway'), ('faster', 'faster'), ('accessing', 'access'), ('across', 'across'), ('network', 'network'), ('.', '.')]

>> Lemmatization: 
 [('Accessing', 'Accessing'), ('local', 'local'), ('data', 'data'), ('always', 'always'), ('faster', 'faster'), ('accessing', 'accessing'), ('across', 'across'), ('network', 'network'), ('.', '.')]



============================ Sentence 42 =============================

Performing data science tasks that rely on network is probably the slowest method of all    Prof. Arjun V. Bala #3150713 (PDS)      Unit 02 – Data Science and Python ‹#›  Considering Speed of Execution (Cont.) 


>> Tokens are: 
 ['Performing', 'data', 'science', 'tasks', 'rely', 'network', 'probably', 'slowest', 'method', 'Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '02', '–', 'Data', 'Science', 'Python', '‹', '#', '›', 'Considering', 'Speed', 'Execution', '(', 'Cont', '.', ')']

>> Bigrams are: 
 [('Performing', 'data'), ('data', 'science'), ('science', 'tasks'), ('tasks', 'rely'), ('rely', 'network'), ('network', 'probably'), ('probably', 'slowest'), ('slowest', 'method'), ('method', 'Prof.'), ('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '02'), ('02', '–'), ('–', 'Data'), ('Data', 'Science'), ('Science', 'Python'), ('Python', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Considering'), ('Considering', 'Speed'), ('Speed', 'Execution'), ('Execution', '('), ('(', 'Cont'), ('Cont', '.'), ('.', ')')]

>> Trigrams are: 
 [('Performing', 'data', 'science'), ('data', 'science', 'tasks'), ('science', 'tasks', 'rely'), ('tasks', 'rely', 'network'), ('rely', 'network', 'probably'), ('network', 'probably', 'slowest'), ('probably', 'slowest', 'method'), ('slowest', 'method', 'Prof.'), ('method', 'Prof.', 'Arjun'), ('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '02'), ('Unit', '02', '–'), ('02', '–', 'Data'), ('–', 'Data', 'Science'), ('Data', 'Science', 'Python'), ('Science', 'Python', '‹'), ('Python', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Considering'), ('›', 'Considering', 'Speed'), ('Considering', 'Speed', 'Execution'), ('Speed', 'Execution', '('), ('Execution', '(', 'Cont'), ('(', 'Cont', '.'), ('Cont', '.', ')')]

>> POS Tags are: 
 [('Performing', 'VBG'), ('data', 'NNS'), ('science', 'NN'), ('tasks', 'NNS'), ('rely', 'VBP'), ('network', 'NN'), ('probably', 'RB'), ('slowest', 'JJS'), ('method', 'NN'), ('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('02', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Science', 'NNP'), ('Python', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Considering', 'NNP'), ('Speed', 'NNP'), ('Execution', 'NNP'), ('(', '('), ('Cont', 'NNP'), ('.', '.'), (')', ')')]

 (S
  Performing/VBG
  (NP data/NNS science/NN tasks/NNS)
  rely/VBP
  (NP network/NN)
  probably/RB
  slowest/JJS
  (NP method/NN Prof./NNP Arjun/NNP V./NNP Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  02/CD
  (NP –/NNP Data/NNP Science/NNP Python/NNP ‹/NNP)
  #/#
  (NP ›/NNP Considering/NNP Speed/NNP Execution/NNP)
  (/(
  (NP Cont/NNP)
  ./.
  )/)) 


>> Noun Phrases are: 
 ['data science tasks', 'network', 'method Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Science Python ‹', '› Considering Speed Execution', 'Cont']

>> Named Entities are: 
 [('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Python'), ('ORGANIZATION', 'Cont')] 

>> Stemming using Porter Stemmer: 
 [('Performing', 'perform'), ('data', 'data'), ('science', 'scienc'), ('tasks', 'task'), ('rely', 'reli'), ('network', 'network'), ('probably', 'probabl'), ('slowest', 'slowest'), ('method', 'method'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('02', '02'), ('–', '–'), ('Data', 'data'), ('Science', 'scienc'), ('Python', 'python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Considering', 'consid'), ('Speed', 'speed'), ('Execution', 'execut'), ('(', '('), ('Cont', 'cont'), ('.', '.'), (')', ')')]

>> Stemming using Snowball Stemmer: 
 [('Performing', 'perform'), ('data', 'data'), ('science', 'scienc'), ('tasks', 'task'), ('rely', 'reli'), ('network', 'network'), ('probably', 'probabl'), ('slowest', 'slowest'), ('method', 'method'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('02', '02'), ('–', '–'), ('Data', 'data'), ('Science', 'scienc'), ('Python', 'python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Considering', 'consid'), ('Speed', 'speed'), ('Execution', 'execut'), ('(', '('), ('Cont', 'cont'), ('.', '.'), (')', ')')]

>> Lemmatization: 
 [('Performing', 'Performing'), ('data', 'data'), ('science', 'science'), ('tasks', 'task'), ('rely', 'rely'), ('network', 'network'), ('probably', 'probably'), ('slowest', 'slowest'), ('method', 'method'), ('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('02', '02'), ('–', '–'), ('Data', 'Data'), ('Science', 'Science'), ('Python', 'Python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Considering', 'Considering'), ('Speed', 'Speed'), ('Execution', 'Execution'), ('(', '('), ('Cont', 'Cont'), ('.', '.'), (')', ')')]



============================ Sentence 43 =============================

Coding Style : Anyone can create a slow application using any programming language by employing coding techniques that don’t make the best use of programming language functionality. 


>> Tokens are: 
 ['Coding', 'Style', ':', 'Anyone', 'create', 'slow', 'application', 'using', 'programming', 'language', 'employing', 'coding', 'techniques', '’', 'make', 'best', 'use', 'programming', 'language', 'functionality', '.']

>> Bigrams are: 
 [('Coding', 'Style'), ('Style', ':'), (':', 'Anyone'), ('Anyone', 'create'), ('create', 'slow'), ('slow', 'application'), ('application', 'using'), ('using', 'programming'), ('programming', 'language'), ('language', 'employing'), ('employing', 'coding'), ('coding', 'techniques'), ('techniques', '’'), ('’', 'make'), ('make', 'best'), ('best', 'use'), ('use', 'programming'), ('programming', 'language'), ('language', 'functionality'), ('functionality', '.')]

>> Trigrams are: 
 [('Coding', 'Style', ':'), ('Style', ':', 'Anyone'), (':', 'Anyone', 'create'), ('Anyone', 'create', 'slow'), ('create', 'slow', 'application'), ('slow', 'application', 'using'), ('application', 'using', 'programming'), ('using', 'programming', 'language'), ('programming', 'language', 'employing'), ('language', 'employing', 'coding'), ('employing', 'coding', 'techniques'), ('coding', 'techniques', '’'), ('techniques', '’', 'make'), ('’', 'make', 'best'), ('make', 'best', 'use'), ('best', 'use', 'programming'), ('use', 'programming', 'language'), ('programming', 'language', 'functionality'), ('language', 'functionality', '.')]

>> POS Tags are: 
 [('Coding', 'VBG'), ('Style', 'NN'), (':', ':'), ('Anyone', 'NN'), ('create', 'NN'), ('slow', 'JJ'), ('application', 'NN'), ('using', 'VBG'), ('programming', 'JJ'), ('language', 'NN'), ('employing', 'VBG'), ('coding', 'VBG'), ('techniques', 'NNS'), ('’', 'NNP'), ('make', 'VBP'), ('best', 'JJS'), ('use', 'NN'), ('programming', 'VBG'), ('language', 'NN'), ('functionality', 'NN'), ('.', '.')]

 (S
  Coding/VBG
  (NP Style/NN)
  :/:
  (NP Anyone/NN create/NN)
  (NP slow/JJ application/NN)
  using/VBG
  (NP programming/JJ language/NN)
  employing/VBG
  coding/VBG
  (NP techniques/NNS ’/NNP)
  make/VBP
  best/JJS
  (NP use/NN)
  programming/VBG
  (NP language/NN functionality/NN)
  ./.) 


>> Noun Phrases are: 
 ['Style', 'Anyone create', 'slow application', 'programming language', 'techniques ’', 'use', 'language functionality']

>> Named Entities are: 
 [('PERSON', 'Style')] 

>> Stemming using Porter Stemmer: 
 [('Coding', 'code'), ('Style', 'style'), (':', ':'), ('Anyone', 'anyon'), ('create', 'creat'), ('slow', 'slow'), ('application', 'applic'), ('using', 'use'), ('programming', 'program'), ('language', 'languag'), ('employing', 'employ'), ('coding', 'code'), ('techniques', 'techniqu'), ('’', '’'), ('make', 'make'), ('best', 'best'), ('use', 'use'), ('programming', 'program'), ('language', 'languag'), ('functionality', 'function'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Coding', 'code'), ('Style', 'style'), (':', ':'), ('Anyone', 'anyon'), ('create', 'creat'), ('slow', 'slow'), ('application', 'applic'), ('using', 'use'), ('programming', 'program'), ('language', 'languag'), ('employing', 'employ'), ('coding', 'code'), ('techniques', 'techniqu'), ('’', '’'), ('make', 'make'), ('best', 'best'), ('use', 'use'), ('programming', 'program'), ('language', 'languag'), ('functionality', 'function'), ('.', '.')]

>> Lemmatization: 
 [('Coding', 'Coding'), ('Style', 'Style'), (':', ':'), ('Anyone', 'Anyone'), ('create', 'create'), ('slow', 'slow'), ('application', 'application'), ('using', 'using'), ('programming', 'programming'), ('language', 'language'), ('employing', 'employing'), ('coding', 'coding'), ('techniques', 'technique'), ('’', '’'), ('make', 'make'), ('best', 'best'), ('use', 'use'), ('programming', 'programming'), ('language', 'language'), ('functionality', 'functionality'), ('.', '.')]



============================ Sentence 44 =============================

To create fast data science applications, you must use best-of-method coding techniques. 


>> Tokens are: 
 ['To', 'create', 'fast', 'data', 'science', 'applications', ',', 'must', 'use', 'best-of-method', 'coding', 'techniques', '.']

>> Bigrams are: 
 [('To', 'create'), ('create', 'fast'), ('fast', 'data'), ('data', 'science'), ('science', 'applications'), ('applications', ','), (',', 'must'), ('must', 'use'), ('use', 'best-of-method'), ('best-of-method', 'coding'), ('coding', 'techniques'), ('techniques', '.')]

>> Trigrams are: 
 [('To', 'create', 'fast'), ('create', 'fast', 'data'), ('fast', 'data', 'science'), ('data', 'science', 'applications'), ('science', 'applications', ','), ('applications', ',', 'must'), (',', 'must', 'use'), ('must', 'use', 'best-of-method'), ('use', 'best-of-method', 'coding'), ('best-of-method', 'coding', 'techniques'), ('coding', 'techniques', '.')]

>> POS Tags are: 
 [('To', 'TO'), ('create', 'VB'), ('fast', 'JJ'), ('data', 'NNS'), ('science', 'NN'), ('applications', 'NNS'), (',', ','), ('must', 'MD'), ('use', 'VB'), ('best-of-method', 'JJ'), ('coding', 'NN'), ('techniques', 'NNS'), ('.', '.')]

 (S
  To/TO
  create/VB
  (NP fast/JJ data/NNS science/NN applications/NNS)
  ,/,
  must/MD
  use/VB
  (NP best-of-method/JJ coding/NN techniques/NNS)
  ./.) 


>> Noun Phrases are: 
 ['fast data science applications', 'best-of-method coding techniques']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('To', 'to'), ('create', 'creat'), ('fast', 'fast'), ('data', 'data'), ('science', 'scienc'), ('applications', 'applic'), (',', ','), ('must', 'must'), ('use', 'use'), ('best-of-method', 'best-of-method'), ('coding', 'code'), ('techniques', 'techniqu'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('To', 'to'), ('create', 'creat'), ('fast', 'fast'), ('data', 'data'), ('science', 'scienc'), ('applications', 'applic'), (',', ','), ('must', 'must'), ('use', 'use'), ('best-of-method', 'best-of-method'), ('coding', 'code'), ('techniques', 'techniqu'), ('.', '.')]

>> Lemmatization: 
 [('To', 'To'), ('create', 'create'), ('fast', 'fast'), ('data', 'data'), ('science', 'science'), ('applications', 'application'), (',', ','), ('must', 'must'), ('use', 'use'), ('best-of-method', 'best-of-method'), ('coding', 'coding'), ('techniques', 'technique'), ('.', '.')]



============================ Sentence 45 =============================

Machine Capability : Running data science applications on a memory-constrained system with a slower processor is impossible. 


>> Tokens are: 
 ['Machine', 'Capability', ':', 'Running', 'data', 'science', 'applications', 'memory-constrained', 'system', 'slower', 'processor', 'impossible', '.']

>> Bigrams are: 
 [('Machine', 'Capability'), ('Capability', ':'), (':', 'Running'), ('Running', 'data'), ('data', 'science'), ('science', 'applications'), ('applications', 'memory-constrained'), ('memory-constrained', 'system'), ('system', 'slower'), ('slower', 'processor'), ('processor', 'impossible'), ('impossible', '.')]

>> Trigrams are: 
 [('Machine', 'Capability', ':'), ('Capability', ':', 'Running'), (':', 'Running', 'data'), ('Running', 'data', 'science'), ('data', 'science', 'applications'), ('science', 'applications', 'memory-constrained'), ('applications', 'memory-constrained', 'system'), ('memory-constrained', 'system', 'slower'), ('system', 'slower', 'processor'), ('slower', 'processor', 'impossible'), ('processor', 'impossible', '.')]

>> POS Tags are: 
 [('Machine', 'NN'), ('Capability', 'NN'), (':', ':'), ('Running', 'NNP'), ('data', 'NNS'), ('science', 'NN'), ('applications', 'NNS'), ('memory-constrained', 'JJ'), ('system', 'NN'), ('slower', 'JJR'), ('processor', 'NN'), ('impossible', 'JJ'), ('.', '.')]

 (S
  (NP Machine/NN Capability/NN)
  :/:
  (NP Running/NNP data/NNS science/NN applications/NNS)
  (NP memory-constrained/JJ system/NN)
  slower/JJR
  (NP processor/NN)
  impossible/JJ
  ./.) 


>> Noun Phrases are: 
 ['Machine Capability', 'Running data science applications', 'memory-constrained system', 'processor']

>> Named Entities are: 
 [('GPE', 'Machine'), ('ORGANIZATION', 'Capability')] 

>> Stemming using Porter Stemmer: 
 [('Machine', 'machin'), ('Capability', 'capabl'), (':', ':'), ('Running', 'run'), ('data', 'data'), ('science', 'scienc'), ('applications', 'applic'), ('memory-constrained', 'memory-constrain'), ('system', 'system'), ('slower', 'slower'), ('processor', 'processor'), ('impossible', 'imposs'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Machine', 'machin'), ('Capability', 'capabl'), (':', ':'), ('Running', 'run'), ('data', 'data'), ('science', 'scienc'), ('applications', 'applic'), ('memory-constrained', 'memory-constrain'), ('system', 'system'), ('slower', 'slower'), ('processor', 'processor'), ('impossible', 'imposs'), ('.', '.')]

>> Lemmatization: 
 [('Machine', 'Machine'), ('Capability', 'Capability'), (':', ':'), ('Running', 'Running'), ('data', 'data'), ('science', 'science'), ('applications', 'application'), ('memory-constrained', 'memory-constrained'), ('system', 'system'), ('slower', 'slower'), ('processor', 'processor'), ('impossible', 'impossible'), ('.', '.')]



============================ Sentence 46 =============================

The system you use needs to have the best hardware you can afford. 


>> Tokens are: 
 ['The', 'system', 'use', 'needs', 'best', 'hardware', 'afford', '.']

>> Bigrams are: 
 [('The', 'system'), ('system', 'use'), ('use', 'needs'), ('needs', 'best'), ('best', 'hardware'), ('hardware', 'afford'), ('afford', '.')]

>> Trigrams are: 
 [('The', 'system', 'use'), ('system', 'use', 'needs'), ('use', 'needs', 'best'), ('needs', 'best', 'hardware'), ('best', 'hardware', 'afford'), ('hardware', 'afford', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('system', 'NN'), ('use', 'NN'), ('needs', 'VBZ'), ('best', 'RBS'), ('hardware', 'NN'), ('afford', 'NN'), ('.', '.')]

 (S
  (NP The/DT system/NN use/NN)
  needs/VBZ
  best/RBS
  (NP hardware/NN afford/NN)
  ./.) 


>> Noun Phrases are: 
 ['The system use', 'hardware afford']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('system', 'system'), ('use', 'use'), ('needs', 'need'), ('best', 'best'), ('hardware', 'hardwar'), ('afford', 'afford'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('system', 'system'), ('use', 'use'), ('needs', 'need'), ('best', 'best'), ('hardware', 'hardwar'), ('afford', 'afford'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('system', 'system'), ('use', 'use'), ('needs', 'need'), ('best', 'best'), ('hardware', 'hardware'), ('afford', 'afford'), ('.', '.')]



============================ Sentence 47 =============================

Given that data science applications are both processor and disk bound, you can’t really cut corners in any area and expect great results. 


>> Tokens are: 
 ['Given', 'data', 'science', 'applications', 'processor', 'disk', 'bound', ',', '’', 'really', 'cut', 'corners', 'area', 'expect', 'great', 'results', '.']

>> Bigrams are: 
 [('Given', 'data'), ('data', 'science'), ('science', 'applications'), ('applications', 'processor'), ('processor', 'disk'), ('disk', 'bound'), ('bound', ','), (',', '’'), ('’', 'really'), ('really', 'cut'), ('cut', 'corners'), ('corners', 'area'), ('area', 'expect'), ('expect', 'great'), ('great', 'results'), ('results', '.')]

>> Trigrams are: 
 [('Given', 'data', 'science'), ('data', 'science', 'applications'), ('science', 'applications', 'processor'), ('applications', 'processor', 'disk'), ('processor', 'disk', 'bound'), ('disk', 'bound', ','), ('bound', ',', '’'), (',', '’', 'really'), ('’', 'really', 'cut'), ('really', 'cut', 'corners'), ('cut', 'corners', 'area'), ('corners', 'area', 'expect'), ('area', 'expect', 'great'), ('expect', 'great', 'results'), ('great', 'results', '.')]

>> POS Tags are: 
 [('Given', 'VBN'), ('data', 'NNS'), ('science', 'NN'), ('applications', 'NNS'), ('processor', 'VBP'), ('disk', 'NN'), ('bound', 'NN'), (',', ','), ('’', 'NNP'), ('really', 'RB'), ('cut', 'VBD'), ('corners', 'NNS'), ('area', 'NN'), ('expect', 'VBP'), ('great', 'JJ'), ('results', 'NNS'), ('.', '.')]

 (S
  Given/VBN
  (NP data/NNS science/NN applications/NNS)
  processor/VBP
  (NP disk/NN bound/NN)
  ,/,
  (NP ’/NNP)
  really/RB
  cut/VBD
  (NP corners/NNS area/NN)
  expect/VBP
  (NP great/JJ results/NNS)
  ./.) 


>> Noun Phrases are: 
 ['data science applications', 'disk bound', '’', 'corners area', 'great results']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Given', 'given'), ('data', 'data'), ('science', 'scienc'), ('applications', 'applic'), ('processor', 'processor'), ('disk', 'disk'), ('bound', 'bound'), (',', ','), ('’', '’'), ('really', 'realli'), ('cut', 'cut'), ('corners', 'corner'), ('area', 'area'), ('expect', 'expect'), ('great', 'great'), ('results', 'result'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Given', 'given'), ('data', 'data'), ('science', 'scienc'), ('applications', 'applic'), ('processor', 'processor'), ('disk', 'disk'), ('bound', 'bound'), (',', ','), ('’', '’'), ('really', 'realli'), ('cut', 'cut'), ('corners', 'corner'), ('area', 'area'), ('expect', 'expect'), ('great', 'great'), ('results', 'result'), ('.', '.')]

>> Lemmatization: 
 [('Given', 'Given'), ('data', 'data'), ('science', 'science'), ('applications', 'application'), ('processor', 'processor'), ('disk', 'disk'), ('bound', 'bound'), (',', ','), ('’', '’'), ('really', 'really'), ('cut', 'cut'), ('corners', 'corner'), ('area', 'area'), ('expect', 'expect'), ('great', 'great'), ('results', 'result'), ('.', '.')]



============================ Sentence 48 =============================

Analysis Algorithm : The algorithm you use determines the kind of result you obtain and controls execution speed. 


>> Tokens are: 
 ['Analysis', 'Algorithm', ':', 'The', 'algorithm', 'use', 'determines', 'kind', 'result', 'obtain', 'controls', 'execution', 'speed', '.']

>> Bigrams are: 
 [('Analysis', 'Algorithm'), ('Algorithm', ':'), (':', 'The'), ('The', 'algorithm'), ('algorithm', 'use'), ('use', 'determines'), ('determines', 'kind'), ('kind', 'result'), ('result', 'obtain'), ('obtain', 'controls'), ('controls', 'execution'), ('execution', 'speed'), ('speed', '.')]

>> Trigrams are: 
 [('Analysis', 'Algorithm', ':'), ('Algorithm', ':', 'The'), (':', 'The', 'algorithm'), ('The', 'algorithm', 'use'), ('algorithm', 'use', 'determines'), ('use', 'determines', 'kind'), ('determines', 'kind', 'result'), ('kind', 'result', 'obtain'), ('result', 'obtain', 'controls'), ('obtain', 'controls', 'execution'), ('controls', 'execution', 'speed'), ('execution', 'speed', '.')]

>> POS Tags are: 
 [('Analysis', 'NN'), ('Algorithm', 'NNP'), (':', ':'), ('The', 'DT'), ('algorithm', 'NN'), ('use', 'NN'), ('determines', 'VBZ'), ('kind', 'NN'), ('result', 'NN'), ('obtain', 'VB'), ('controls', 'NNS'), ('execution', 'JJ'), ('speed', 'NN'), ('.', '.')]

 (S
  (NP Analysis/NN Algorithm/NNP)
  :/:
  (NP The/DT algorithm/NN use/NN)
  determines/VBZ
  (NP kind/NN result/NN)
  obtain/VB
  (NP controls/NNS)
  (NP execution/JJ speed/NN)
  ./.) 


>> Noun Phrases are: 
 ['Analysis Algorithm', 'The algorithm use', 'kind result', 'controls', 'execution speed']

>> Named Entities are: 
 [('PERSON', 'Analysis Algorithm')] 

>> Stemming using Porter Stemmer: 
 [('Analysis', 'analysi'), ('Algorithm', 'algorithm'), (':', ':'), ('The', 'the'), ('algorithm', 'algorithm'), ('use', 'use'), ('determines', 'determin'), ('kind', 'kind'), ('result', 'result'), ('obtain', 'obtain'), ('controls', 'control'), ('execution', 'execut'), ('speed', 'speed'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Analysis', 'analysi'), ('Algorithm', 'algorithm'), (':', ':'), ('The', 'the'), ('algorithm', 'algorithm'), ('use', 'use'), ('determines', 'determin'), ('kind', 'kind'), ('result', 'result'), ('obtain', 'obtain'), ('controls', 'control'), ('execution', 'execut'), ('speed', 'speed'), ('.', '.')]

>> Lemmatization: 
 [('Analysis', 'Analysis'), ('Algorithm', 'Algorithm'), (':', ':'), ('The', 'The'), ('algorithm', 'algorithm'), ('use', 'use'), ('determines', 'determines'), ('kind', 'kind'), ('result', 'result'), ('obtain', 'obtain'), ('controls', 'control'), ('execution', 'execution'), ('speed', 'speed'), ('.', '.')]



============================ Sentence 49 =============================

We must experiment to find the best algorithm for particular dataset. 


>> Tokens are: 
 ['We', 'must', 'experiment', 'find', 'best', 'algorithm', 'particular', 'dataset', '.']

>> Bigrams are: 
 [('We', 'must'), ('must', 'experiment'), ('experiment', 'find'), ('find', 'best'), ('best', 'algorithm'), ('algorithm', 'particular'), ('particular', 'dataset'), ('dataset', '.')]

>> Trigrams are: 
 [('We', 'must', 'experiment'), ('must', 'experiment', 'find'), ('experiment', 'find', 'best'), ('find', 'best', 'algorithm'), ('best', 'algorithm', 'particular'), ('algorithm', 'particular', 'dataset'), ('particular', 'dataset', '.')]

>> POS Tags are: 
 [('We', 'PRP'), ('must', 'MD'), ('experiment', 'VB'), ('find', 'VB'), ('best', 'JJS'), ('algorithm', 'NN'), ('particular', 'JJ'), ('dataset', 'NN'), ('.', '.')]

 (S
  We/PRP
  must/MD
  experiment/VB
  find/VB
  best/JJS
  (NP algorithm/NN)
  (NP particular/JJ dataset/NN)
  ./.) 


>> Noun Phrases are: 
 ['algorithm', 'particular dataset']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('We', 'we'), ('must', 'must'), ('experiment', 'experi'), ('find', 'find'), ('best', 'best'), ('algorithm', 'algorithm'), ('particular', 'particular'), ('dataset', 'dataset'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('We', 'we'), ('must', 'must'), ('experiment', 'experi'), ('find', 'find'), ('best', 'best'), ('algorithm', 'algorithm'), ('particular', 'particular'), ('dataset', 'dataset'), ('.', '.')]

>> Lemmatization: 
 [('We', 'We'), ('must', 'must'), ('experiment', 'experiment'), ('find', 'find'), ('best', 'best'), ('algorithm', 'algorithm'), ('particular', 'particular'), ('dataset', 'dataset'), ('.', '.')]



============================ Sentence 50 =============================

Prof. Arjun V. Bala #3150713 (PDS)      Unit 02 – Data Science and Python ‹#›  Using the Python Ecosystem for Data Science We need to load certain libraries in order to perform specific data science task in python. 


>> Tokens are: 
 ['Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '02', '–', 'Data', 'Science', 'Python', '‹', '#', '›', 'Using', 'Python', 'Ecosystem', 'Data', 'Science', 'We', 'need', 'load', 'certain', 'libraries', 'order', 'perform', 'specific', 'data', 'science', 'task', 'python', '.']

>> Bigrams are: 
 [('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '02'), ('02', '–'), ('–', 'Data'), ('Data', 'Science'), ('Science', 'Python'), ('Python', '‹'), ('‹', '#'), ('#', '›'), ('›', 'Using'), ('Using', 'Python'), ('Python', 'Ecosystem'), ('Ecosystem', 'Data'), ('Data', 'Science'), ('Science', 'We'), ('We', 'need'), ('need', 'load'), ('load', 'certain'), ('certain', 'libraries'), ('libraries', 'order'), ('order', 'perform'), ('perform', 'specific'), ('specific', 'data'), ('data', 'science'), ('science', 'task'), ('task', 'python'), ('python', '.')]

>> Trigrams are: 
 [('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '02'), ('Unit', '02', '–'), ('02', '–', 'Data'), ('–', 'Data', 'Science'), ('Data', 'Science', 'Python'), ('Science', 'Python', '‹'), ('Python', '‹', '#'), ('‹', '#', '›'), ('#', '›', 'Using'), ('›', 'Using', 'Python'), ('Using', 'Python', 'Ecosystem'), ('Python', 'Ecosystem', 'Data'), ('Ecosystem', 'Data', 'Science'), ('Data', 'Science', 'We'), ('Science', 'We', 'need'), ('We', 'need', 'load'), ('need', 'load', 'certain'), ('load', 'certain', 'libraries'), ('certain', 'libraries', 'order'), ('libraries', 'order', 'perform'), ('order', 'perform', 'specific'), ('perform', 'specific', 'data'), ('specific', 'data', 'science'), ('data', 'science', 'task'), ('science', 'task', 'python'), ('task', 'python', '.')]

>> POS Tags are: 
 [('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('02', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Science', 'NNP'), ('Python', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('Using', 'NNP'), ('Python', 'NNP'), ('Ecosystem', 'NNP'), ('Data', 'NNP'), ('Science', 'NNP'), ('We', 'PRP'), ('need', 'VBP'), ('load', 'JJ'), ('certain', 'JJ'), ('libraries', 'NNS'), ('order', 'NN'), ('perform', 'NN'), ('specific', 'JJ'), ('data', 'NNS'), ('science', 'NN'), ('task', 'NN'), ('python', 'NN'), ('.', '.')]

 (S
  (NP Prof./NNP Arjun/NNP V./NNP Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  02/CD
  (NP –/NNP Data/NNP Science/NNP Python/NNP ‹/NNP)
  #/#
  (NP ›/NNP Using/NNP Python/NNP Ecosystem/NNP Data/NNP Science/NNP)
  We/PRP
  need/VBP
  (NP load/JJ certain/JJ libraries/NNS order/NN perform/NN)
  (NP specific/JJ data/NNS science/NN task/NN python/NN)
  ./.) 


>> Noun Phrases are: 
 ['Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Science Python ‹', '› Using Python Ecosystem Data Science', 'load certain libraries order perform', 'specific data science task python']

>> Named Entities are: 
 [('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Python'), ('PERSON', 'Python Ecosystem Data')] 

>> Stemming using Porter Stemmer: 
 [('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('02', '02'), ('–', '–'), ('Data', 'data'), ('Science', 'scienc'), ('Python', 'python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Using', 'use'), ('Python', 'python'), ('Ecosystem', 'ecosystem'), ('Data', 'data'), ('Science', 'scienc'), ('We', 'we'), ('need', 'need'), ('load', 'load'), ('certain', 'certain'), ('libraries', 'librari'), ('order', 'order'), ('perform', 'perform'), ('specific', 'specif'), ('data', 'data'), ('science', 'scienc'), ('task', 'task'), ('python', 'python'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('02', '02'), ('–', '–'), ('Data', 'data'), ('Science', 'scienc'), ('Python', 'python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Using', 'use'), ('Python', 'python'), ('Ecosystem', 'ecosystem'), ('Data', 'data'), ('Science', 'scienc'), ('We', 'we'), ('need', 'need'), ('load', 'load'), ('certain', 'certain'), ('libraries', 'librari'), ('order', 'order'), ('perform', 'perform'), ('specific', 'specif'), ('data', 'data'), ('science', 'scienc'), ('task', 'task'), ('python', 'python'), ('.', '.')]

>> Lemmatization: 
 [('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('02', '02'), ('–', '–'), ('Data', 'Data'), ('Science', 'Science'), ('Python', 'Python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('Using', 'Using'), ('Python', 'Python'), ('Ecosystem', 'Ecosystem'), ('Data', 'Data'), ('Science', 'Science'), ('We', 'We'), ('need', 'need'), ('load', 'load'), ('certain', 'certain'), ('libraries', 'library'), ('order', 'order'), ('perform', 'perform'), ('specific', 'specific'), ('data', 'data'), ('science', 'science'), ('task', 'task'), ('python', 'python'), ('.', '.')]



============================ Sentence 51 =============================

Following are the list of libraries which we are going to use in this subject. 


>> Tokens are: 
 ['Following', 'list', 'libraries', 'going', 'use', 'subject', '.']

>> Bigrams are: 
 [('Following', 'list'), ('list', 'libraries'), ('libraries', 'going'), ('going', 'use'), ('use', 'subject'), ('subject', '.')]

>> Trigrams are: 
 [('Following', 'list', 'libraries'), ('list', 'libraries', 'going'), ('libraries', 'going', 'use'), ('going', 'use', 'subject'), ('use', 'subject', '.')]

>> POS Tags are: 
 [('Following', 'VBG'), ('list', 'NN'), ('libraries', 'NNS'), ('going', 'VBG'), ('use', 'NN'), ('subject', 'NN'), ('.', '.')]

 (S
  Following/VBG
  (NP list/NN libraries/NNS)
  going/VBG
  (NP use/NN subject/NN)
  ./.) 


>> Noun Phrases are: 
 ['list libraries', 'use subject']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Following', 'follow'), ('list', 'list'), ('libraries', 'librari'), ('going', 'go'), ('use', 'use'), ('subject', 'subject'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Following', 'follow'), ('list', 'list'), ('libraries', 'librari'), ('going', 'go'), ('use', 'use'), ('subject', 'subject'), ('.', '.')]

>> Lemmatization: 
 [('Following', 'Following'), ('list', 'list'), ('libraries', 'library'), ('going', 'going'), ('use', 'use'), ('subject', 'subject'), ('.', '.')]



============================ Sentence 52 =============================

Performing fundamental scientific computing using NumPy Performing data analysis using pandas Plotting the data using matplotlib Accessing scientific tools using SciPy Implementing machine learning using Scikit-learn Going for deep learning with Keras and TensorFlow Creating graphs with NetworkX Parsing HTML documents using Beautiful Soup     Prof. Arjun V. Bala #3150713 (PDS)      Unit 02 – Data Science and Python ‹#›  1) NumPy NumPy is used to perform fundamental scientific computing. 


>> Tokens are: 
 ['Performing', 'fundamental', 'scientific', 'computing', 'using', 'NumPy', 'Performing', 'data', 'analysis', 'using', 'pandas', 'Plotting', 'data', 'using', 'matplotlib', 'Accessing', 'scientific', 'tools', 'using', 'SciPy', 'Implementing', 'machine', 'learning', 'using', 'Scikit-learn', 'Going', 'deep', 'learning', 'Keras', 'TensorFlow', 'Creating', 'graphs', 'NetworkX', 'Parsing', 'HTML', 'documents', 'using', 'Beautiful', 'Soup', 'Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '02', '–', 'Data', 'Science', 'Python', '‹', '#', '›', '1', ')', 'NumPy', 'NumPy', 'used', 'perform', 'fundamental', 'scientific', 'computing', '.']

>> Bigrams are: 
 [('Performing', 'fundamental'), ('fundamental', 'scientific'), ('scientific', 'computing'), ('computing', 'using'), ('using', 'NumPy'), ('NumPy', 'Performing'), ('Performing', 'data'), ('data', 'analysis'), ('analysis', 'using'), ('using', 'pandas'), ('pandas', 'Plotting'), ('Plotting', 'data'), ('data', 'using'), ('using', 'matplotlib'), ('matplotlib', 'Accessing'), ('Accessing', 'scientific'), ('scientific', 'tools'), ('tools', 'using'), ('using', 'SciPy'), ('SciPy', 'Implementing'), ('Implementing', 'machine'), ('machine', 'learning'), ('learning', 'using'), ('using', 'Scikit-learn'), ('Scikit-learn', 'Going'), ('Going', 'deep'), ('deep', 'learning'), ('learning', 'Keras'), ('Keras', 'TensorFlow'), ('TensorFlow', 'Creating'), ('Creating', 'graphs'), ('graphs', 'NetworkX'), ('NetworkX', 'Parsing'), ('Parsing', 'HTML'), ('HTML', 'documents'), ('documents', 'using'), ('using', 'Beautiful'), ('Beautiful', 'Soup'), ('Soup', 'Prof.'), ('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '02'), ('02', '–'), ('–', 'Data'), ('Data', 'Science'), ('Science', 'Python'), ('Python', '‹'), ('‹', '#'), ('#', '›'), ('›', '1'), ('1', ')'), (')', 'NumPy'), ('NumPy', 'NumPy'), ('NumPy', 'used'), ('used', 'perform'), ('perform', 'fundamental'), ('fundamental', 'scientific'), ('scientific', 'computing'), ('computing', '.')]

>> Trigrams are: 
 [('Performing', 'fundamental', 'scientific'), ('fundamental', 'scientific', 'computing'), ('scientific', 'computing', 'using'), ('computing', 'using', 'NumPy'), ('using', 'NumPy', 'Performing'), ('NumPy', 'Performing', 'data'), ('Performing', 'data', 'analysis'), ('data', 'analysis', 'using'), ('analysis', 'using', 'pandas'), ('using', 'pandas', 'Plotting'), ('pandas', 'Plotting', 'data'), ('Plotting', 'data', 'using'), ('data', 'using', 'matplotlib'), ('using', 'matplotlib', 'Accessing'), ('matplotlib', 'Accessing', 'scientific'), ('Accessing', 'scientific', 'tools'), ('scientific', 'tools', 'using'), ('tools', 'using', 'SciPy'), ('using', 'SciPy', 'Implementing'), ('SciPy', 'Implementing', 'machine'), ('Implementing', 'machine', 'learning'), ('machine', 'learning', 'using'), ('learning', 'using', 'Scikit-learn'), ('using', 'Scikit-learn', 'Going'), ('Scikit-learn', 'Going', 'deep'), ('Going', 'deep', 'learning'), ('deep', 'learning', 'Keras'), ('learning', 'Keras', 'TensorFlow'), ('Keras', 'TensorFlow', 'Creating'), ('TensorFlow', 'Creating', 'graphs'), ('Creating', 'graphs', 'NetworkX'), ('graphs', 'NetworkX', 'Parsing'), ('NetworkX', 'Parsing', 'HTML'), ('Parsing', 'HTML', 'documents'), ('HTML', 'documents', 'using'), ('documents', 'using', 'Beautiful'), ('using', 'Beautiful', 'Soup'), ('Beautiful', 'Soup', 'Prof.'), ('Soup', 'Prof.', 'Arjun'), ('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '02'), ('Unit', '02', '–'), ('02', '–', 'Data'), ('–', 'Data', 'Science'), ('Data', 'Science', 'Python'), ('Science', 'Python', '‹'), ('Python', '‹', '#'), ('‹', '#', '›'), ('#', '›', '1'), ('›', '1', ')'), ('1', ')', 'NumPy'), (')', 'NumPy', 'NumPy'), ('NumPy', 'NumPy', 'used'), ('NumPy', 'used', 'perform'), ('used', 'perform', 'fundamental'), ('perform', 'fundamental', 'scientific'), ('fundamental', 'scientific', 'computing'), ('scientific', 'computing', '.')]

>> POS Tags are: 
 [('Performing', 'VBG'), ('fundamental', 'JJ'), ('scientific', 'JJ'), ('computing', 'VBG'), ('using', 'VBG'), ('NumPy', 'NNP'), ('Performing', 'NNP'), ('data', 'NN'), ('analysis', 'NN'), ('using', 'VBG'), ('pandas', 'JJ'), ('Plotting', 'NNP'), ('data', 'NN'), ('using', 'VBG'), ('matplotlib', 'JJ'), ('Accessing', 'NNP'), ('scientific', 'JJ'), ('tools', 'NNS'), ('using', 'VBG'), ('SciPy', 'NNP'), ('Implementing', 'NNP'), ('machine', 'NN'), ('learning', 'VBG'), ('using', 'VBG'), ('Scikit-learn', 'NNP'), ('Going', 'NNP'), ('deep', 'JJ'), ('learning', 'NN'), ('Keras', 'NNP'), ('TensorFlow', 'NNP'), ('Creating', 'NNP'), ('graphs', 'NN'), ('NetworkX', 'NNP'), ('Parsing', 'NNP'), ('HTML', 'NNP'), ('documents', 'NNS'), ('using', 'VBG'), ('Beautiful', 'NNP'), ('Soup', 'NNP'), ('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('02', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Science', 'NNP'), ('Python', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('1', 'CD'), (')', ')'), ('NumPy', 'NNP'), ('NumPy', 'NNP'), ('used', 'VBD'), ('perform', 'JJ'), ('fundamental', 'JJ'), ('scientific', 'JJ'), ('computing', 'NN'), ('.', '.')]

 (S
  Performing/VBG
  fundamental/JJ
  scientific/JJ
  computing/VBG
  using/VBG
  (NP NumPy/NNP Performing/NNP data/NN analysis/NN)
  using/VBG
  (NP pandas/JJ Plotting/NNP data/NN)
  using/VBG
  (NP matplotlib/JJ Accessing/NNP)
  (NP scientific/JJ tools/NNS)
  using/VBG
  (NP SciPy/NNP Implementing/NNP machine/NN)
  learning/VBG
  using/VBG
  (NP Scikit-learn/NNP Going/NNP)
  (NP
    deep/JJ
    learning/NN
    Keras/NNP
    TensorFlow/NNP
    Creating/NNP
    graphs/NN
    NetworkX/NNP
    Parsing/NNP
    HTML/NNP
    documents/NNS)
  using/VBG
  (NP Beautiful/NNP Soup/NNP Prof./NNP Arjun/NNP V./NNP Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  02/CD
  (NP –/NNP Data/NNP Science/NNP Python/NNP ‹/NNP)
  #/#
  (NP ›/NNP)
  1/CD
  )/)
  (NP NumPy/NNP NumPy/NNP)
  used/VBD
  (NP perform/JJ fundamental/JJ scientific/JJ computing/NN)
  ./.) 


>> Noun Phrases are: 
 ['NumPy Performing data analysis', 'pandas Plotting data', 'matplotlib Accessing', 'scientific tools', 'SciPy Implementing machine', 'Scikit-learn Going', 'deep learning Keras TensorFlow Creating graphs NetworkX Parsing HTML documents', 'Beautiful Soup Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Science Python ‹', '›', 'NumPy NumPy', 'perform fundamental scientific computing']

>> Named Entities are: 
 [('ORGANIZATION', 'NumPy Performing'), ('ORGANIZATION', 'SciPy'), ('PERSON', 'Keras TensorFlow Creating'), ('ORGANIZATION', 'NetworkX Parsing'), ('PERSON', 'Beautiful Soup'), ('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Python'), ('ORGANIZATION', 'NumPy')] 

>> Stemming using Porter Stemmer: 
 [('Performing', 'perform'), ('fundamental', 'fundament'), ('scientific', 'scientif'), ('computing', 'comput'), ('using', 'use'), ('NumPy', 'numpi'), ('Performing', 'perform'), ('data', 'data'), ('analysis', 'analysi'), ('using', 'use'), ('pandas', 'panda'), ('Plotting', 'plot'), ('data', 'data'), ('using', 'use'), ('matplotlib', 'matplotlib'), ('Accessing', 'access'), ('scientific', 'scientif'), ('tools', 'tool'), ('using', 'use'), ('SciPy', 'scipi'), ('Implementing', 'implement'), ('machine', 'machin'), ('learning', 'learn'), ('using', 'use'), ('Scikit-learn', 'scikit-learn'), ('Going', 'go'), ('deep', 'deep'), ('learning', 'learn'), ('Keras', 'kera'), ('TensorFlow', 'tensorflow'), ('Creating', 'creat'), ('graphs', 'graph'), ('NetworkX', 'networkx'), ('Parsing', 'pars'), ('HTML', 'html'), ('documents', 'document'), ('using', 'use'), ('Beautiful', 'beauti'), ('Soup', 'soup'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('02', '02'), ('–', '–'), ('Data', 'data'), ('Science', 'scienc'), ('Python', 'python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('1', '1'), (')', ')'), ('NumPy', 'numpi'), ('NumPy', 'numpi'), ('used', 'use'), ('perform', 'perform'), ('fundamental', 'fundament'), ('scientific', 'scientif'), ('computing', 'comput'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Performing', 'perform'), ('fundamental', 'fundament'), ('scientific', 'scientif'), ('computing', 'comput'), ('using', 'use'), ('NumPy', 'numpi'), ('Performing', 'perform'), ('data', 'data'), ('analysis', 'analysi'), ('using', 'use'), ('pandas', 'panda'), ('Plotting', 'plot'), ('data', 'data'), ('using', 'use'), ('matplotlib', 'matplotlib'), ('Accessing', 'access'), ('scientific', 'scientif'), ('tools', 'tool'), ('using', 'use'), ('SciPy', 'scipi'), ('Implementing', 'implement'), ('machine', 'machin'), ('learning', 'learn'), ('using', 'use'), ('Scikit-learn', 'scikit-learn'), ('Going', 'go'), ('deep', 'deep'), ('learning', 'learn'), ('Keras', 'kera'), ('TensorFlow', 'tensorflow'), ('Creating', 'creat'), ('graphs', 'graph'), ('NetworkX', 'networkx'), ('Parsing', 'pars'), ('HTML', 'html'), ('documents', 'document'), ('using', 'use'), ('Beautiful', 'beauti'), ('Soup', 'soup'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('02', '02'), ('–', '–'), ('Data', 'data'), ('Science', 'scienc'), ('Python', 'python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('1', '1'), (')', ')'), ('NumPy', 'numpi'), ('NumPy', 'numpi'), ('used', 'use'), ('perform', 'perform'), ('fundamental', 'fundament'), ('scientific', 'scientif'), ('computing', 'comput'), ('.', '.')]

>> Lemmatization: 
 [('Performing', 'Performing'), ('fundamental', 'fundamental'), ('scientific', 'scientific'), ('computing', 'computing'), ('using', 'using'), ('NumPy', 'NumPy'), ('Performing', 'Performing'), ('data', 'data'), ('analysis', 'analysis'), ('using', 'using'), ('pandas', 'panda'), ('Plotting', 'Plotting'), ('data', 'data'), ('using', 'using'), ('matplotlib', 'matplotlib'), ('Accessing', 'Accessing'), ('scientific', 'scientific'), ('tools', 'tool'), ('using', 'using'), ('SciPy', 'SciPy'), ('Implementing', 'Implementing'), ('machine', 'machine'), ('learning', 'learning'), ('using', 'using'), ('Scikit-learn', 'Scikit-learn'), ('Going', 'Going'), ('deep', 'deep'), ('learning', 'learning'), ('Keras', 'Keras'), ('TensorFlow', 'TensorFlow'), ('Creating', 'Creating'), ('graphs', 'graph'), ('NetworkX', 'NetworkX'), ('Parsing', 'Parsing'), ('HTML', 'HTML'), ('documents', 'document'), ('using', 'using'), ('Beautiful', 'Beautiful'), ('Soup', 'Soup'), ('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('02', '02'), ('–', '–'), ('Data', 'Data'), ('Science', 'Science'), ('Python', 'Python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('1', '1'), (')', ')'), ('NumPy', 'NumPy'), ('NumPy', 'NumPy'), ('used', 'used'), ('perform', 'perform'), ('fundamental', 'fundamental'), ('scientific', 'scientific'), ('computing', 'computing'), ('.', '.')]



============================ Sentence 53 =============================

NumPy library provides the means for performing n-dimensional array manipulation, which is critical for data science work. 


>> Tokens are: 
 ['NumPy', 'library', 'provides', 'means', 'performing', 'n-dimensional', 'array', 'manipulation', ',', 'critical', 'data', 'science', 'work', '.']

>> Bigrams are: 
 [('NumPy', 'library'), ('library', 'provides'), ('provides', 'means'), ('means', 'performing'), ('performing', 'n-dimensional'), ('n-dimensional', 'array'), ('array', 'manipulation'), ('manipulation', ','), (',', 'critical'), ('critical', 'data'), ('data', 'science'), ('science', 'work'), ('work', '.')]

>> Trigrams are: 
 [('NumPy', 'library', 'provides'), ('library', 'provides', 'means'), ('provides', 'means', 'performing'), ('means', 'performing', 'n-dimensional'), ('performing', 'n-dimensional', 'array'), ('n-dimensional', 'array', 'manipulation'), ('array', 'manipulation', ','), ('manipulation', ',', 'critical'), (',', 'critical', 'data'), ('critical', 'data', 'science'), ('data', 'science', 'work'), ('science', 'work', '.')]

>> POS Tags are: 
 [('NumPy', 'NNP'), ('library', 'NN'), ('provides', 'VBZ'), ('means', 'VBZ'), ('performing', 'VBG'), ('n-dimensional', 'JJ'), ('array', 'NN'), ('manipulation', 'NN'), (',', ','), ('critical', 'JJ'), ('data', 'NNS'), ('science', 'NN'), ('work', 'NN'), ('.', '.')]

 (S
  (NP NumPy/NNP library/NN)
  provides/VBZ
  means/VBZ
  performing/VBG
  (NP n-dimensional/JJ array/NN manipulation/NN)
  ,/,
  (NP critical/JJ data/NNS science/NN work/NN)
  ./.) 


>> Noun Phrases are: 
 ['NumPy library', 'n-dimensional array manipulation', 'critical data science work']

>> Named Entities are: 
 [('GPE', 'NumPy')] 

>> Stemming using Porter Stemmer: 
 [('NumPy', 'numpi'), ('library', 'librari'), ('provides', 'provid'), ('means', 'mean'), ('performing', 'perform'), ('n-dimensional', 'n-dimension'), ('array', 'array'), ('manipulation', 'manipul'), (',', ','), ('critical', 'critic'), ('data', 'data'), ('science', 'scienc'), ('work', 'work'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('NumPy', 'numpi'), ('library', 'librari'), ('provides', 'provid'), ('means', 'mean'), ('performing', 'perform'), ('n-dimensional', 'n-dimension'), ('array', 'array'), ('manipulation', 'manipul'), (',', ','), ('critical', 'critic'), ('data', 'data'), ('science', 'scienc'), ('work', 'work'), ('.', '.')]

>> Lemmatization: 
 [('NumPy', 'NumPy'), ('library', 'library'), ('provides', 'provides'), ('means', 'mean'), ('performing', 'performing'), ('n-dimensional', 'n-dimensional'), ('array', 'array'), ('manipulation', 'manipulation'), (',', ','), ('critical', 'critical'), ('data', 'data'), ('science', 'science'), ('work', 'work'), ('.', '.')]



============================ Sentence 54 =============================

NumPy provides functions that include support for linear algebra, Fourier transformation, random-number generation and many more.. 


>> Tokens are: 
 ['NumPy', 'provides', 'functions', 'include', 'support', 'linear', 'algebra', ',', 'Fourier', 'transformation', ',', 'random-number', 'generation', 'many', '..']

>> Bigrams are: 
 [('NumPy', 'provides'), ('provides', 'functions'), ('functions', 'include'), ('include', 'support'), ('support', 'linear'), ('linear', 'algebra'), ('algebra', ','), (',', 'Fourier'), ('Fourier', 'transformation'), ('transformation', ','), (',', 'random-number'), ('random-number', 'generation'), ('generation', 'many'), ('many', '..')]

>> Trigrams are: 
 [('NumPy', 'provides', 'functions'), ('provides', 'functions', 'include'), ('functions', 'include', 'support'), ('include', 'support', 'linear'), ('support', 'linear', 'algebra'), ('linear', 'algebra', ','), ('algebra', ',', 'Fourier'), (',', 'Fourier', 'transformation'), ('Fourier', 'transformation', ','), ('transformation', ',', 'random-number'), (',', 'random-number', 'generation'), ('random-number', 'generation', 'many'), ('generation', 'many', '..')]

>> POS Tags are: 
 [('NumPy', 'NNP'), ('provides', 'VBZ'), ('functions', 'NNS'), ('include', 'VBP'), ('support', 'NN'), ('linear', 'JJ'), ('algebra', 'NN'), (',', ','), ('Fourier', 'NNP'), ('transformation', 'NN'), (',', ','), ('random-number', 'JJ'), ('generation', 'NN'), ('many', 'JJ'), ('..', 'NNS')]

 (S
  (NP NumPy/NNP)
  provides/VBZ
  (NP functions/NNS)
  include/VBP
  (NP support/NN)
  (NP linear/JJ algebra/NN)
  ,/,
  (NP Fourier/NNP transformation/NN)
  ,/,
  (NP random-number/JJ generation/NN)
  (NP many/JJ ../NNS)) 


>> Noun Phrases are: 
 ['NumPy', 'functions', 'support', 'linear algebra', 'Fourier transformation', 'random-number generation', 'many ..']

>> Named Entities are: 
 [('ORGANIZATION', 'NumPy'), ('GPE', 'Fourier')] 

>> Stemming using Porter Stemmer: 
 [('NumPy', 'numpi'), ('provides', 'provid'), ('functions', 'function'), ('include', 'includ'), ('support', 'support'), ('linear', 'linear'), ('algebra', 'algebra'), (',', ','), ('Fourier', 'fourier'), ('transformation', 'transform'), (',', ','), ('random-number', 'random-numb'), ('generation', 'gener'), ('many', 'mani'), ('..', '..')]

>> Stemming using Snowball Stemmer: 
 [('NumPy', 'numpi'), ('provides', 'provid'), ('functions', 'function'), ('include', 'includ'), ('support', 'support'), ('linear', 'linear'), ('algebra', 'algebra'), (',', ','), ('Fourier', 'fourier'), ('transformation', 'transform'), (',', ','), ('random-number', 'random-numb'), ('generation', 'generat'), ('many', 'mani'), ('..', '..')]

>> Lemmatization: 
 [('NumPy', 'NumPy'), ('provides', 'provides'), ('functions', 'function'), ('include', 'include'), ('support', 'support'), ('linear', 'linear'), ('algebra', 'algebra'), (',', ','), ('Fourier', 'Fourier'), ('transformation', 'transformation'), (',', ','), ('random-number', 'random-number'), ('generation', 'generation'), ('many', 'many'), ('..', '..')]



============================ Sentence 55 =============================

Explore listing of functions at https://numpy.org/doc/stable/reference/routines.html      Prof. Arjun V. Bala #3150713 (PDS)      Unit 02 – Data Science and Python ‹#›  2) pandas pandas is a fast, powerful, flexible and easy to use open source data analysis and manipulation tool, built on top of the Python programming language. 


>> Tokens are: 
 ['Explore', 'listing', 'functions', 'https', ':', '//numpy.org/doc/stable/reference/routines.html', 'Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '02', '–', 'Data', 'Science', 'Python', '‹', '#', '›', '2', ')', 'pandas', 'pandas', 'fast', ',', 'powerful', ',', 'flexible', 'easy', 'use', 'open', 'source', 'data', 'analysis', 'manipulation', 'tool', ',', 'built', 'top', 'Python', 'programming', 'language', '.']

>> Bigrams are: 
 [('Explore', 'listing'), ('listing', 'functions'), ('functions', 'https'), ('https', ':'), (':', '//numpy.org/doc/stable/reference/routines.html'), ('//numpy.org/doc/stable/reference/routines.html', 'Prof.'), ('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '02'), ('02', '–'), ('–', 'Data'), ('Data', 'Science'), ('Science', 'Python'), ('Python', '‹'), ('‹', '#'), ('#', '›'), ('›', '2'), ('2', ')'), (')', 'pandas'), ('pandas', 'pandas'), ('pandas', 'fast'), ('fast', ','), (',', 'powerful'), ('powerful', ','), (',', 'flexible'), ('flexible', 'easy'), ('easy', 'use'), ('use', 'open'), ('open', 'source'), ('source', 'data'), ('data', 'analysis'), ('analysis', 'manipulation'), ('manipulation', 'tool'), ('tool', ','), (',', 'built'), ('built', 'top'), ('top', 'Python'), ('Python', 'programming'), ('programming', 'language'), ('language', '.')]

>> Trigrams are: 
 [('Explore', 'listing', 'functions'), ('listing', 'functions', 'https'), ('functions', 'https', ':'), ('https', ':', '//numpy.org/doc/stable/reference/routines.html'), (':', '//numpy.org/doc/stable/reference/routines.html', 'Prof.'), ('//numpy.org/doc/stable/reference/routines.html', 'Prof.', 'Arjun'), ('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '02'), ('Unit', '02', '–'), ('02', '–', 'Data'), ('–', 'Data', 'Science'), ('Data', 'Science', 'Python'), ('Science', 'Python', '‹'), ('Python', '‹', '#'), ('‹', '#', '›'), ('#', '›', '2'), ('›', '2', ')'), ('2', ')', 'pandas'), (')', 'pandas', 'pandas'), ('pandas', 'pandas', 'fast'), ('pandas', 'fast', ','), ('fast', ',', 'powerful'), (',', 'powerful', ','), ('powerful', ',', 'flexible'), (',', 'flexible', 'easy'), ('flexible', 'easy', 'use'), ('easy', 'use', 'open'), ('use', 'open', 'source'), ('open', 'source', 'data'), ('source', 'data', 'analysis'), ('data', 'analysis', 'manipulation'), ('analysis', 'manipulation', 'tool'), ('manipulation', 'tool', ','), ('tool', ',', 'built'), (',', 'built', 'top'), ('built', 'top', 'Python'), ('top', 'Python', 'programming'), ('Python', 'programming', 'language'), ('programming', 'language', '.')]

>> POS Tags are: 
 [('Explore', 'RB'), ('listing', 'JJ'), ('functions', 'NNS'), ('https', 'NN'), (':', ':'), ('//numpy.org/doc/stable/reference/routines.html', 'JJ'), ('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('02', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Science', 'NNP'), ('Python', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('2', 'CD'), (')', ')'), ('pandas', 'NN'), ('pandas', 'NN'), ('fast', 'RB'), (',', ','), ('powerful', 'JJ'), (',', ','), ('flexible', 'JJ'), ('easy', 'JJ'), ('use', 'NN'), ('open', 'JJ'), ('source', 'NN'), ('data', 'NNS'), ('analysis', 'NN'), ('manipulation', 'NN'), ('tool', 'NN'), (',', ','), ('built', 'VBN'), ('top', 'JJ'), ('Python', 'NNP'), ('programming', 'NN'), ('language', 'NN'), ('.', '.')]

 (S
  Explore/RB
  (NP listing/JJ functions/NNS https/NN)
  :/:
  (NP
    //numpy.org/doc/stable/reference/routines.html/JJ
    Prof./NNP
    Arjun/NNP
    V./NNP
    Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  02/CD
  (NP –/NNP Data/NNP Science/NNP Python/NNP ‹/NNP)
  #/#
  (NP ›/NNP)
  2/CD
  )/)
  (NP pandas/NN pandas/NN)
  fast/RB
  ,/,
  powerful/JJ
  ,/,
  (NP flexible/JJ easy/JJ use/NN)
  (NP open/JJ source/NN data/NNS analysis/NN manipulation/NN tool/NN)
  ,/,
  built/VBN
  (NP top/JJ Python/NNP programming/NN language/NN)
  ./.) 


>> Noun Phrases are: 
 ['listing functions https', '//numpy.org/doc/stable/reference/routines.html Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Science Python ‹', '›', 'pandas pandas', 'flexible easy use', 'open source data analysis manipulation tool', 'top Python programming language']

>> Named Entities are: 
 [('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Python'), ('PERSON', 'Python')] 

>> Stemming using Porter Stemmer: 
 [('Explore', 'explor'), ('listing', 'list'), ('functions', 'function'), ('https', 'http'), (':', ':'), ('//numpy.org/doc/stable/reference/routines.html', '//numpy.org/doc/stable/reference/routines.html'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('02', '02'), ('–', '–'), ('Data', 'data'), ('Science', 'scienc'), ('Python', 'python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('2', '2'), (')', ')'), ('pandas', 'panda'), ('pandas', 'panda'), ('fast', 'fast'), (',', ','), ('powerful', 'power'), (',', ','), ('flexible', 'flexibl'), ('easy', 'easi'), ('use', 'use'), ('open', 'open'), ('source', 'sourc'), ('data', 'data'), ('analysis', 'analysi'), ('manipulation', 'manipul'), ('tool', 'tool'), (',', ','), ('built', 'built'), ('top', 'top'), ('Python', 'python'), ('programming', 'program'), ('language', 'languag'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Explore', 'explor'), ('listing', 'list'), ('functions', 'function'), ('https', 'https'), (':', ':'), ('//numpy.org/doc/stable/reference/routines.html', '//numpy.org/doc/stable/reference/routines.html'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('02', '02'), ('–', '–'), ('Data', 'data'), ('Science', 'scienc'), ('Python', 'python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('2', '2'), (')', ')'), ('pandas', 'panda'), ('pandas', 'panda'), ('fast', 'fast'), (',', ','), ('powerful', 'power'), (',', ','), ('flexible', 'flexibl'), ('easy', 'easi'), ('use', 'use'), ('open', 'open'), ('source', 'sourc'), ('data', 'data'), ('analysis', 'analysi'), ('manipulation', 'manipul'), ('tool', 'tool'), (',', ','), ('built', 'built'), ('top', 'top'), ('Python', 'python'), ('programming', 'program'), ('language', 'languag'), ('.', '.')]

>> Lemmatization: 
 [('Explore', 'Explore'), ('listing', 'listing'), ('functions', 'function'), ('https', 'http'), (':', ':'), ('//numpy.org/doc/stable/reference/routines.html', '//numpy.org/doc/stable/reference/routines.html'), ('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('02', '02'), ('–', '–'), ('Data', 'Data'), ('Science', 'Science'), ('Python', 'Python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('2', '2'), (')', ')'), ('pandas', 'panda'), ('pandas', 'panda'), ('fast', 'fast'), (',', ','), ('powerful', 'powerful'), (',', ','), ('flexible', 'flexible'), ('easy', 'easy'), ('use', 'use'), ('open', 'open'), ('source', 'source'), ('data', 'data'), ('analysis', 'analysis'), ('manipulation', 'manipulation'), ('tool', 'tool'), (',', ','), ('built', 'built'), ('top', 'top'), ('Python', 'Python'), ('programming', 'programming'), ('language', 'language'), ('.', '.')]



============================ Sentence 56 =============================

it offers data structures and operations for manipulating numerical tables and time series. 


>> Tokens are: 
 ['offers', 'data', 'structures', 'operations', 'manipulating', 'numerical', 'tables', 'time', 'series', '.']

>> Bigrams are: 
 [('offers', 'data'), ('data', 'structures'), ('structures', 'operations'), ('operations', 'manipulating'), ('manipulating', 'numerical'), ('numerical', 'tables'), ('tables', 'time'), ('time', 'series'), ('series', '.')]

>> Trigrams are: 
 [('offers', 'data', 'structures'), ('data', 'structures', 'operations'), ('structures', 'operations', 'manipulating'), ('operations', 'manipulating', 'numerical'), ('manipulating', 'numerical', 'tables'), ('numerical', 'tables', 'time'), ('tables', 'time', 'series'), ('time', 'series', '.')]

>> POS Tags are: 
 [('offers', 'NNS'), ('data', 'NNS'), ('structures', 'NNS'), ('operations', 'NNS'), ('manipulating', 'VBG'), ('numerical', 'JJ'), ('tables', 'NNS'), ('time', 'NN'), ('series', 'NN'), ('.', '.')]

 (S
  (NP offers/NNS data/NNS structures/NNS operations/NNS)
  manipulating/VBG
  (NP numerical/JJ tables/NNS time/NN series/NN)
  ./.) 


>> Noun Phrases are: 
 ['offers data structures operations', 'numerical tables time series']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('offers', 'offer'), ('data', 'data'), ('structures', 'structur'), ('operations', 'oper'), ('manipulating', 'manipul'), ('numerical', 'numer'), ('tables', 'tabl'), ('time', 'time'), ('series', 'seri'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('offers', 'offer'), ('data', 'data'), ('structures', 'structur'), ('operations', 'oper'), ('manipulating', 'manipul'), ('numerical', 'numer'), ('tables', 'tabl'), ('time', 'time'), ('series', 'seri'), ('.', '.')]

>> Lemmatization: 
 [('offers', 'offer'), ('data', 'data'), ('structures', 'structure'), ('operations', 'operation'), ('manipulating', 'manipulating'), ('numerical', 'numerical'), ('tables', 'table'), ('time', 'time'), ('series', 'series'), ('.', '.')]



============================ Sentence 57 =============================

The library is optimized to perform data science tasks especially fast and efficiently. 


>> Tokens are: 
 ['The', 'library', 'optimized', 'perform', 'data', 'science', 'tasks', 'especially', 'fast', 'efficiently', '.']

>> Bigrams are: 
 [('The', 'library'), ('library', 'optimized'), ('optimized', 'perform'), ('perform', 'data'), ('data', 'science'), ('science', 'tasks'), ('tasks', 'especially'), ('especially', 'fast'), ('fast', 'efficiently'), ('efficiently', '.')]

>> Trigrams are: 
 [('The', 'library', 'optimized'), ('library', 'optimized', 'perform'), ('optimized', 'perform', 'data'), ('perform', 'data', 'science'), ('data', 'science', 'tasks'), ('science', 'tasks', 'especially'), ('tasks', 'especially', 'fast'), ('especially', 'fast', 'efficiently'), ('fast', 'efficiently', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('library', 'JJ'), ('optimized', 'JJ'), ('perform', 'NN'), ('data', 'NNS'), ('science', 'NN'), ('tasks', 'NNS'), ('especially', 'RB'), ('fast', 'RB'), ('efficiently', 'RB'), ('.', '.')]

 (S
  (NP
    The/DT
    library/JJ
    optimized/JJ
    perform/NN
    data/NNS
    science/NN
    tasks/NNS)
  especially/RB
  fast/RB
  efficiently/RB
  ./.) 


>> Noun Phrases are: 
 ['The library optimized perform data science tasks']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('library', 'librari'), ('optimized', 'optim'), ('perform', 'perform'), ('data', 'data'), ('science', 'scienc'), ('tasks', 'task'), ('especially', 'especi'), ('fast', 'fast'), ('efficiently', 'effici'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('library', 'librari'), ('optimized', 'optim'), ('perform', 'perform'), ('data', 'data'), ('science', 'scienc'), ('tasks', 'task'), ('especially', 'especi'), ('fast', 'fast'), ('efficiently', 'effici'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('library', 'library'), ('optimized', 'optimized'), ('perform', 'perform'), ('data', 'data'), ('science', 'science'), ('tasks', 'task'), ('especially', 'especially'), ('fast', 'fast'), ('efficiently', 'efficiently'), ('.', '.')]



============================ Sentence 58 =============================

The basic principle behind pandas is to provide data analysis and modelling support for Python that is similar to other languages such as R.     Prof. Arjun V. Bala #3150713 (PDS)      Unit 02 – Data Science and Python ‹#›  3) matplotlib The matplotlib library gives a MATLAB like interface for creating data presentations of the analysis. 


>> Tokens are: 
 ['The', 'basic', 'principle', 'behind', 'pandas', 'provide', 'data', 'analysis', 'modelling', 'support', 'Python', 'similar', 'languages', 'R.', 'Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '02', '–', 'Data', 'Science', 'Python', '‹', '#', '›', '3', ')', 'matplotlib', 'The', 'matplotlib', 'library', 'gives', 'MATLAB', 'like', 'interface', 'creating', 'data', 'presentations', 'analysis', '.']

>> Bigrams are: 
 [('The', 'basic'), ('basic', 'principle'), ('principle', 'behind'), ('behind', 'pandas'), ('pandas', 'provide'), ('provide', 'data'), ('data', 'analysis'), ('analysis', 'modelling'), ('modelling', 'support'), ('support', 'Python'), ('Python', 'similar'), ('similar', 'languages'), ('languages', 'R.'), ('R.', 'Prof.'), ('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '02'), ('02', '–'), ('–', 'Data'), ('Data', 'Science'), ('Science', 'Python'), ('Python', '‹'), ('‹', '#'), ('#', '›'), ('›', '3'), ('3', ')'), (')', 'matplotlib'), ('matplotlib', 'The'), ('The', 'matplotlib'), ('matplotlib', 'library'), ('library', 'gives'), ('gives', 'MATLAB'), ('MATLAB', 'like'), ('like', 'interface'), ('interface', 'creating'), ('creating', 'data'), ('data', 'presentations'), ('presentations', 'analysis'), ('analysis', '.')]

>> Trigrams are: 
 [('The', 'basic', 'principle'), ('basic', 'principle', 'behind'), ('principle', 'behind', 'pandas'), ('behind', 'pandas', 'provide'), ('pandas', 'provide', 'data'), ('provide', 'data', 'analysis'), ('data', 'analysis', 'modelling'), ('analysis', 'modelling', 'support'), ('modelling', 'support', 'Python'), ('support', 'Python', 'similar'), ('Python', 'similar', 'languages'), ('similar', 'languages', 'R.'), ('languages', 'R.', 'Prof.'), ('R.', 'Prof.', 'Arjun'), ('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '02'), ('Unit', '02', '–'), ('02', '–', 'Data'), ('–', 'Data', 'Science'), ('Data', 'Science', 'Python'), ('Science', 'Python', '‹'), ('Python', '‹', '#'), ('‹', '#', '›'), ('#', '›', '3'), ('›', '3', ')'), ('3', ')', 'matplotlib'), (')', 'matplotlib', 'The'), ('matplotlib', 'The', 'matplotlib'), ('The', 'matplotlib', 'library'), ('matplotlib', 'library', 'gives'), ('library', 'gives', 'MATLAB'), ('gives', 'MATLAB', 'like'), ('MATLAB', 'like', 'interface'), ('like', 'interface', 'creating'), ('interface', 'creating', 'data'), ('creating', 'data', 'presentations'), ('data', 'presentations', 'analysis'), ('presentations', 'analysis', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('basic', 'JJ'), ('principle', 'NN'), ('behind', 'IN'), ('pandas', 'JJ'), ('provide', 'VBP'), ('data', 'NNS'), ('analysis', 'NN'), ('modelling', 'VBG'), ('support', 'NN'), ('Python', 'NNP'), ('similar', 'JJ'), ('languages', 'NNS'), ('R.', 'NNP'), ('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('02', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Science', 'NNP'), ('Python', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('3', 'CD'), (')', ')'), ('matplotlib', 'VBD'), ('The', 'DT'), ('matplotlib', 'JJ'), ('library', 'JJ'), ('gives', 'VBZ'), ('MATLAB', 'NNP'), ('like', 'IN'), ('interface', 'NN'), ('creating', 'VBG'), ('data', 'NNS'), ('presentations', 'NNS'), ('analysis', 'NN'), ('.', '.')]

 (S
  (NP The/DT basic/JJ principle/NN)
  behind/IN
  pandas/JJ
  provide/VBP
  (NP data/NNS analysis/NN)
  modelling/VBG
  (NP support/NN Python/NNP)
  (NP
    similar/JJ
    languages/NNS
    R./NNP
    Prof./NNP
    Arjun/NNP
    V./NNP
    Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  02/CD
  (NP –/NNP Data/NNP Science/NNP Python/NNP ‹/NNP)
  #/#
  (NP ›/NNP)
  3/CD
  )/)
  matplotlib/VBD
  The/DT
  matplotlib/JJ
  library/JJ
  gives/VBZ
  (NP MATLAB/NNP)
  like/IN
  (NP interface/NN)
  creating/VBG
  (NP data/NNS presentations/NNS analysis/NN)
  ./.) 


>> Noun Phrases are: 
 ['The basic principle', 'data analysis', 'support Python', 'similar languages R. Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Science Python ‹', '›', 'MATLAB', 'interface', 'data presentations analysis']

>> Named Entities are: 
 [('PERSON', 'Python'), ('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Python'), ('ORGANIZATION', 'MATLAB')] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('basic', 'basic'), ('principle', 'principl'), ('behind', 'behind'), ('pandas', 'panda'), ('provide', 'provid'), ('data', 'data'), ('analysis', 'analysi'), ('modelling', 'model'), ('support', 'support'), ('Python', 'python'), ('similar', 'similar'), ('languages', 'languag'), ('R.', 'r.'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('02', '02'), ('–', '–'), ('Data', 'data'), ('Science', 'scienc'), ('Python', 'python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('3', '3'), (')', ')'), ('matplotlib', 'matplotlib'), ('The', 'the'), ('matplotlib', 'matplotlib'), ('library', 'librari'), ('gives', 'give'), ('MATLAB', 'matlab'), ('like', 'like'), ('interface', 'interfac'), ('creating', 'creat'), ('data', 'data'), ('presentations', 'present'), ('analysis', 'analysi'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('basic', 'basic'), ('principle', 'principl'), ('behind', 'behind'), ('pandas', 'panda'), ('provide', 'provid'), ('data', 'data'), ('analysis', 'analysi'), ('modelling', 'model'), ('support', 'support'), ('Python', 'python'), ('similar', 'similar'), ('languages', 'languag'), ('R.', 'r.'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('02', '02'), ('–', '–'), ('Data', 'data'), ('Science', 'scienc'), ('Python', 'python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('3', '3'), (')', ')'), ('matplotlib', 'matplotlib'), ('The', 'the'), ('matplotlib', 'matplotlib'), ('library', 'librari'), ('gives', 'give'), ('MATLAB', 'matlab'), ('like', 'like'), ('interface', 'interfac'), ('creating', 'creat'), ('data', 'data'), ('presentations', 'present'), ('analysis', 'analysi'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('basic', 'basic'), ('principle', 'principle'), ('behind', 'behind'), ('pandas', 'panda'), ('provide', 'provide'), ('data', 'data'), ('analysis', 'analysis'), ('modelling', 'modelling'), ('support', 'support'), ('Python', 'Python'), ('similar', 'similar'), ('languages', 'language'), ('R.', 'R.'), ('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('02', '02'), ('–', '–'), ('Data', 'Data'), ('Science', 'Science'), ('Python', 'Python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('3', '3'), (')', ')'), ('matplotlib', 'matplotlib'), ('The', 'The'), ('matplotlib', 'matplotlib'), ('library', 'library'), ('gives', 'give'), ('MATLAB', 'MATLAB'), ('like', 'like'), ('interface', 'interface'), ('creating', 'creating'), ('data', 'data'), ('presentations', 'presentation'), ('analysis', 'analysis'), ('.', '.')]



============================ Sentence 59 =============================

The library is initially limited to 2-D output, but it still provide means to express analysis graphically. 


>> Tokens are: 
 ['The', 'library', 'initially', 'limited', '2-D', 'output', ',', 'still', 'provide', 'means', 'express', 'analysis', 'graphically', '.']

>> Bigrams are: 
 [('The', 'library'), ('library', 'initially'), ('initially', 'limited'), ('limited', '2-D'), ('2-D', 'output'), ('output', ','), (',', 'still'), ('still', 'provide'), ('provide', 'means'), ('means', 'express'), ('express', 'analysis'), ('analysis', 'graphically'), ('graphically', '.')]

>> Trigrams are: 
 [('The', 'library', 'initially'), ('library', 'initially', 'limited'), ('initially', 'limited', '2-D'), ('limited', '2-D', 'output'), ('2-D', 'output', ','), ('output', ',', 'still'), (',', 'still', 'provide'), ('still', 'provide', 'means'), ('provide', 'means', 'express'), ('means', 'express', 'analysis'), ('express', 'analysis', 'graphically'), ('analysis', 'graphically', '.')]

>> POS Tags are: 
 [('The', 'DT'), ('library', 'NN'), ('initially', 'RB'), ('limited', 'VBD'), ('2-D', 'JJ'), ('output', 'NN'), (',', ','), ('still', 'RB'), ('provide', 'VB'), ('means', 'NNS'), ('express', 'JJ'), ('analysis', 'NN'), ('graphically', 'RB'), ('.', '.')]

 (S
  (NP The/DT library/NN)
  initially/RB
  limited/VBD
  (NP 2-D/JJ output/NN)
  ,/,
  still/RB
  provide/VB
  (NP means/NNS)
  (NP express/JJ analysis/NN)
  graphically/RB
  ./.) 


>> Noun Phrases are: 
 ['The library', '2-D output', 'means', 'express analysis']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('The', 'the'), ('library', 'librari'), ('initially', 'initi'), ('limited', 'limit'), ('2-D', '2-d'), ('output', 'output'), (',', ','), ('still', 'still'), ('provide', 'provid'), ('means', 'mean'), ('express', 'express'), ('analysis', 'analysi'), ('graphically', 'graphic'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('The', 'the'), ('library', 'librari'), ('initially', 'initi'), ('limited', 'limit'), ('2-D', '2-d'), ('output', 'output'), (',', ','), ('still', 'still'), ('provide', 'provid'), ('means', 'mean'), ('express', 'express'), ('analysis', 'analysi'), ('graphically', 'graphic'), ('.', '.')]

>> Lemmatization: 
 [('The', 'The'), ('library', 'library'), ('initially', 'initially'), ('limited', 'limited'), ('2-D', '2-D'), ('output', 'output'), (',', ','), ('still', 'still'), ('provide', 'provide'), ('means', 'mean'), ('express', 'express'), ('analysis', 'analysis'), ('graphically', 'graphically'), ('.', '.')]



============================ Sentence 60 =============================

Without this library we can not create output that people outside the data science community could easily understand. 


>> Tokens are: 
 ['Without', 'library', 'create', 'output', 'people', 'outside', 'data', 'science', 'community', 'could', 'easily', 'understand', '.']

>> Bigrams are: 
 [('Without', 'library'), ('library', 'create'), ('create', 'output'), ('output', 'people'), ('people', 'outside'), ('outside', 'data'), ('data', 'science'), ('science', 'community'), ('community', 'could'), ('could', 'easily'), ('easily', 'understand'), ('understand', '.')]

>> Trigrams are: 
 [('Without', 'library', 'create'), ('library', 'create', 'output'), ('create', 'output', 'people'), ('output', 'people', 'outside'), ('people', 'outside', 'data'), ('outside', 'data', 'science'), ('data', 'science', 'community'), ('science', 'community', 'could'), ('community', 'could', 'easily'), ('could', 'easily', 'understand'), ('easily', 'understand', '.')]

>> POS Tags are: 
 [('Without', 'IN'), ('library', 'JJ'), ('create', 'NN'), ('output', 'NN'), ('people', 'NNS'), ('outside', 'IN'), ('data', 'NNS'), ('science', 'NN'), ('community', 'NN'), ('could', 'MD'), ('easily', 'RB'), ('understand', 'VB'), ('.', '.')]

 (S
  Without/IN
  (NP library/JJ create/NN output/NN people/NNS)
  outside/IN
  (NP data/NNS science/NN community/NN)
  could/MD
  easily/RB
  understand/VB
  ./.) 


>> Noun Phrases are: 
 ['library create output people', 'data science community']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('Without', 'without'), ('library', 'librari'), ('create', 'creat'), ('output', 'output'), ('people', 'peopl'), ('outside', 'outsid'), ('data', 'data'), ('science', 'scienc'), ('community', 'commun'), ('could', 'could'), ('easily', 'easili'), ('understand', 'understand'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Without', 'without'), ('library', 'librari'), ('create', 'creat'), ('output', 'output'), ('people', 'peopl'), ('outside', 'outsid'), ('data', 'data'), ('science', 'scienc'), ('community', 'communiti'), ('could', 'could'), ('easily', 'easili'), ('understand', 'understand'), ('.', '.')]

>> Lemmatization: 
 [('Without', 'Without'), ('library', 'library'), ('create', 'create'), ('output', 'output'), ('people', 'people'), ('outside', 'outside'), ('data', 'data'), ('science', 'science'), ('community', 'community'), ('could', 'could'), ('easily', 'easily'), ('understand', 'understand'), ('.', '.')]



============================ Sentence 61 =============================

Prof. Arjun V. Bala #3150713 (PDS)      Unit 02 – Data Science and Python ‹#›  4) SciPy The SciPy stack contains a host of other libraries that we can also download separately. 


>> Tokens are: 
 ['Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '02', '–', 'Data', 'Science', 'Python', '‹', '#', '›', '4', ')', 'SciPy', 'The', 'SciPy', 'stack', 'contains', 'host', 'libraries', 'also', 'download', 'separately', '.']

>> Bigrams are: 
 [('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '02'), ('02', '–'), ('–', 'Data'), ('Data', 'Science'), ('Science', 'Python'), ('Python', '‹'), ('‹', '#'), ('#', '›'), ('›', '4'), ('4', ')'), (')', 'SciPy'), ('SciPy', 'The'), ('The', 'SciPy'), ('SciPy', 'stack'), ('stack', 'contains'), ('contains', 'host'), ('host', 'libraries'), ('libraries', 'also'), ('also', 'download'), ('download', 'separately'), ('separately', '.')]

>> Trigrams are: 
 [('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '02'), ('Unit', '02', '–'), ('02', '–', 'Data'), ('–', 'Data', 'Science'), ('Data', 'Science', 'Python'), ('Science', 'Python', '‹'), ('Python', '‹', '#'), ('‹', '#', '›'), ('#', '›', '4'), ('›', '4', ')'), ('4', ')', 'SciPy'), (')', 'SciPy', 'The'), ('SciPy', 'The', 'SciPy'), ('The', 'SciPy', 'stack'), ('SciPy', 'stack', 'contains'), ('stack', 'contains', 'host'), ('contains', 'host', 'libraries'), ('host', 'libraries', 'also'), ('libraries', 'also', 'download'), ('also', 'download', 'separately'), ('download', 'separately', '.')]

>> POS Tags are: 
 [('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('02', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Science', 'NNP'), ('Python', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('4', 'CD'), (')', ')'), ('SciPy', 'VBD'), ('The', 'DT'), ('SciPy', 'NNP'), ('stack', 'NN'), ('contains', 'VBZ'), ('host', 'NN'), ('libraries', 'NNS'), ('also', 'RB'), ('download', 'VBP'), ('separately', 'RB'), ('.', '.')]

 (S
  (NP Prof./NNP Arjun/NNP V./NNP Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  02/CD
  (NP –/NNP Data/NNP Science/NNP Python/NNP ‹/NNP)
  #/#
  (NP ›/NNP)
  4/CD
  )/)
  SciPy/VBD
  (NP The/DT SciPy/NNP stack/NN)
  contains/VBZ
  (NP host/NN libraries/NNS)
  also/RB
  download/VBP
  separately/RB
  ./.) 


>> Noun Phrases are: 
 ['Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Science Python ‹', '›', 'The SciPy stack', 'host libraries']

>> Named Entities are: 
 [('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Python'), ('ORGANIZATION', 'SciPy')] 

>> Stemming using Porter Stemmer: 
 [('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('02', '02'), ('–', '–'), ('Data', 'data'), ('Science', 'scienc'), ('Python', 'python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('4', '4'), (')', ')'), ('SciPy', 'scipi'), ('The', 'the'), ('SciPy', 'scipi'), ('stack', 'stack'), ('contains', 'contain'), ('host', 'host'), ('libraries', 'librari'), ('also', 'also'), ('download', 'download'), ('separately', 'separ'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('02', '02'), ('–', '–'), ('Data', 'data'), ('Science', 'scienc'), ('Python', 'python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('4', '4'), (')', ')'), ('SciPy', 'scipi'), ('The', 'the'), ('SciPy', 'scipi'), ('stack', 'stack'), ('contains', 'contain'), ('host', 'host'), ('libraries', 'librari'), ('also', 'also'), ('download', 'download'), ('separately', 'separ'), ('.', '.')]

>> Lemmatization: 
 [('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('02', '02'), ('–', '–'), ('Data', 'Data'), ('Science', 'Science'), ('Python', 'Python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('4', '4'), (')', ')'), ('SciPy', 'SciPy'), ('The', 'The'), ('SciPy', 'SciPy'), ('stack', 'stack'), ('contains', 'contains'), ('host', 'host'), ('libraries', 'library'), ('also', 'also'), ('download', 'download'), ('separately', 'separately'), ('.', '.')]



============================ Sentence 62 =============================

These libraries provide support for mathematics, science and engineering. 


>> Tokens are: 
 ['These', 'libraries', 'provide', 'support', 'mathematics', ',', 'science', 'engineering', '.']

>> Bigrams are: 
 [('These', 'libraries'), ('libraries', 'provide'), ('provide', 'support'), ('support', 'mathematics'), ('mathematics', ','), (',', 'science'), ('science', 'engineering'), ('engineering', '.')]

>> Trigrams are: 
 [('These', 'libraries', 'provide'), ('libraries', 'provide', 'support'), ('provide', 'support', 'mathematics'), ('support', 'mathematics', ','), ('mathematics', ',', 'science'), (',', 'science', 'engineering'), ('science', 'engineering', '.')]

>> POS Tags are: 
 [('These', 'DT'), ('libraries', 'NNS'), ('provide', 'VBP'), ('support', 'NN'), ('mathematics', 'NNS'), (',', ','), ('science', 'NN'), ('engineering', 'NN'), ('.', '.')]

 (S
  (NP These/DT libraries/NNS)
  provide/VBP
  (NP support/NN mathematics/NNS)
  ,/,
  (NP science/NN engineering/NN)
  ./.) 


>> Noun Phrases are: 
 ['These libraries', 'support mathematics', 'science engineering']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('These', 'these'), ('libraries', 'librari'), ('provide', 'provid'), ('support', 'support'), ('mathematics', 'mathemat'), (',', ','), ('science', 'scienc'), ('engineering', 'engin'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('These', 'these'), ('libraries', 'librari'), ('provide', 'provid'), ('support', 'support'), ('mathematics', 'mathemat'), (',', ','), ('science', 'scienc'), ('engineering', 'engin'), ('.', '.')]

>> Lemmatization: 
 [('These', 'These'), ('libraries', 'library'), ('provide', 'provide'), ('support', 'support'), ('mathematics', 'mathematics'), (',', ','), ('science', 'science'), ('engineering', 'engineering'), ('.', '.')]



============================ Sentence 63 =============================

When we obtain SciPy, we get a set of libraries designed to work together to create applications of various sorts, these libraries are NumPy Pandas matplotlib Jupeter Sympy Etc…..      Prof. Arjun V. Bala #3150713 (PDS)      Unit 02 – Data Science and Python ‹#›  5) Scikit-learn The Scikit-learn library is one of many Scikit libraries that build on the capabilities provided by NumPy and SciPy to allow Python developers to perform domain specific tasks. 


>> Tokens are: 
 ['When', 'obtain', 'SciPy', ',', 'get', 'set', 'libraries', 'designed', 'work', 'together', 'create', 'applications', 'various', 'sorts', ',', 'libraries', 'NumPy', 'Pandas', 'matplotlib', 'Jupeter', 'Sympy', 'Etc…', '..', 'Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '02', '–', 'Data', 'Science', 'Python', '‹', '#', '›', '5', ')', 'Scikit-learn', 'The', 'Scikit-learn', 'library', 'one', 'many', 'Scikit', 'libraries', 'build', 'capabilities', 'provided', 'NumPy', 'SciPy', 'allow', 'Python', 'developers', 'perform', 'domain', 'specific', 'tasks', '.']

>> Bigrams are: 
 [('When', 'obtain'), ('obtain', 'SciPy'), ('SciPy', ','), (',', 'get'), ('get', 'set'), ('set', 'libraries'), ('libraries', 'designed'), ('designed', 'work'), ('work', 'together'), ('together', 'create'), ('create', 'applications'), ('applications', 'various'), ('various', 'sorts'), ('sorts', ','), (',', 'libraries'), ('libraries', 'NumPy'), ('NumPy', 'Pandas'), ('Pandas', 'matplotlib'), ('matplotlib', 'Jupeter'), ('Jupeter', 'Sympy'), ('Sympy', 'Etc…'), ('Etc…', '..'), ('..', 'Prof.'), ('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '02'), ('02', '–'), ('–', 'Data'), ('Data', 'Science'), ('Science', 'Python'), ('Python', '‹'), ('‹', '#'), ('#', '›'), ('›', '5'), ('5', ')'), (')', 'Scikit-learn'), ('Scikit-learn', 'The'), ('The', 'Scikit-learn'), ('Scikit-learn', 'library'), ('library', 'one'), ('one', 'many'), ('many', 'Scikit'), ('Scikit', 'libraries'), ('libraries', 'build'), ('build', 'capabilities'), ('capabilities', 'provided'), ('provided', 'NumPy'), ('NumPy', 'SciPy'), ('SciPy', 'allow'), ('allow', 'Python'), ('Python', 'developers'), ('developers', 'perform'), ('perform', 'domain'), ('domain', 'specific'), ('specific', 'tasks'), ('tasks', '.')]

>> Trigrams are: 
 [('When', 'obtain', 'SciPy'), ('obtain', 'SciPy', ','), ('SciPy', ',', 'get'), (',', 'get', 'set'), ('get', 'set', 'libraries'), ('set', 'libraries', 'designed'), ('libraries', 'designed', 'work'), ('designed', 'work', 'together'), ('work', 'together', 'create'), ('together', 'create', 'applications'), ('create', 'applications', 'various'), ('applications', 'various', 'sorts'), ('various', 'sorts', ','), ('sorts', ',', 'libraries'), (',', 'libraries', 'NumPy'), ('libraries', 'NumPy', 'Pandas'), ('NumPy', 'Pandas', 'matplotlib'), ('Pandas', 'matplotlib', 'Jupeter'), ('matplotlib', 'Jupeter', 'Sympy'), ('Jupeter', 'Sympy', 'Etc…'), ('Sympy', 'Etc…', '..'), ('Etc…', '..', 'Prof.'), ('..', 'Prof.', 'Arjun'), ('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '02'), ('Unit', '02', '–'), ('02', '–', 'Data'), ('–', 'Data', 'Science'), ('Data', 'Science', 'Python'), ('Science', 'Python', '‹'), ('Python', '‹', '#'), ('‹', '#', '›'), ('#', '›', '5'), ('›', '5', ')'), ('5', ')', 'Scikit-learn'), (')', 'Scikit-learn', 'The'), ('Scikit-learn', 'The', 'Scikit-learn'), ('The', 'Scikit-learn', 'library'), ('Scikit-learn', 'library', 'one'), ('library', 'one', 'many'), ('one', 'many', 'Scikit'), ('many', 'Scikit', 'libraries'), ('Scikit', 'libraries', 'build'), ('libraries', 'build', 'capabilities'), ('build', 'capabilities', 'provided'), ('capabilities', 'provided', 'NumPy'), ('provided', 'NumPy', 'SciPy'), ('NumPy', 'SciPy', 'allow'), ('SciPy', 'allow', 'Python'), ('allow', 'Python', 'developers'), ('Python', 'developers', 'perform'), ('developers', 'perform', 'domain'), ('perform', 'domain', 'specific'), ('domain', 'specific', 'tasks'), ('specific', 'tasks', '.')]

>> POS Tags are: 
 [('When', 'WRB'), ('obtain', 'VB'), ('SciPy', 'NNP'), (',', ','), ('get', 'NN'), ('set', 'VBN'), ('libraries', 'NNS'), ('designed', 'VBN'), ('work', 'VBP'), ('together', 'RB'), ('create', 'JJ'), ('applications', 'NNS'), ('various', 'JJ'), ('sorts', 'NNS'), (',', ','), ('libraries', 'NNS'), ('NumPy', 'NNP'), ('Pandas', 'NNP'), ('matplotlib', 'NN'), ('Jupeter', 'NNP'), ('Sympy', 'NNP'), ('Etc…', 'NNP'), ('..', 'NNP'), ('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('02', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Science', 'NNP'), ('Python', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('5', 'CD'), (')', ')'), ('Scikit-learn', 'CD'), ('The', 'DT'), ('Scikit-learn', 'NNP'), ('library', 'JJ'), ('one', 'CD'), ('many', 'JJ'), ('Scikit', 'NNP'), ('libraries', 'NNS'), ('build', 'VBP'), ('capabilities', 'NNS'), ('provided', 'VBD'), ('NumPy', 'NNP'), ('SciPy', 'NNP'), ('allow', 'VB'), ('Python', 'NNP'), ('developers', 'NNS'), ('perform', 'VBP'), ('domain', 'NN'), ('specific', 'JJ'), ('tasks', 'NNS'), ('.', '.')]

 (S
  When/WRB
  obtain/VB
  (NP SciPy/NNP)
  ,/,
  (NP get/NN)
  set/VBN
  (NP libraries/NNS)
  designed/VBN
  work/VBP
  together/RB
  (NP create/JJ applications/NNS)
  (NP various/JJ sorts/NNS)
  ,/,
  (NP
    libraries/NNS
    NumPy/NNP
    Pandas/NNP
    matplotlib/NN
    Jupeter/NNP
    Sympy/NNP
    Etc…/NNP
    ../NNP
    Prof./NNP
    Arjun/NNP
    V./NNP
    Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  02/CD
  (NP –/NNP Data/NNP Science/NNP Python/NNP ‹/NNP)
  #/#
  (NP ›/NNP)
  5/CD
  )/)
  Scikit-learn/CD
  (NP The/DT Scikit-learn/NNP)
  library/JJ
  one/CD
  (NP many/JJ Scikit/NNP libraries/NNS)
  build/VBP
  (NP capabilities/NNS)
  provided/VBD
  (NP NumPy/NNP SciPy/NNP)
  allow/VB
  (NP Python/NNP developers/NNS)
  perform/VBP
  (NP domain/NN)
  (NP specific/JJ tasks/NNS)
  ./.) 


>> Noun Phrases are: 
 ['SciPy', 'get', 'libraries', 'create applications', 'various sorts', 'libraries NumPy Pandas matplotlib Jupeter Sympy Etc… .. Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Science Python ‹', '›', 'The Scikit-learn', 'many Scikit libraries', 'capabilities', 'NumPy SciPy', 'Python developers', 'domain', 'specific tasks']

>> Named Entities are: 
 [('ORGANIZATION', 'SciPy'), ('ORGANIZATION', 'NumPy Pandas'), ('PERSON', 'Jupeter Sympy'), ('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Python'), ('ORGANIZATION', 'NumPy'), ('PERSON', 'Python')] 

>> Stemming using Porter Stemmer: 
 [('When', 'when'), ('obtain', 'obtain'), ('SciPy', 'scipi'), (',', ','), ('get', 'get'), ('set', 'set'), ('libraries', 'librari'), ('designed', 'design'), ('work', 'work'), ('together', 'togeth'), ('create', 'creat'), ('applications', 'applic'), ('various', 'variou'), ('sorts', 'sort'), (',', ','), ('libraries', 'librari'), ('NumPy', 'numpi'), ('Pandas', 'panda'), ('matplotlib', 'matplotlib'), ('Jupeter', 'jupet'), ('Sympy', 'sympi'), ('Etc…', 'etc…'), ('..', '..'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('02', '02'), ('–', '–'), ('Data', 'data'), ('Science', 'scienc'), ('Python', 'python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('5', '5'), (')', ')'), ('Scikit-learn', 'scikit-learn'), ('The', 'the'), ('Scikit-learn', 'scikit-learn'), ('library', 'librari'), ('one', 'one'), ('many', 'mani'), ('Scikit', 'scikit'), ('libraries', 'librari'), ('build', 'build'), ('capabilities', 'capabl'), ('provided', 'provid'), ('NumPy', 'numpi'), ('SciPy', 'scipi'), ('allow', 'allow'), ('Python', 'python'), ('developers', 'develop'), ('perform', 'perform'), ('domain', 'domain'), ('specific', 'specif'), ('tasks', 'task'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('When', 'when'), ('obtain', 'obtain'), ('SciPy', 'scipi'), (',', ','), ('get', 'get'), ('set', 'set'), ('libraries', 'librari'), ('designed', 'design'), ('work', 'work'), ('together', 'togeth'), ('create', 'creat'), ('applications', 'applic'), ('various', 'various'), ('sorts', 'sort'), (',', ','), ('libraries', 'librari'), ('NumPy', 'numpi'), ('Pandas', 'panda'), ('matplotlib', 'matplotlib'), ('Jupeter', 'jupet'), ('Sympy', 'sympi'), ('Etc…', 'etc…'), ('..', '..'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('02', '02'), ('–', '–'), ('Data', 'data'), ('Science', 'scienc'), ('Python', 'python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('5', '5'), (')', ')'), ('Scikit-learn', 'scikit-learn'), ('The', 'the'), ('Scikit-learn', 'scikit-learn'), ('library', 'librari'), ('one', 'one'), ('many', 'mani'), ('Scikit', 'scikit'), ('libraries', 'librari'), ('build', 'build'), ('capabilities', 'capabl'), ('provided', 'provid'), ('NumPy', 'numpi'), ('SciPy', 'scipi'), ('allow', 'allow'), ('Python', 'python'), ('developers', 'develop'), ('perform', 'perform'), ('domain', 'domain'), ('specific', 'specif'), ('tasks', 'task'), ('.', '.')]

>> Lemmatization: 
 [('When', 'When'), ('obtain', 'obtain'), ('SciPy', 'SciPy'), (',', ','), ('get', 'get'), ('set', 'set'), ('libraries', 'library'), ('designed', 'designed'), ('work', 'work'), ('together', 'together'), ('create', 'create'), ('applications', 'application'), ('various', 'various'), ('sorts', 'sort'), (',', ','), ('libraries', 'library'), ('NumPy', 'NumPy'), ('Pandas', 'Pandas'), ('matplotlib', 'matplotlib'), ('Jupeter', 'Jupeter'), ('Sympy', 'Sympy'), ('Etc…', 'Etc…'), ('..', '..'), ('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('02', '02'), ('–', '–'), ('Data', 'Data'), ('Science', 'Science'), ('Python', 'Python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('5', '5'), (')', ')'), ('Scikit-learn', 'Scikit-learn'), ('The', 'The'), ('Scikit-learn', 'Scikit-learn'), ('library', 'library'), ('one', 'one'), ('many', 'many'), ('Scikit', 'Scikit'), ('libraries', 'library'), ('build', 'build'), ('capabilities', 'capability'), ('provided', 'provided'), ('NumPy', 'NumPy'), ('SciPy', 'SciPy'), ('allow', 'allow'), ('Python', 'Python'), ('developers', 'developer'), ('perform', 'perform'), ('domain', 'domain'), ('specific', 'specific'), ('tasks', 'task'), ('.', '.')]



============================ Sentence 64 =============================

Scikit-learn library focuses on data mining and data analysis, it provides access to following sort of functionality: Classification Regression Clustering Dimensionality reduction Model selection Pre-processing Scikit-learn is the most important library we are going to learn in this subject     Prof. Arjun V. Bala #3150713 (PDS)      Unit 02 – Data Science and Python ‹#›  6) Keras and TensorFlow Keras is an application programming interface (API) that is used to train deep learning models. 


>> Tokens are: 
 ['Scikit-learn', 'library', 'focuses', 'data', 'mining', 'data', 'analysis', ',', 'provides', 'access', 'following', 'sort', 'functionality', ':', 'Classification', 'Regression', 'Clustering', 'Dimensionality', 'reduction', 'Model', 'selection', 'Pre-processing', 'Scikit-learn', 'important', 'library', 'going', 'learn', 'subject', 'Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '02', '–', 'Data', 'Science', 'Python', '‹', '#', '›', '6', ')', 'Keras', 'TensorFlow', 'Keras', 'application', 'programming', 'interface', '(', 'API', ')', 'used', 'train', 'deep', 'learning', 'models', '.']

>> Bigrams are: 
 [('Scikit-learn', 'library'), ('library', 'focuses'), ('focuses', 'data'), ('data', 'mining'), ('mining', 'data'), ('data', 'analysis'), ('analysis', ','), (',', 'provides'), ('provides', 'access'), ('access', 'following'), ('following', 'sort'), ('sort', 'functionality'), ('functionality', ':'), (':', 'Classification'), ('Classification', 'Regression'), ('Regression', 'Clustering'), ('Clustering', 'Dimensionality'), ('Dimensionality', 'reduction'), ('reduction', 'Model'), ('Model', 'selection'), ('selection', 'Pre-processing'), ('Pre-processing', 'Scikit-learn'), ('Scikit-learn', 'important'), ('important', 'library'), ('library', 'going'), ('going', 'learn'), ('learn', 'subject'), ('subject', 'Prof.'), ('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '02'), ('02', '–'), ('–', 'Data'), ('Data', 'Science'), ('Science', 'Python'), ('Python', '‹'), ('‹', '#'), ('#', '›'), ('›', '6'), ('6', ')'), (')', 'Keras'), ('Keras', 'TensorFlow'), ('TensorFlow', 'Keras'), ('Keras', 'application'), ('application', 'programming'), ('programming', 'interface'), ('interface', '('), ('(', 'API'), ('API', ')'), (')', 'used'), ('used', 'train'), ('train', 'deep'), ('deep', 'learning'), ('learning', 'models'), ('models', '.')]

>> Trigrams are: 
 [('Scikit-learn', 'library', 'focuses'), ('library', 'focuses', 'data'), ('focuses', 'data', 'mining'), ('data', 'mining', 'data'), ('mining', 'data', 'analysis'), ('data', 'analysis', ','), ('analysis', ',', 'provides'), (',', 'provides', 'access'), ('provides', 'access', 'following'), ('access', 'following', 'sort'), ('following', 'sort', 'functionality'), ('sort', 'functionality', ':'), ('functionality', ':', 'Classification'), (':', 'Classification', 'Regression'), ('Classification', 'Regression', 'Clustering'), ('Regression', 'Clustering', 'Dimensionality'), ('Clustering', 'Dimensionality', 'reduction'), ('Dimensionality', 'reduction', 'Model'), ('reduction', 'Model', 'selection'), ('Model', 'selection', 'Pre-processing'), ('selection', 'Pre-processing', 'Scikit-learn'), ('Pre-processing', 'Scikit-learn', 'important'), ('Scikit-learn', 'important', 'library'), ('important', 'library', 'going'), ('library', 'going', 'learn'), ('going', 'learn', 'subject'), ('learn', 'subject', 'Prof.'), ('subject', 'Prof.', 'Arjun'), ('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '02'), ('Unit', '02', '–'), ('02', '–', 'Data'), ('–', 'Data', 'Science'), ('Data', 'Science', 'Python'), ('Science', 'Python', '‹'), ('Python', '‹', '#'), ('‹', '#', '›'), ('#', '›', '6'), ('›', '6', ')'), ('6', ')', 'Keras'), (')', 'Keras', 'TensorFlow'), ('Keras', 'TensorFlow', 'Keras'), ('TensorFlow', 'Keras', 'application'), ('Keras', 'application', 'programming'), ('application', 'programming', 'interface'), ('programming', 'interface', '('), ('interface', '(', 'API'), ('(', 'API', ')'), ('API', ')', 'used'), (')', 'used', 'train'), ('used', 'train', 'deep'), ('train', 'deep', 'learning'), ('deep', 'learning', 'models'), ('learning', 'models', '.')]

>> POS Tags are: 
 [('Scikit-learn', 'JJ'), ('library', 'JJ'), ('focuses', 'NNS'), ('data', 'VBP'), ('mining', 'NN'), ('data', 'NNS'), ('analysis', 'NN'), (',', ','), ('provides', 'VBZ'), ('access', 'NN'), ('following', 'VBG'), ('sort', 'NN'), ('functionality', 'NN'), (':', ':'), ('Classification', 'NN'), ('Regression', 'NNP'), ('Clustering', 'NNP'), ('Dimensionality', 'NNP'), ('reduction', 'NN'), ('Model', 'NNP'), ('selection', 'NN'), ('Pre-processing', 'NNP'), ('Scikit-learn', 'NNP'), ('important', 'JJ'), ('library', 'NN'), ('going', 'VBG'), ('learn', 'JJ'), ('subject', 'JJ'), ('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('02', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Science', 'NNP'), ('Python', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('6', 'CD'), (')', ')'), ('Keras', 'NNP'), ('TensorFlow', 'NNP'), ('Keras', 'NNP'), ('application', 'NN'), ('programming', 'VBG'), ('interface', 'NN'), ('(', '('), ('API', 'NNP'), (')', ')'), ('used', 'VBD'), ('train', 'NN'), ('deep', 'JJ'), ('learning', 'NN'), ('models', 'NNS'), ('.', '.')]

 (S
  (NP Scikit-learn/JJ library/JJ focuses/NNS)
  data/VBP
  (NP mining/NN data/NNS analysis/NN)
  ,/,
  provides/VBZ
  (NP access/NN)
  following/VBG
  (NP sort/NN functionality/NN)
  :/:
  (NP
    Classification/NN
    Regression/NNP
    Clustering/NNP
    Dimensionality/NNP
    reduction/NN
    Model/NNP
    selection/NN
    Pre-processing/NNP
    Scikit-learn/NNP)
  (NP important/JJ library/NN)
  going/VBG
  (NP learn/JJ subject/JJ Prof./NNP Arjun/NNP V./NNP Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  02/CD
  (NP –/NNP Data/NNP Science/NNP Python/NNP ‹/NNP)
  #/#
  (NP ›/NNP)
  6/CD
  )/)
  (NP Keras/NNP TensorFlow/NNP Keras/NNP application/NN)
  programming/VBG
  (NP interface/NN)
  (/(
  (NP API/NNP)
  )/)
  used/VBD
  (NP train/NN)
  (NP deep/JJ learning/NN models/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Scikit-learn library focuses', 'mining data analysis', 'access', 'sort functionality', 'Classification Regression Clustering Dimensionality reduction Model selection Pre-processing Scikit-learn', 'important library', 'learn subject Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Science Python ‹', '›', 'Keras TensorFlow Keras application', 'interface', 'API', 'train', 'deep learning models']

>> Named Entities are: 
 [('PERSON', 'Model'), ('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Python'), ('PERSON', 'Keras TensorFlow Keras'), ('ORGANIZATION', 'API')] 

>> Stemming using Porter Stemmer: 
 [('Scikit-learn', 'scikit-learn'), ('library', 'librari'), ('focuses', 'focus'), ('data', 'data'), ('mining', 'mine'), ('data', 'data'), ('analysis', 'analysi'), (',', ','), ('provides', 'provid'), ('access', 'access'), ('following', 'follow'), ('sort', 'sort'), ('functionality', 'function'), (':', ':'), ('Classification', 'classif'), ('Regression', 'regress'), ('Clustering', 'cluster'), ('Dimensionality', 'dimension'), ('reduction', 'reduct'), ('Model', 'model'), ('selection', 'select'), ('Pre-processing', 'pre-process'), ('Scikit-learn', 'scikit-learn'), ('important', 'import'), ('library', 'librari'), ('going', 'go'), ('learn', 'learn'), ('subject', 'subject'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('02', '02'), ('–', '–'), ('Data', 'data'), ('Science', 'scienc'), ('Python', 'python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('6', '6'), (')', ')'), ('Keras', 'kera'), ('TensorFlow', 'tensorflow'), ('Keras', 'kera'), ('application', 'applic'), ('programming', 'program'), ('interface', 'interfac'), ('(', '('), ('API', 'api'), (')', ')'), ('used', 'use'), ('train', 'train'), ('deep', 'deep'), ('learning', 'learn'), ('models', 'model'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Scikit-learn', 'scikit-learn'), ('library', 'librari'), ('focuses', 'focus'), ('data', 'data'), ('mining', 'mine'), ('data', 'data'), ('analysis', 'analysi'), (',', ','), ('provides', 'provid'), ('access', 'access'), ('following', 'follow'), ('sort', 'sort'), ('functionality', 'function'), (':', ':'), ('Classification', 'classif'), ('Regression', 'regress'), ('Clustering', 'cluster'), ('Dimensionality', 'dimension'), ('reduction', 'reduct'), ('Model', 'model'), ('selection', 'select'), ('Pre-processing', 'pre-process'), ('Scikit-learn', 'scikit-learn'), ('important', 'import'), ('library', 'librari'), ('going', 'go'), ('learn', 'learn'), ('subject', 'subject'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('02', '02'), ('–', '–'), ('Data', 'data'), ('Science', 'scienc'), ('Python', 'python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('6', '6'), (')', ')'), ('Keras', 'kera'), ('TensorFlow', 'tensorflow'), ('Keras', 'kera'), ('application', 'applic'), ('programming', 'program'), ('interface', 'interfac'), ('(', '('), ('API', 'api'), (')', ')'), ('used', 'use'), ('train', 'train'), ('deep', 'deep'), ('learning', 'learn'), ('models', 'model'), ('.', '.')]

>> Lemmatization: 
 [('Scikit-learn', 'Scikit-learn'), ('library', 'library'), ('focuses', 'focus'), ('data', 'data'), ('mining', 'mining'), ('data', 'data'), ('analysis', 'analysis'), (',', ','), ('provides', 'provides'), ('access', 'access'), ('following', 'following'), ('sort', 'sort'), ('functionality', 'functionality'), (':', ':'), ('Classification', 'Classification'), ('Regression', 'Regression'), ('Clustering', 'Clustering'), ('Dimensionality', 'Dimensionality'), ('reduction', 'reduction'), ('Model', 'Model'), ('selection', 'selection'), ('Pre-processing', 'Pre-processing'), ('Scikit-learn', 'Scikit-learn'), ('important', 'important'), ('library', 'library'), ('going', 'going'), ('learn', 'learn'), ('subject', 'subject'), ('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('02', '02'), ('–', '–'), ('Data', 'Data'), ('Science', 'Science'), ('Python', 'Python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('6', '6'), (')', ')'), ('Keras', 'Keras'), ('TensorFlow', 'TensorFlow'), ('Keras', 'Keras'), ('application', 'application'), ('programming', 'programming'), ('interface', 'interface'), ('(', '('), ('API', 'API'), (')', ')'), ('used', 'used'), ('train', 'train'), ('deep', 'deep'), ('learning', 'learning'), ('models', 'model'), ('.', '.')]



============================ Sentence 65 =============================

An API often specifies a model for doing something, but it doesn’t provide an implementation. 


>> Tokens are: 
 ['An', 'API', 'often', 'specifies', 'model', 'something', ',', '’', 'provide', 'implementation', '.']

>> Bigrams are: 
 [('An', 'API'), ('API', 'often'), ('often', 'specifies'), ('specifies', 'model'), ('model', 'something'), ('something', ','), (',', '’'), ('’', 'provide'), ('provide', 'implementation'), ('implementation', '.')]

>> Trigrams are: 
 [('An', 'API', 'often'), ('API', 'often', 'specifies'), ('often', 'specifies', 'model'), ('specifies', 'model', 'something'), ('model', 'something', ','), ('something', ',', '’'), (',', '’', 'provide'), ('’', 'provide', 'implementation'), ('provide', 'implementation', '.')]

>> POS Tags are: 
 [('An', 'DT'), ('API', 'NNP'), ('often', 'RB'), ('specifies', 'VBZ'), ('model', 'NN'), ('something', 'NN'), (',', ','), ('’', 'NNP'), ('provide', 'VBP'), ('implementation', 'NN'), ('.', '.')]

 (S
  (NP An/DT API/NNP)
  often/RB
  specifies/VBZ
  (NP model/NN something/NN)
  ,/,
  (NP ’/NNP)
  provide/VBP
  (NP implementation/NN)
  ./.) 


>> Noun Phrases are: 
 ['An API', 'model something', '’', 'implementation']

>> Named Entities are: 
 [] 

>> Stemming using Porter Stemmer: 
 [('An', 'an'), ('API', 'api'), ('often', 'often'), ('specifies', 'specifi'), ('model', 'model'), ('something', 'someth'), (',', ','), ('’', '’'), ('provide', 'provid'), ('implementation', 'implement'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('An', 'an'), ('API', 'api'), ('often', 'often'), ('specifies', 'specifi'), ('model', 'model'), ('something', 'someth'), (',', ','), ('’', '’'), ('provide', 'provid'), ('implementation', 'implement'), ('.', '.')]

>> Lemmatization: 
 [('An', 'An'), ('API', 'API'), ('often', 'often'), ('specifies', 'specifies'), ('model', 'model'), ('something', 'something'), (',', ','), ('’', '’'), ('provide', 'provide'), ('implementation', 'implementation'), ('.', '.')]



============================ Sentence 66 =============================

TensorFlow is an implementation for the keras, there are many other implementations for the keras like Microsoft’s cognitive Toolkit, CNKT Theano     Prof. Arjun V. Bala #3150713 (PDS)      Unit 02 – Data Science and Python ‹#›  7) NetworkX NetworkX is a Python package for the creation, manipulation, and study of the structure, dynamics, and functions of complex networks (For example GPS setup to discover routes through city streets). 


>> Tokens are: 
 ['TensorFlow', 'implementation', 'keras', ',', 'many', 'implementations', 'keras', 'like', 'Microsoft', '’', 'cognitive', 'Toolkit', ',', 'CNKT', 'Theano', 'Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '02', '–', 'Data', 'Science', 'Python', '‹', '#', '›', '7', ')', 'NetworkX', 'NetworkX', 'Python', 'package', 'creation', ',', 'manipulation', ',', 'study', 'structure', ',', 'dynamics', ',', 'functions', 'complex', 'networks', '(', 'For', 'example', 'GPS', 'setup', 'discover', 'routes', 'city', 'streets', ')', '.']

>> Bigrams are: 
 [('TensorFlow', 'implementation'), ('implementation', 'keras'), ('keras', ','), (',', 'many'), ('many', 'implementations'), ('implementations', 'keras'), ('keras', 'like'), ('like', 'Microsoft'), ('Microsoft', '’'), ('’', 'cognitive'), ('cognitive', 'Toolkit'), ('Toolkit', ','), (',', 'CNKT'), ('CNKT', 'Theano'), ('Theano', 'Prof.'), ('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '02'), ('02', '–'), ('–', 'Data'), ('Data', 'Science'), ('Science', 'Python'), ('Python', '‹'), ('‹', '#'), ('#', '›'), ('›', '7'), ('7', ')'), (')', 'NetworkX'), ('NetworkX', 'NetworkX'), ('NetworkX', 'Python'), ('Python', 'package'), ('package', 'creation'), ('creation', ','), (',', 'manipulation'), ('manipulation', ','), (',', 'study'), ('study', 'structure'), ('structure', ','), (',', 'dynamics'), ('dynamics', ','), (',', 'functions'), ('functions', 'complex'), ('complex', 'networks'), ('networks', '('), ('(', 'For'), ('For', 'example'), ('example', 'GPS'), ('GPS', 'setup'), ('setup', 'discover'), ('discover', 'routes'), ('routes', 'city'), ('city', 'streets'), ('streets', ')'), (')', '.')]

>> Trigrams are: 
 [('TensorFlow', 'implementation', 'keras'), ('implementation', 'keras', ','), ('keras', ',', 'many'), (',', 'many', 'implementations'), ('many', 'implementations', 'keras'), ('implementations', 'keras', 'like'), ('keras', 'like', 'Microsoft'), ('like', 'Microsoft', '’'), ('Microsoft', '’', 'cognitive'), ('’', 'cognitive', 'Toolkit'), ('cognitive', 'Toolkit', ','), ('Toolkit', ',', 'CNKT'), (',', 'CNKT', 'Theano'), ('CNKT', 'Theano', 'Prof.'), ('Theano', 'Prof.', 'Arjun'), ('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '02'), ('Unit', '02', '–'), ('02', '–', 'Data'), ('–', 'Data', 'Science'), ('Data', 'Science', 'Python'), ('Science', 'Python', '‹'), ('Python', '‹', '#'), ('‹', '#', '›'), ('#', '›', '7'), ('›', '7', ')'), ('7', ')', 'NetworkX'), (')', 'NetworkX', 'NetworkX'), ('NetworkX', 'NetworkX', 'Python'), ('NetworkX', 'Python', 'package'), ('Python', 'package', 'creation'), ('package', 'creation', ','), ('creation', ',', 'manipulation'), (',', 'manipulation', ','), ('manipulation', ',', 'study'), (',', 'study', 'structure'), ('study', 'structure', ','), ('structure', ',', 'dynamics'), (',', 'dynamics', ','), ('dynamics', ',', 'functions'), (',', 'functions', 'complex'), ('functions', 'complex', 'networks'), ('complex', 'networks', '('), ('networks', '(', 'For'), ('(', 'For', 'example'), ('For', 'example', 'GPS'), ('example', 'GPS', 'setup'), ('GPS', 'setup', 'discover'), ('setup', 'discover', 'routes'), ('discover', 'routes', 'city'), ('routes', 'city', 'streets'), ('city', 'streets', ')'), ('streets', ')', '.')]

>> POS Tags are: 
 [('TensorFlow', 'NNP'), ('implementation', 'NN'), ('keras', 'NNS'), (',', ','), ('many', 'JJ'), ('implementations', 'NNS'), ('keras', 'VBP'), ('like', 'IN'), ('Microsoft', 'NNP'), ('’', 'NNP'), ('cognitive', 'JJ'), ('Toolkit', 'NNP'), (',', ','), ('CNKT', 'NNP'), ('Theano', 'NNP'), ('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('02', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Science', 'NNP'), ('Python', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('7', 'CD'), (')', ')'), ('NetworkX', 'NNP'), ('NetworkX', 'NNP'), ('Python', 'NNP'), ('package', 'NN'), ('creation', 'NN'), (',', ','), ('manipulation', 'NN'), (',', ','), ('study', 'NN'), ('structure', 'NN'), (',', ','), ('dynamics', 'NNS'), (',', ','), ('functions', 'NNS'), ('complex', 'VBP'), ('networks', 'NNS'), ('(', '('), ('For', 'IN'), ('example', 'NN'), ('GPS', 'NNP'), ('setup', 'NN'), ('discover', 'NN'), ('routes', 'VBZ'), ('city', 'NN'), ('streets', 'NNS'), (')', ')'), ('.', '.')]

 (S
  (NP TensorFlow/NNP implementation/NN keras/NNS)
  ,/,
  (NP many/JJ implementations/NNS)
  keras/VBP
  like/IN
  (NP Microsoft/NNP ’/NNP)
  (NP cognitive/JJ Toolkit/NNP)
  ,/,
  (NP CNKT/NNP Theano/NNP Prof./NNP Arjun/NNP V./NNP Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  02/CD
  (NP –/NNP Data/NNP Science/NNP Python/NNP ‹/NNP)
  #/#
  (NP ›/NNP)
  7/CD
  )/)
  (NP NetworkX/NNP NetworkX/NNP Python/NNP package/NN creation/NN)
  ,/,
  (NP manipulation/NN)
  ,/,
  (NP study/NN structure/NN)
  ,/,
  (NP dynamics/NNS)
  ,/,
  (NP functions/NNS)
  complex/VBP
  (NP networks/NNS)
  (/(
  For/IN
  (NP example/NN GPS/NNP setup/NN discover/NN)
  routes/VBZ
  (NP city/NN streets/NNS)
  )/)
  ./.) 


>> Noun Phrases are: 
 ['TensorFlow implementation keras', 'many implementations', 'Microsoft ’', 'cognitive Toolkit', 'CNKT Theano Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Science Python ‹', '›', 'NetworkX NetworkX Python package creation', 'manipulation', 'study structure', 'dynamics', 'functions', 'networks', 'example GPS setup discover', 'city streets']

>> Named Entities are: 
 [('GPE', 'TensorFlow'), ('ORGANIZATION', 'Microsoft'), ('ORGANIZATION', 'CNKT'), ('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Python'), ('ORGANIZATION', 'NetworkX'), ('ORGANIZATION', 'NetworkX Python'), ('ORGANIZATION', 'GPS')] 

>> Stemming using Porter Stemmer: 
 [('TensorFlow', 'tensorflow'), ('implementation', 'implement'), ('keras', 'kera'), (',', ','), ('many', 'mani'), ('implementations', 'implement'), ('keras', 'kera'), ('like', 'like'), ('Microsoft', 'microsoft'), ('’', '’'), ('cognitive', 'cognit'), ('Toolkit', 'toolkit'), (',', ','), ('CNKT', 'cnkt'), ('Theano', 'theano'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('02', '02'), ('–', '–'), ('Data', 'data'), ('Science', 'scienc'), ('Python', 'python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('7', '7'), (')', ')'), ('NetworkX', 'networkx'), ('NetworkX', 'networkx'), ('Python', 'python'), ('package', 'packag'), ('creation', 'creation'), (',', ','), ('manipulation', 'manipul'), (',', ','), ('study', 'studi'), ('structure', 'structur'), (',', ','), ('dynamics', 'dynam'), (',', ','), ('functions', 'function'), ('complex', 'complex'), ('networks', 'network'), ('(', '('), ('For', 'for'), ('example', 'exampl'), ('GPS', 'gp'), ('setup', 'setup'), ('discover', 'discov'), ('routes', 'rout'), ('city', 'citi'), ('streets', 'street'), (')', ')'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('TensorFlow', 'tensorflow'), ('implementation', 'implement'), ('keras', 'kera'), (',', ','), ('many', 'mani'), ('implementations', 'implement'), ('keras', 'kera'), ('like', 'like'), ('Microsoft', 'microsoft'), ('’', '’'), ('cognitive', 'cognit'), ('Toolkit', 'toolkit'), (',', ','), ('CNKT', 'cnkt'), ('Theano', 'theano'), ('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('02', '02'), ('–', '–'), ('Data', 'data'), ('Science', 'scienc'), ('Python', 'python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('7', '7'), (')', ')'), ('NetworkX', 'networkx'), ('NetworkX', 'networkx'), ('Python', 'python'), ('package', 'packag'), ('creation', 'creation'), (',', ','), ('manipulation', 'manipul'), (',', ','), ('study', 'studi'), ('structure', 'structur'), (',', ','), ('dynamics', 'dynam'), (',', ','), ('functions', 'function'), ('complex', 'complex'), ('networks', 'network'), ('(', '('), ('For', 'for'), ('example', 'exampl'), ('GPS', 'gps'), ('setup', 'setup'), ('discover', 'discov'), ('routes', 'rout'), ('city', 'citi'), ('streets', 'street'), (')', ')'), ('.', '.')]

>> Lemmatization: 
 [('TensorFlow', 'TensorFlow'), ('implementation', 'implementation'), ('keras', 'kera'), (',', ','), ('many', 'many'), ('implementations', 'implementation'), ('keras', 'kera'), ('like', 'like'), ('Microsoft', 'Microsoft'), ('’', '’'), ('cognitive', 'cognitive'), ('Toolkit', 'Toolkit'), (',', ','), ('CNKT', 'CNKT'), ('Theano', 'Theano'), ('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('02', '02'), ('–', '–'), ('Data', 'Data'), ('Science', 'Science'), ('Python', 'Python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('7', '7'), (')', ')'), ('NetworkX', 'NetworkX'), ('NetworkX', 'NetworkX'), ('Python', 'Python'), ('package', 'package'), ('creation', 'creation'), (',', ','), ('manipulation', 'manipulation'), (',', ','), ('study', 'study'), ('structure', 'structure'), (',', ','), ('dynamics', 'dynamic'), (',', ','), ('functions', 'function'), ('complex', 'complex'), ('networks', 'network'), ('(', '('), ('For', 'For'), ('example', 'example'), ('GPS', 'GPS'), ('setup', 'setup'), ('discover', 'discover'), ('routes', 'route'), ('city', 'city'), ('streets', 'street'), (')', ')'), ('.', '.')]



============================ Sentence 67 =============================

NetworkX also provides the means to output the resulting analysis in a form that humans understand. 


>> Tokens are: 
 ['NetworkX', 'also', 'provides', 'means', 'output', 'resulting', 'analysis', 'form', 'humans', 'understand', '.']

>> Bigrams are: 
 [('NetworkX', 'also'), ('also', 'provides'), ('provides', 'means'), ('means', 'output'), ('output', 'resulting'), ('resulting', 'analysis'), ('analysis', 'form'), ('form', 'humans'), ('humans', 'understand'), ('understand', '.')]

>> Trigrams are: 
 [('NetworkX', 'also', 'provides'), ('also', 'provides', 'means'), ('provides', 'means', 'output'), ('means', 'output', 'resulting'), ('output', 'resulting', 'analysis'), ('resulting', 'analysis', 'form'), ('analysis', 'form', 'humans'), ('form', 'humans', 'understand'), ('humans', 'understand', '.')]

>> POS Tags are: 
 [('NetworkX', 'NNP'), ('also', 'RB'), ('provides', 'VBZ'), ('means', 'NNS'), ('output', 'NN'), ('resulting', 'VBG'), ('analysis', 'NN'), ('form', 'NN'), ('humans', 'NNS'), ('understand', 'VBP'), ('.', '.')]

 (S
  (NP NetworkX/NNP)
  also/RB
  provides/VBZ
  (NP means/NNS output/NN)
  resulting/VBG
  (NP analysis/NN form/NN humans/NNS)
  understand/VBP
  ./.) 


>> Noun Phrases are: 
 ['NetworkX', 'means output', 'analysis form humans']

>> Named Entities are: 
 [('ORGANIZATION', 'NetworkX')] 

>> Stemming using Porter Stemmer: 
 [('NetworkX', 'networkx'), ('also', 'also'), ('provides', 'provid'), ('means', 'mean'), ('output', 'output'), ('resulting', 'result'), ('analysis', 'analysi'), ('form', 'form'), ('humans', 'human'), ('understand', 'understand'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('NetworkX', 'networkx'), ('also', 'also'), ('provides', 'provid'), ('means', 'mean'), ('output', 'output'), ('resulting', 'result'), ('analysis', 'analysi'), ('form', 'form'), ('humans', 'human'), ('understand', 'understand'), ('.', '.')]

>> Lemmatization: 
 [('NetworkX', 'NetworkX'), ('also', 'also'), ('provides', 'provides'), ('means', 'mean'), ('output', 'output'), ('resulting', 'resulting'), ('analysis', 'analysis'), ('form', 'form'), ('humans', 'human'), ('understand', 'understand'), ('.', '.')]



============================ Sentence 68 =============================

Main advantage of using NetworkX is that nodes can be anything (including images) and edges can hold arbitrary data. 


>> Tokens are: 
 ['Main', 'advantage', 'using', 'NetworkX', 'nodes', 'anything', '(', 'including', 'images', ')', 'edges', 'hold', 'arbitrary', 'data', '.']

>> Bigrams are: 
 [('Main', 'advantage'), ('advantage', 'using'), ('using', 'NetworkX'), ('NetworkX', 'nodes'), ('nodes', 'anything'), ('anything', '('), ('(', 'including'), ('including', 'images'), ('images', ')'), (')', 'edges'), ('edges', 'hold'), ('hold', 'arbitrary'), ('arbitrary', 'data'), ('data', '.')]

>> Trigrams are: 
 [('Main', 'advantage', 'using'), ('advantage', 'using', 'NetworkX'), ('using', 'NetworkX', 'nodes'), ('NetworkX', 'nodes', 'anything'), ('nodes', 'anything', '('), ('anything', '(', 'including'), ('(', 'including', 'images'), ('including', 'images', ')'), ('images', ')', 'edges'), (')', 'edges', 'hold'), ('edges', 'hold', 'arbitrary'), ('hold', 'arbitrary', 'data'), ('arbitrary', 'data', '.')]

>> POS Tags are: 
 [('Main', 'NNP'), ('advantage', 'NN'), ('using', 'VBG'), ('NetworkX', 'NNP'), ('nodes', 'NNS'), ('anything', 'NN'), ('(', '('), ('including', 'VBG'), ('images', 'NNS'), (')', ')'), ('edges', 'VBZ'), ('hold', 'VBP'), ('arbitrary', 'JJ'), ('data', 'NNS'), ('.', '.')]

 (S
  (NP Main/NNP advantage/NN)
  using/VBG
  (NP NetworkX/NNP nodes/NNS anything/NN)
  (/(
  including/VBG
  (NP images/NNS)
  )/)
  edges/VBZ
  hold/VBP
  (NP arbitrary/JJ data/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Main advantage', 'NetworkX nodes anything', 'images', 'arbitrary data']

>> Named Entities are: 
 [('GPE', 'Main'), ('ORGANIZATION', 'NetworkX')] 

>> Stemming using Porter Stemmer: 
 [('Main', 'main'), ('advantage', 'advantag'), ('using', 'use'), ('NetworkX', 'networkx'), ('nodes', 'node'), ('anything', 'anyth'), ('(', '('), ('including', 'includ'), ('images', 'imag'), (')', ')'), ('edges', 'edg'), ('hold', 'hold'), ('arbitrary', 'arbitrari'), ('data', 'data'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Main', 'main'), ('advantage', 'advantag'), ('using', 'use'), ('NetworkX', 'networkx'), ('nodes', 'node'), ('anything', 'anyth'), ('(', '('), ('including', 'includ'), ('images', 'imag'), (')', ')'), ('edges', 'edg'), ('hold', 'hold'), ('arbitrary', 'arbitrari'), ('data', 'data'), ('.', '.')]

>> Lemmatization: 
 [('Main', 'Main'), ('advantage', 'advantage'), ('using', 'using'), ('NetworkX', 'NetworkX'), ('nodes', 'node'), ('anything', 'anything'), ('(', '('), ('including', 'including'), ('images', 'image'), (')', ')'), ('edges', 'edge'), ('hold', 'hold'), ('arbitrary', 'arbitrary'), ('data', 'data'), ('.', '.')]



============================ Sentence 69 =============================

Prof. Arjun V. Bala #3150713 (PDS)      Unit 02 – Data Science and Python ‹#›  8) Beautiful Soup Beautiful Soup is a Python package for parsing HTML and XML documents. 


>> Tokens are: 
 ['Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '02', '–', 'Data', 'Science', 'Python', '‹', '#', '›', '8', ')', 'Beautiful', 'Soup', 'Beautiful', 'Soup', 'Python', 'package', 'parsing', 'HTML', 'XML', 'documents', '.']

>> Bigrams are: 
 [('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '02'), ('02', '–'), ('–', 'Data'), ('Data', 'Science'), ('Science', 'Python'), ('Python', '‹'), ('‹', '#'), ('#', '›'), ('›', '8'), ('8', ')'), (')', 'Beautiful'), ('Beautiful', 'Soup'), ('Soup', 'Beautiful'), ('Beautiful', 'Soup'), ('Soup', 'Python'), ('Python', 'package'), ('package', 'parsing'), ('parsing', 'HTML'), ('HTML', 'XML'), ('XML', 'documents'), ('documents', '.')]

>> Trigrams are: 
 [('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '02'), ('Unit', '02', '–'), ('02', '–', 'Data'), ('–', 'Data', 'Science'), ('Data', 'Science', 'Python'), ('Science', 'Python', '‹'), ('Python', '‹', '#'), ('‹', '#', '›'), ('#', '›', '8'), ('›', '8', ')'), ('8', ')', 'Beautiful'), (')', 'Beautiful', 'Soup'), ('Beautiful', 'Soup', 'Beautiful'), ('Soup', 'Beautiful', 'Soup'), ('Beautiful', 'Soup', 'Python'), ('Soup', 'Python', 'package'), ('Python', 'package', 'parsing'), ('package', 'parsing', 'HTML'), ('parsing', 'HTML', 'XML'), ('HTML', 'XML', 'documents'), ('XML', 'documents', '.')]

>> POS Tags are: 
 [('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('02', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Science', 'NNP'), ('Python', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('8', 'CD'), (')', ')'), ('Beautiful', 'NNP'), ('Soup', 'NNP'), ('Beautiful', 'NNP'), ('Soup', 'NNP'), ('Python', 'NNP'), ('package', 'NN'), ('parsing', 'VBG'), ('HTML', 'NNP'), ('XML', 'NNP'), ('documents', 'NNS'), ('.', '.')]

 (S
  (NP Prof./NNP Arjun/NNP V./NNP Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  02/CD
  (NP –/NNP Data/NNP Science/NNP Python/NNP ‹/NNP)
  #/#
  (NP ›/NNP)
  8/CD
  )/)
  (NP
    Beautiful/NNP
    Soup/NNP
    Beautiful/NNP
    Soup/NNP
    Python/NNP
    package/NN)
  parsing/VBG
  (NP HTML/NNP XML/NNP documents/NNS)
  ./.) 


>> Noun Phrases are: 
 ['Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Science Python ‹', '›', 'Beautiful Soup Beautiful Soup Python package', 'HTML XML documents']

>> Named Entities are: 
 [('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Python'), ('PERSON', 'Beautiful Soup Beautiful Soup Python'), ('ORGANIZATION', 'HTML')] 

>> Stemming using Porter Stemmer: 
 [('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('02', '02'), ('–', '–'), ('Data', 'data'), ('Science', 'scienc'), ('Python', 'python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('8', '8'), (')', ')'), ('Beautiful', 'beauti'), ('Soup', 'soup'), ('Beautiful', 'beauti'), ('Soup', 'soup'), ('Python', 'python'), ('package', 'packag'), ('parsing', 'pars'), ('HTML', 'html'), ('XML', 'xml'), ('documents', 'document'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('02', '02'), ('–', '–'), ('Data', 'data'), ('Science', 'scienc'), ('Python', 'python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('8', '8'), (')', ')'), ('Beautiful', 'beauti'), ('Soup', 'soup'), ('Beautiful', 'beauti'), ('Soup', 'soup'), ('Python', 'python'), ('package', 'packag'), ('parsing', 'pars'), ('HTML', 'html'), ('XML', 'xml'), ('documents', 'document'), ('.', '.')]

>> Lemmatization: 
 [('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('02', '02'), ('–', '–'), ('Data', 'Data'), ('Science', 'Science'), ('Python', 'Python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('8', '8'), (')', ')'), ('Beautiful', 'Beautiful'), ('Soup', 'Soup'), ('Beautiful', 'Beautiful'), ('Soup', 'Soup'), ('Python', 'Python'), ('package', 'package'), ('parsing', 'parsing'), ('HTML', 'HTML'), ('XML', 'XML'), ('documents', 'document'), ('.', '.')]



============================ Sentence 70 =============================

It creates a parse tree for parsed pages that can be used to extract data from HTML, which is useful for web scraping. 


>> Tokens are: 
 ['It', 'creates', 'parse', 'tree', 'parsed', 'pages', 'used', 'extract', 'data', 'HTML', ',', 'useful', 'web', 'scraping', '.']

>> Bigrams are: 
 [('It', 'creates'), ('creates', 'parse'), ('parse', 'tree'), ('tree', 'parsed'), ('parsed', 'pages'), ('pages', 'used'), ('used', 'extract'), ('extract', 'data'), ('data', 'HTML'), ('HTML', ','), (',', 'useful'), ('useful', 'web'), ('web', 'scraping'), ('scraping', '.')]

>> Trigrams are: 
 [('It', 'creates', 'parse'), ('creates', 'parse', 'tree'), ('parse', 'tree', 'parsed'), ('tree', 'parsed', 'pages'), ('parsed', 'pages', 'used'), ('pages', 'used', 'extract'), ('used', 'extract', 'data'), ('extract', 'data', 'HTML'), ('data', 'HTML', ','), ('HTML', ',', 'useful'), (',', 'useful', 'web'), ('useful', 'web', 'scraping'), ('web', 'scraping', '.')]

>> POS Tags are: 
 [('It', 'PRP'), ('creates', 'VBZ'), ('parse', 'JJ'), ('tree', 'NN'), ('parsed', 'VBD'), ('pages', 'NNS'), ('used', 'VBN'), ('extract', 'JJ'), ('data', 'NNS'), ('HTML', 'NNP'), (',', ','), ('useful', 'JJ'), ('web', 'NN'), ('scraping', 'NN'), ('.', '.')]

 (S
  It/PRP
  creates/VBZ
  (NP parse/JJ tree/NN)
  parsed/VBD
  (NP pages/NNS)
  used/VBN
  (NP extract/JJ data/NNS HTML/NNP)
  ,/,
  (NP useful/JJ web/NN scraping/NN)
  ./.) 


>> Noun Phrases are: 
 ['parse tree', 'pages', 'extract data HTML', 'useful web scraping']

>> Named Entities are: 
 [('ORGANIZATION', 'HTML')] 

>> Stemming using Porter Stemmer: 
 [('It', 'it'), ('creates', 'creat'), ('parse', 'pars'), ('tree', 'tree'), ('parsed', 'pars'), ('pages', 'page'), ('used', 'use'), ('extract', 'extract'), ('data', 'data'), ('HTML', 'html'), (',', ','), ('useful', 'use'), ('web', 'web'), ('scraping', 'scrape'), ('.', '.')]

>> Stemming using Snowball Stemmer: 
 [('It', 'it'), ('creates', 'creat'), ('parse', 'pars'), ('tree', 'tree'), ('parsed', 'pars'), ('pages', 'page'), ('used', 'use'), ('extract', 'extract'), ('data', 'data'), ('HTML', 'html'), (',', ','), ('useful', 'use'), ('web', 'web'), ('scraping', 'scrape'), ('.', '.')]

>> Lemmatization: 
 [('It', 'It'), ('creates', 'creates'), ('parse', 'parse'), ('tree', 'tree'), ('parsed', 'parsed'), ('pages', 'page'), ('used', 'used'), ('extract', 'extract'), ('data', 'data'), ('HTML', 'HTML'), (',', ','), ('useful', 'useful'), ('web', 'web'), ('scraping', 'scraping'), ('.', '.')]



============================ Sentence 71 =============================

Prof. Arjun V. Bala #3150713 (PDS)      Unit 02 – Data Science and Python ‹#›                                /docProps/thumbnail.jpeg 


>> Tokens are: 
 ['Prof.', 'Arjun', 'V.', 'Bala', '#', '3150713', '(', 'PDS', ')', '\uf077', 'Unit', '02', '–', 'Data', 'Science', 'Python', '‹', '#', '›', '/docProps/thumbnail.jpeg']

>> Bigrams are: 
 [('Prof.', 'Arjun'), ('Arjun', 'V.'), ('V.', 'Bala'), ('Bala', '#'), ('#', '3150713'), ('3150713', '('), ('(', 'PDS'), ('PDS', ')'), (')', '\uf077'), ('\uf077', 'Unit'), ('Unit', '02'), ('02', '–'), ('–', 'Data'), ('Data', 'Science'), ('Science', 'Python'), ('Python', '‹'), ('‹', '#'), ('#', '›'), ('›', '/docProps/thumbnail.jpeg')]

>> Trigrams are: 
 [('Prof.', 'Arjun', 'V.'), ('Arjun', 'V.', 'Bala'), ('V.', 'Bala', '#'), ('Bala', '#', '3150713'), ('#', '3150713', '('), ('3150713', '(', 'PDS'), ('(', 'PDS', ')'), ('PDS', ')', '\uf077'), (')', '\uf077', 'Unit'), ('\uf077', 'Unit', '02'), ('Unit', '02', '–'), ('02', '–', 'Data'), ('–', 'Data', 'Science'), ('Data', 'Science', 'Python'), ('Science', 'Python', '‹'), ('Python', '‹', '#'), ('‹', '#', '›'), ('#', '›', '/docProps/thumbnail.jpeg')]

>> POS Tags are: 
 [('Prof.', 'NNP'), ('Arjun', 'NNP'), ('V.', 'NNP'), ('Bala', 'NNP'), ('#', '#'), ('3150713', 'CD'), ('(', '('), ('PDS', 'NNP'), (')', ')'), ('\uf077', 'VBD'), ('Unit', 'NNP'), ('02', 'CD'), ('–', 'NNP'), ('Data', 'NNP'), ('Science', 'NNP'), ('Python', 'NNP'), ('‹', 'NNP'), ('#', '#'), ('›', 'NNP'), ('/docProps/thumbnail.jpeg', 'NN')]

 (S
  (NP Prof./NNP Arjun/NNP V./NNP Bala/NNP)
  #/#
  3150713/CD
  (/(
  (NP PDS/NNP)
  )/)
  /VBD
  (NP Unit/NNP)
  02/CD
  (NP –/NNP Data/NNP Science/NNP Python/NNP ‹/NNP)
  #/#
  (NP ›/NNP /docProps/thumbnail.jpeg/NN)) 


>> Noun Phrases are: 
 ['Prof. Arjun V. Bala', 'PDS', 'Unit', '– Data Science Python ‹', '› /docProps/thumbnail.jpeg']

>> Named Entities are: 
 [('ORGANIZATION', 'PDS'), ('ORGANIZATION', 'Unit'), ('PERSON', 'Python')] 

>> Stemming using Porter Stemmer: 
 [('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pd'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('02', '02'), ('–', '–'), ('Data', 'data'), ('Science', 'scienc'), ('Python', 'python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('/docProps/thumbnail.jpeg', '/docprops/thumbnail.jpeg')]

>> Stemming using Snowball Stemmer: 
 [('Prof.', 'prof.'), ('Arjun', 'arjun'), ('V.', 'v.'), ('Bala', 'bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'pds'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'unit'), ('02', '02'), ('–', '–'), ('Data', 'data'), ('Science', 'scienc'), ('Python', 'python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('/docProps/thumbnail.jpeg', '/docprops/thumbnail.jpeg')]

>> Lemmatization: 
 [('Prof.', 'Prof.'), ('Arjun', 'Arjun'), ('V.', 'V.'), ('Bala', 'Bala'), ('#', '#'), ('3150713', '3150713'), ('(', '('), ('PDS', 'PDS'), (')', ')'), ('\uf077', '\uf077'), ('Unit', 'Unit'), ('02', '02'), ('–', '–'), ('Data', 'Data'), ('Science', 'Science'), ('Python', 'Python'), ('‹', '‹'), ('#', '#'), ('›', '›'), ('/docProps/thumbnail.jpeg', '/docProps/thumbnail.jpeg')]

