Django


1. What is Django?
    
· Django  is a free and open source web application framework written in Python.


2. What is Web Framework?

· A web framework is a set of components that helps you to develop websites faster and easier.

· When you're building a website, you always need a similar set of components: a way to handle user authentication (signing up, signing in, signing out), a management panel for your website, forms, a way to upload files, etc.

· Luckily, Developers build web frameworks that give you ready made components.

· Frameworks exist to save you from having to reinvent the wheel and to help alleviate some of the overhead when you’re building a new site.


3. Why Django?

· With Django, you can take Web applications from concept to launch in a matter of hours. Django takes care of much of the hassle of Web development, so you can focus on writing your app without needing to reinvent the wheel. It’s free and open source.

· Ridiculously Fast:
Django was designed to help developers to take applications from 
concept to completion as quickly as possible.

· Fully Loaded:
Django includes dozens of extra features you can use to handle 
common Web development tasks. Django takes care of user 
authentication, content administration, site maps, RSS feeds, and many 
more tasks — right out of the box.

· Reassuringly secure:
Django takes security seriously and helps developers to avoid many
common security mistakes, such as SQL injection, cross-site scripting,
cross-site request forgery and clickjacking. Its user authentication
system provides a secure way to manage user accounts and
passwords.

· Exceedingly scalable:
Some of the busiest sites on the planet use Django’s ability to quickly
and flexibly scale to meet the heaviest traffic demands.

· Incredibly versatile:
Companies, organizations and governments have used Django to build
all sorts of things — from content management systems to social
networks to scientific computing platforms.


Reference: https://www.djangoproject.com/start/overview/


· Django framework design principles:

Don’t repeat yourself (DRY) Principle:

	Reference: https://www.webforefront.com/django/designprinciples.html



· Django Custom User Model:
· https://testdriven.io/blog/django-custom-user-model/
· https://simpleisbetterthancomplex.com/tutorial/2016/07/22/how-to-extend-django-user-model.html